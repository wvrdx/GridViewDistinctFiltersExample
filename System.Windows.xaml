<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:c="http://schemas.telerik.com/2008/xaml/compile"
    xmlns:mat="clr-namespace:Telerik.Windows.Controls.MaterialControls;assembly=Telerik.Windows.Controls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
    xmlns:telerik1="clr-namespace:Telerik.Windows.Controls;assembly=Telerik.Windows.Controls"
    mc:Ignorable="c">
    <ResourceDictionary.MergedDictionaries>
        <telerik:FluentResourceDictionary />
    </ResourceDictionary.MergedDictionaries>
    <telerik1:ThicknessToOrientedThicknessConverter x:Key="ThicknessToOrientedThicknessConverter" />
    <telerik1:NullToVisibilityConverter x:Key="NullToVisibilityConverter" />
    <Geometry x:Key="ArrowTopRight8x8">M0,0 L8,0 8,8 z</Geometry>
    <sys:String x:Key="GlyphArrowChevronUp"></sys:String>
    <sys:String x:Key="GlyphArrowChevronRight"></sys:String>
    <sys:String x:Key="GlyphArrowChevronDown"></sys:String>
    <sys:String x:Key="GlyphArrowChevronLeft"></sys:String>
    <sys:String x:Key="GlyphMoreVertical"></sys:String>
    <sys:String x:Key="GlyphMoreHorizontal"></sys:String>
    <sys:String x:Key="GlyphCheck"></sys:String>
    <SolidColorBrush x:Key="RadHyperlinkButtonNormalBrush" Color="#008EFF" />
    <SolidColorBrush x:Key="RadHyperlinkButtonHoverBrush" Color="#4CB0FF" />
    <ControlTemplate x:Key="ErrorTooltipTemplate" TargetType="ToolTip">
        <Grid
            x:Name="RootVisual"
            HorizontalAlignment="Right"
            Opacity="0"
            RenderTransformOrigin="0 0"
            SnapsToDevicePixels="True">
            <Grid.RenderTransform>
                <TranslateTransform x:Name="xform" X="-25" />
            </Grid.RenderTransform>
            <Border
                Margin="1,0,0,0"
                Background="{telerik1:FluentResource ResourceKey=ValidationBrush}"
                UseLayoutRounding="True">
                <ContentPresenter
                    Margin="10,6"
                    VerticalAlignment="Center"
                    Content="{Binding ErrorContent}"
                    TextBlock.FontSize="{telerik1:FluentResource ResourceKey=FontSize}"
                    TextBlock.Foreground="{telerik1:FluentResource ResourceKey=MarkerInvertedBrush}" />
            </Border>
            <ContentControl />
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="OpenStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0" />
                        <VisualTransition GeneratedDuration="0:0:0.3" To="Open">
                            <Storyboard>
                                <DoubleAnimation
                                    Storyboard.TargetName="xform"
                                    Storyboard.TargetProperty="X"
                                    To="0"
                                    Duration="0:0:0.3">
                                    <DoubleAnimation.EasingFunction>
                                        <BackEase Amplitude=".4" EasingMode="EaseOut" />
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation
                                    Storyboard.TargetName="RootVisual"
                                    Storyboard.TargetProperty="Opacity"
                                    To="1"
                                    Duration="0:0:0.3" />
                            </Storyboard>
                        </VisualTransition>
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Closed">
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="RootVisual"
                                Storyboard.TargetProperty="Opacity"
                                To="0"
                                Duration="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Open">
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="xform"
                                Storyboard.TargetProperty="X"
                                To="0"
                                Duration="0" />
                            <DoubleAnimation
                                Storyboard.TargetName="RootVisual"
                                Storyboard.TargetProperty="Opacity"
                                To="1"
                                Duration="0" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="ValidationTooltipTemplate">
        <Grid VerticalAlignment="Top" SnapsToDevicePixels="True">
            <AdornedElementPlaceholder x:Name="Holder" />
            <Border
                BorderBrush="{telerik1:FluentResource ResourceKey=ValidationBrush}"
                BorderThickness="1"
                CornerRadius="{telerik1:FluentResource ResourceKey=CornerRadius}" />
            <Path
                Width="8"
                Height="8"
                Margin="0,1,1,0"
                HorizontalAlignment="Right"
                VerticalAlignment="Top"
                Data="{StaticResource ArrowTopRight8x8}"
                Fill="{telerik1:FluentResource ResourceKey=ValidationBrush}" />
            <ToolTipService.ToolTip>
                <ToolTip
                    x:Name="PART_ToolTip"
                    DataContext="{Binding RelativeSource={RelativeSource Mode=Self}, Path=PlacementTarget.DataContext}"
                    Placement="Right"
                    Template="{StaticResource ErrorTooltipTemplate}" />
            </ToolTipService.ToolTip>
        </Grid>
    </ControlTemplate>
    <Style x:Key="ShadowStyle" TargetType="{x:Type mat:Shadow}">
        <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background, Mode=OneWay}" />
        <Setter Property="ShadowDepth" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.ShadowDepth), Mode=OneWay, FallbackValue=Depth1}" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Theme" Value="Material" />
    </Style>
    <Style BasedOn="{StaticResource ShadowStyle}" TargetType="{x:Type mat:Shadow}" />
    <RadialGradientBrush x:Key="FluentRadialGradient">
        <RadialGradientBrush.GradientStops>
            <GradientStop Offset="0.2" Color="#59FFFFFF" />
            <GradientStop Offset="0.9" Color="Transparent" />
            <GradientStop Offset="1" Color="Transparent" />
            <GradientStop Offset="1.1" Color="Transparent" />
        </RadialGradientBrush.GradientStops>
    </RadialGradientBrush>
    <RadialGradientBrush x:Key="FluentRadialPressedGradient" Center=".5 .5" GradientOrigin=".5 .5" RadiusX=".3" RadiusY=".3">
        <GradientStop Offset="1" Color="Transparent" />
        <GradientStop Offset=".75" Color="Transparent" />
        <GradientStop Offset=".55" Color="#35FFFFFF" />
        <GradientStop Offset="0.4" Color="#35FFFFFF" />
        <GradientStop Offset="0.2" Color="Transparent" />
    </RadialGradientBrush>
    <RadialGradientBrush x:Key="FluentBorderGradient" RadiusX=".33" RadiusY="1.5">
        <GradientStop Offset="1" Color="Transparent" />
        <GradientStop Offset=".4" Color="#7FFFFFFF" />
    </RadialGradientBrush>
    <Style x:Key="FluentControlStyle" TargetType="{x:Type mat:FluentControl}">
        <Setter Property="IsSmartClipped" Value="True" />
        <Setter Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessToOrientedThicknessConverter}, ConverterParameter=TopBottom}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="RippleBrush" Value="{StaticResource FluentRadialGradient}" />
        <Setter Property="BorderGradient" Value="{StaticResource FluentBorderGradient}" />
        <Setter Property="mat:MaterialAssist.PressedBrush" Value="{StaticResource FluentRadialPressedGradient}" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type mat:FluentControl}">
                    <Grid Background="Transparent">
                        <Canvas
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            IsHitTestVisible="False"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">

                            <!--  this is the feedback element used in code  -->
                            <Ellipse
                                x:Name="PART_FeedbackElement"
                                Canvas.Left="{TemplateBinding RippleX}"
                                Canvas.Top="{TemplateBinding RippleY}"
                                Width="{TemplateBinding RippleSize}"
                                Height="{TemplateBinding RippleSize}"
                                Fill="{TemplateBinding RippleBrush}"
                                Opacity="0"
                                RenderTransformOrigin=".5 .5">
                                <Ellipse.RenderTransform>

                                    <!--  PART_ScaleTransform ScaleTranform used in code  -->
                                    <ScaleTransform x:Name="PART_ScaleTransform" ScaleX="1" ScaleY="1" />
                                </Ellipse.RenderTransform>
                            </Ellipse>
                        </Canvas>
                        <mat:InnerGlow
                            x:Name="innerGlow"
                            Opacity="0"
                            Visibility="Collapsed" />
                        <Border
                            x:Name="rootBorder"
                            Background="{x:Null}"
                            BorderBrush="{TemplateBinding BorderGradient}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <ContentControl
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Content}"
                                Focusable="False"
                                IsTabStop="False"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="MouseIn" To="MousePressed">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames
                                                FillBehavior="HoldEnd"
                                                Storyboard.TargetName="PART_FeedbackElement"
                                                Storyboard.TargetProperty="Opacity">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.050" Value="1" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:1.0" Value="1" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames
                                                FillBehavior="HoldEnd"
                                                Storyboard.TargetName="PART_FeedbackElement"
                                                Storyboard.TargetProperty="RenderTransform.ScaleX">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="1">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <SineEase EasingMode="EaseOut" />
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.080" Value=".3">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <SineEase EasingMode="EaseIn" />
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                                <EasingDoubleKeyFrame KeyTime="0:0:2" Value="2">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <SineEase EasingMode="EaseOut" />
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames
                                                FillBehavior="HoldEnd"
                                                Storyboard.TargetName="PART_FeedbackElement"
                                                Storyboard.TargetProperty="RenderTransform.ScaleY">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="1">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <SineEase EasingMode="EaseOut" />
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.080" Value=".3">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <SineEase EasingMode="EaseIn" />
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                                <EasingDoubleKeyFrame KeyTime="0:0:2" Value="2">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <SineEase EasingMode="EaseOut" />
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="MousePressed" To="MouseIn">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames
                                                FillBehavior="HoldEnd"
                                                Storyboard.TargetName="PART_FeedbackElement"
                                                Storyboard.TargetProperty="Opacity">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.220" Value="0" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.450" Value="0" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.650" Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames
                                                FillBehavior="HoldEnd"
                                                Storyboard.TargetName="PART_FeedbackElement"
                                                Storyboard.TargetProperty="RenderTransform.ScaleX">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.150" Value="2">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <SineEase EasingMode="EaseIn" />
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.450" Value="0" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.500" Value="0" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.650" Value="1">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <SineEase EasingMode="EaseIn" />
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames
                                                FillBehavior="HoldEnd"
                                                Storyboard.TargetName="PART_FeedbackElement"
                                                Storyboard.TargetProperty="RenderTransform.ScaleY">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.150" Value="2">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <SineEase EasingMode="EaseIn" />
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.450" Value="0" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.500" Value="0" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.650" Value="1">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <SineEase EasingMode="EaseIn" />
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="MousePressed" To="MouseOut" />
                                    <VisualTransition From="MousePressed" To="Normal" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="PART_FeedbackElement"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="0" />

                                        <!--
                                            Accessing BorderBrush.Opacity is feasable because the brush is cloned in code behind.
                                            Do not attempt on frozen resources or add a TemplatedParent binding in the brush's properies to allow operations such as this.
                                        -->
                                        <DoubleAnimation
                                            Storyboard.TargetName="rootBorder"
                                            Storyboard.TargetProperty="BorderBrush.Opacity"
                                            To="0"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MousePressed">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="PART_FeedbackElement"
                                            Storyboard.TargetProperty="RenderTransform.ScaleX"
                                            To="1" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="PART_FeedbackElement"
                                            Storyboard.TargetProperty="RenderTransform.ScaleY"
                                            To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOut">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="PART_FeedbackElement"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="0:0:0.050" />

                                        <!--  See upper comment  -->
                                        <DoubleAnimation
                                            Storyboard.TargetName="rootBorder"
                                            Storyboard.TargetProperty="BorderBrush.Opacity"
                                            To="0"
                                            Duration="0:0:0.050" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseIn">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="PART_FeedbackElement"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0:0:0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PART_FeedbackElement" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.PressedBrush)}" />
                        </Trigger>
                        <Trigger Property="EffectMode" Value="Glow">
                            <Setter TargetName="PART_FeedbackElement" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="innerGlow" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="IsRippleEnabled" Value="False" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="InnerGlowStory">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames
                                            FillBehavior="HoldEnd"
                                            Storyboard.TargetName="innerGlow"
                                            Storyboard.TargetProperty="Opacity">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.060" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="InnerGlowStory" />
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource FluentControlStyle}" TargetType="{x:Type mat:FluentControl}" />
    <Style x:Key="RadGlyphStyle" TargetType="{x:Type telerik1:RadGlyph}">
        <Setter Property="Font" Value="TelerikWebUI" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
    </Style>
    <Style BasedOn="{StaticResource RadGlyphStyle}" TargetType="{x:Type telerik1:RadGlyph}" />
    <Style x:Key="ButtonStyle" TargetType="Button">
        <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:FluentResource ResourceKey=MouseOverBrush}" />
        <Setter Property="mat:MaterialAssist.PressedBrush" Value="{telerik1:FluentResource ResourceKey=PressedBrush}" />
        <Setter Property="mat:MaterialAssist.FocusBrush" Value="{telerik1:FluentResource ResourceKey=AccentFocusedBrush}" />
        <Setter Property="mat:MaterialAssist.CornerRadius" Value="{telerik1:FluentResource ResourceKey=CornerRadius}" />
        <Setter Property="FontFamily" Value="{telerik1:FluentResource ResourceKey=FontFamily}" />
        <Setter Property="FontSize" Value="{telerik1:FluentResource ResourceKey=FontSize}" />
        <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=MarkerBrush}" />
        <Setter Property="Background" Value="{telerik1:FluentResource ResourceKey=MainBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:FluentResource ResourceKey=MainBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border
                            x:Name="BorderVisual"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Border
                            x:Name="FocusVisual"
                            Background="{x:Null}"
                            BorderBrush="{TemplateBinding mat:MaterialAssist.FocusBrush}"
                            BorderThickness="{telerik1:FluentResource ResourceKey=FocusThickness}"
                            CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                            IsHitTestVisible="False"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            Visibility="Collapsed" />
                        <mat:FluentControl
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                            IsSmartClipped="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <ContentPresenter
                                x:Name="Content"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Content}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                TextBlock.Foreground="{TemplateBinding Foreground}" />
                        </mat:FluentControl>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <!--  General IsKeyBoardFocused setters  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused" Value="True" />
                                <Condition Property="IsPressed" Value="False" />
                                <Condition Property="IsMouseOver" Value="False" />
                                <Condition Property="IsEnabled" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Visible" />
                        </MultiTrigger>

                        <!--  General IsMouseOver setters  -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}" />
                            <Setter TargetName="BorderVisual" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}" />
                        </Trigger>

                        <!--  General IsPressed setters  -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.PressedBrush), Mode=OneWay}" />
                            <Setter TargetName="BorderVisual" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.PressedBrush), Mode=OneWay}" />
                        </Trigger>

                        <!--  disabled and focused  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                                <Condition Property="IsKeyboardFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Collapsed" />
                        </MultiTrigger>

                        <!--  disabled  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Content" Property="Opacity" Value="{telerik1:FluentResource ResourceKey=DisabledOpacity}" />
                            <Setter Property="Background" Value="{telerik1:FluentResource ResourceKey=AlternativeBrush}" />
                            <Setter Property="BorderBrush" Value="{telerik1:FluentResource ResourceKey=AlternativeBrush}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource ButtonStyle}" TargetType="Button" />
    <Style x:Key="RepeatButtonStyle" TargetType="RepeatButton">
        <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:FluentResource ResourceKey=MouseOverBrush}" />
        <Setter Property="mat:MaterialAssist.PressedBrush" Value="{telerik1:FluentResource ResourceKey=PressedBrush}" />
        <Setter Property="mat:MaterialAssist.FocusBrush" Value="{telerik1:FluentResource ResourceKey=AccentFocusedBrush}" />
        <Setter Property="mat:MaterialAssist.CornerRadius" Value="{telerik1:FluentResource ResourceKey=CornerRadius}" />
        <Setter Property="FontFamily" Value="{telerik1:FluentResource ResourceKey=FontFamily}" />
        <Setter Property="FontSize" Value="{telerik1:FluentResource ResourceKey=FontSize}" />
        <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=MarkerBrush}" />
        <Setter Property="Background" Value="{telerik1:FluentResource ResourceKey=MainBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:FluentResource ResourceKey=MainBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Grid>
                        <Border
                            x:Name="BorderVisual"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Border
                            x:Name="FocusVisual"
                            Background="{x:Null}"
                            BorderBrush="{TemplateBinding mat:MaterialAssist.FocusBrush}"
                            BorderThickness="{telerik1:FluentResource ResourceKey=FocusThickness}"
                            CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                            IsHitTestVisible="False"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            Visibility="Collapsed" />
                        <mat:FluentControl
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                            EffectMode="Glow"
                            IsSmartClipped="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <ContentPresenter
                                x:Name="Content"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Content}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                TextBlock.Foreground="{TemplateBinding Foreground}" />
                        </mat:FluentControl>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused" Value="True" />
                                <Condition Property="IsPressed" Value="False" />
                                <Condition Property="IsMouseOver" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}" />
                            <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(mat:MaterialAssist.PressedBrush), Mode=OneWay}" />
                            <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=(mat:MaterialAssist.PressedBrush), Mode=OneWay}" />
                        </Trigger>

                        <!--  disabled and focused  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                                <Condition Property="IsKeyboardFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Collapsed" />
                        </MultiTrigger>

                        <!--  disabled  -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Content" Property="Opacity" Value="{telerik1:FluentResource ResourceKey=DisabledOpacity}" />
                            <Setter Property="Background" Value="{telerik1:FluentResource ResourceKey=AlternativeBrush}" />
                            <Setter Property="BorderBrush" Value="{telerik1:FluentResource ResourceKey=AlternativeBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource RepeatButtonStyle}" TargetType="RepeatButton" />
    <Style x:Key="RadioButtonStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="mat:MaterialAssist.FocusBrush" Value="{telerik1:FluentResource ResourceKey=AccentFocusedBrush}" />
        <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:FluentResource ResourceKey=AccentMouseOverBrush}" />
        <Setter Property="mat:MaterialAssist.PressedBrush" Value="{telerik1:FluentResource ResourceKey=AccentPressedBrush}" />
        <Setter Property="mat:MaterialAssist.CheckedBrush" Value="{telerik1:FluentResource ResourceKey=AccentBrush}" />
        <Setter Property="mat:MaterialAssist.CornerRadius" Value="{telerik1:FluentResource ResourceKey=CornerRadius}" />
        <Setter Property="FontFamily" Value="{telerik1:FluentResource ResourceKey=FontFamily}" />
        <Setter Property="FontSize" Value="{telerik1:FluentResource ResourceKey=FontSize}" />
        <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=MarkerBrush}" />
        <Setter Property="Background" Value="{telerik1:FluentResource ResourceKey=PrimaryBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:FluentResource ResourceKey=BasicBrush}" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Padding" Value="5,0" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid
                        x:Name="templateRoot"
                        Background="Transparent"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Border
                                x:Name="radioButtonBorder"
                                Width="18"
                                Height="18"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="10">
                                <Grid x:Name="markGrid" Margin="2">
                                    <Ellipse
                                        x:Name="optionMark"
                                        Fill="{TemplateBinding mat:MaterialAssist.CheckedBrush}"
                                        Opacity="0"
                                        StrokeThickness="0" />
                                    <Ellipse
                                        x:Name="indeterminateMark"
                                        Stroke="{TemplateBinding BorderBrush}"
                                        StrokeThickness="3"
                                        Visibility="Collapsed" />
                                </Grid>
                            </Border>
                        </Grid>
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Grid.Column="1"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content, Converter={StaticResource NullToVisibilityConverter}}" />
                    </Grid>
                    <ControlTemplate.Triggers>

                        <!--  IsChecked True  -->
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="optionMark" Property="Opacity" Value="1" />
                            <Setter TargetName="radioButtonBorder" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CheckedBrush), Mode=OneWay}" />
                            <Setter TargetName="radioButtonBorder" Property="Background" Value="{telerik1:FluentResource ResourceKey=PrimaryBackgroundBrush}" />
                        </Trigger>

                        <!--  IsChecked Null  -->
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="optionMark" Property="Opacity" Value="0" />
                            <Setter TargetName="indeterminateMark" Property="Visibility" Value="Visible" />
                        </Trigger>

                        <!--  Focused  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused" Value="True" />
                                <Condition Property="IsMouseOver" Value="False" />
                                <Condition Property="IsPressed" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="radioButtonBorder" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.FocusBrush), Mode=OneWay}" />
                            <Setter TargetName="radioButtonBorder" Property="Background" Value="{telerik1:FluentResource ResourceKey=PrimaryMouseOverBrush}" />
                            <Setter TargetName="optionMark" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.FocusBrush), Mode=OneWay}" />
                            <Setter TargetName="indeterminateMark" Property="Stroke" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.FocusBrush), Mode=OneWay}" />
                        </MultiTrigger>

                        <!--  IsMouseOver  -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="radioButtonBorder" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}" />
                            <Setter TargetName="radioButtonBorder" Property="Background" Value="{telerik1:FluentResource ResourceKey=PrimaryMouseOverBrush}" />
                            <Setter TargetName="optionMark" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}" />
                            <Setter TargetName="indeterminateMark" Property="Stroke" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}" />
                        </Trigger>

                        <!--  IsPressed  -->
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="radioButtonBorder" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.PressedBrush), Mode=OneWay}" />
                            <Setter TargetName="optionMark" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.PressedBrush), Mode=OneWay}" />
                            <Setter TargetName="indeterminateMark" Property="Stroke" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.PressedBrush), Mode=OneWay}" />
                            <Setter TargetName="indeterminateMark" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="radioButtonBorder" Property="BorderBrush" Value="{telerik1:FluentResource ResourceKey=BasicBrush}" />
                            <Setter TargetName="radioButtonBorder" Property="Background" Value="{telerik1:FluentResource ResourceKey=AlternativeBrush}" />
                            <Setter TargetName="contentPresenter" Property="Opacity" Value="{telerik1:FluentResource ResourceKey=DisabledOpacity}" />
                            <Setter TargetName="markGrid" Property="Opacity" Value="{telerik1:FluentResource ResourceKey=DisabledOpacity}" />
                            <Setter TargetName="optionMark" Property="Fill" Value="{telerik1:FluentResource ResourceKey=MarkerBrush}" />
                            <Setter TargetName="indeterminateMark" Property="Stroke" Value="{telerik1:FluentResource ResourceKey=MarkerBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource RadioButtonStyle}" TargetType="RadioButton" />
    <DataTemplate x:Key="RepeatButtonLineUpTemplate">
        <telerik1:RadGlyph Glyph="{StaticResource GlyphArrowChevronUp}" />
    </DataTemplate>
    <DataTemplate x:Key="RepeatButtonLineDownTemplate">
        <telerik1:RadGlyph Glyph="{StaticResource GlyphArrowChevronDown}" />
    </DataTemplate>
    <DataTemplate x:Key="RepeatButtonLineLeftTemplate">
        <telerik1:RadGlyph Glyph="{StaticResource GlyphArrowChevronLeft}" />
    </DataTemplate>
    <DataTemplate x:Key="RepeatButtonLineRightTemplate">
        <telerik1:RadGlyph Glyph="{StaticResource GlyphArrowChevronRight}" />
    </DataTemplate>
    <Style
        x:Key="RepeatButtonLineBaseStyle"
        BasedOn="{StaticResource RepeatButtonStyle}"
        TargetType="RepeatButton">
        <Setter Property="Padding" Value="0" />
        <Setter Property="mat:MaterialAssist.CornerRadius" Value="0" />
        <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=IconBrush}" />
        <Setter Property="Background" Value="{telerik1:FluentResource ResourceKey=AlternativeBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:FluentResource ResourceKey=MainBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Focusable" Value="False" />
    </Style>
    <Style
        x:Key="RepeatButtonLineUpStyle"
        BasedOn="{StaticResource RepeatButtonLineBaseStyle}"
        TargetType="RepeatButton">
        <Setter Property="ContentTemplate" Value="{StaticResource RepeatButtonLineUpTemplate}" />
    </Style>
    <Style
        x:Key="RepeatButtonLineDownStyle"
        BasedOn="{StaticResource RepeatButtonLineBaseStyle}"
        TargetType="RepeatButton">
        <Setter Property="ContentTemplate" Value="{StaticResource RepeatButtonLineDownTemplate}" />
    </Style>
    <Style
        x:Key="RepeatButtonLineLeftStyle"
        BasedOn="{StaticResource RepeatButtonLineBaseStyle}"
        TargetType="RepeatButton">
        <Setter Property="ContentTemplate" Value="{StaticResource RepeatButtonLineLeftTemplate}" />
        <Style.Triggers>
            <Trigger Property="FlowDirection" Value="RightToLeft">
                <Setter Property="ContentTemplate" Value="{StaticResource RepeatButtonLineRightTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="RepeatButtonLineRightStyle"
        BasedOn="{StaticResource RepeatButtonLineBaseStyle}"
        TargetType="RepeatButton">
        <Setter Property="ContentTemplate" Value="{StaticResource RepeatButtonLineRightTemplate}" />
        <Style.Triggers>
            <Trigger Property="FlowDirection" Value="RightToLeft">
                <Setter Property="ContentTemplate" Value="{StaticResource RepeatButtonLineLeftTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ThumbBaseStyle" TargetType="Thumb">
        <Setter Property="Background" Value="{telerik1:FluentResource ResourceKey=MainBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:FluentResource ResourceKey=MainBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Grid Background="Transparent">
                        <Border
                            x:Name="Track"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Track" Property="Background" Value="{telerik1:FluentResource ResourceKey=MouseOverBrush}" />
                        </Trigger>
                        <Trigger Property="IsDragging" Value="True">
                            <Setter TargetName="Track" Property="Background" Value="{telerik1:FluentResource ResourceKey=PressedBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Track" Property="Opacity" Value="{telerik1:FluentResource ResourceKey=DisabledOpacity}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="ThumbHorizontalStyle"
        BasedOn="{StaticResource ThumbBaseStyle}"
        TargetType="Thumb">
        <Setter Property="Height" Value="16" />
    </Style>
    <Style
        x:Key="ThumbVerticalStyle"
        BasedOn="{StaticResource ThumbBaseStyle}"
        TargetType="Thumb">
        <Setter Property="Width" Value="16" />
    </Style>
    <Style x:Key="RepeatButtonBlankStyle" TargetType="RepeatButton">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Rectangle Fill="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Storyboard x:Key="ScaleToNormalYStoryboard">
        <DoubleAnimation
            Storyboard.TargetName="Thumb"
            Storyboard.TargetProperty="RenderTransform.Children[0].ScaleY"
            To="1"
            Duration="0:0:0.140" />
    </Storyboard>
    <Storyboard x:Key="ScaleToCompactYStoryboard">
        <DoubleAnimation
            Storyboard.TargetName="Thumb"
            Storyboard.TargetProperty="RenderTransform.Children[0].ScaleY"
            To=".25"
            Duration="0:0:0.140" />
    </Storyboard>
    <Storyboard x:Key="TranslateAutoYStoryboard">
        <DoubleAnimation
            Storyboard.TargetName="Thumb"
            Storyboard.TargetProperty="RenderTransform.Children[1].Y"
            To="0"
            Duration="0:0:0.100" />
    </Storyboard>
    <Storyboard x:Key="TranslateCompactYStoryboard">
        <DoubleAnimation
            Storyboard.TargetName="Thumb"
            Storyboard.TargetProperty="RenderTransform.Children[1].Y"
            To="-2"
            Duration="0:0:0.100" />
    </Storyboard>
    <ControlTemplate x:Key="ScrollBarHorizontalControlTemplate" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MaxWidth="16" />
                <ColumnDefinition Width="1*" />
                <ColumnDefinition MaxWidth="16" />
            </Grid.ColumnDefinitions>
            <Border
                Grid.ColumnSpan="3"
                Margin="0,-1,0,0"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            <RepeatButton
                x:Name="LeftHandle"
                Command="{x:Static ScrollBar.LineLeftCommand}"
                Opacity="0"
                Style="{StaticResource RepeatButtonLineLeftStyle}" />
            <Track
                Name="PART_Track"
                Grid.Column="1"
                Orientation="Horizontal">
                <Track.Resources>
                    <sys:Double x:Key="{x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}">16</sys:Double>
                </Track.Resources>
                <Track.DecreaseRepeatButton>
                    <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource RepeatButtonBlankStyle}" />
                </Track.DecreaseRepeatButton>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource RepeatButtonBlankStyle}" />
                </Track.IncreaseRepeatButton>
                <Track.Thumb>
                    <Thumb
                        x:Name="Thumb"
                        RenderTransformOrigin=".5 1"
                        Style="{StaticResource ThumbHorizontalStyle}">
                        <Thumb.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="1" />
                                <TranslateTransform />
                            </TransformGroup>
                        </Thumb.RenderTransform>
                    </Thumb>
                </Track.Thumb>
            </Track>
            <RepeatButton
                x:Name="RightHandle"
                Grid.Column="2"
                Command="{x:Static ScrollBar.LineRightCommand}"
                Opacity="0"
                Style="{StaticResource RepeatButtonLineRightStyle}" />
        </Grid>
        <ControlTemplate.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Source={x:Static telerik1:FluentPalette.Palette}, Path=ScrollBarsMode}" Value="Auto" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.EnterActions>
                    <BeginStoryboard x:Name="AutoModeScaleStoryboard" Storyboard="{StaticResource ScaleToCompactYStoryboard}" />
                    <BeginStoryboard x:Name="AutoModeTranslateStoryboard" Storyboard="{StaticResource TranslateCompactYStoryboard}" />
                </MultiDataTrigger.EnterActions>
                <MultiDataTrigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="AutoModeScaleStoryboard" />
                    <RemoveStoryboard BeginStoryboardName="AutoModeTranslateStoryboard" />
                </MultiDataTrigger.ExitActions>
                <Setter Property="Background" Value="Transparent" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Source={x:Static telerik1:FluentPalette.Palette}, Path=ScrollBarsMode}" Value="Auto" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.EnterActions>
                    <BeginStoryboard x:Name="AutoModeMouseOverScaleStoryboard" Storyboard="{StaticResource ScaleToNormalYStoryboard}" />
                    <BeginStoryboard Storyboard="{StaticResource TranslateAutoYStoryboard}" />
                </MultiDataTrigger.EnterActions>
                <MultiDataTrigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="AutoModeMouseOverScaleStoryboard" />
                    <BeginStoryboard Storyboard="{StaticResource ScaleToCompactYStoryboard}" />
                    <BeginStoryboard Storyboard="{StaticResource TranslateCompactYStoryboard}" />
                </MultiDataTrigger.ExitActions>
                <Setter TargetName="LeftHandle" Property="Opacity" Value="1" />
                <Setter TargetName="RightHandle" Property="Opacity" Value="1" />
                <Setter Property="Canvas.ZIndex" Value="1" />
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static telerik1:FluentPalette.Palette}, Path=ScrollBarsMode}" Value="Normal">
                <DataTrigger.EnterActions>
                    <BeginStoryboard x:Name="NormalModeScaleStoryboard" Storyboard="{StaticResource ScaleToNormalYStoryboard}" />
                    <BeginStoryboard x:Name="NormalModeTranslateStoryboard" Storyboard="{StaticResource TranslateAutoYStoryboard}" />
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="NormalModeScaleStoryboard" />
                    <RemoveStoryboard BeginStoryboardName="NormalModeTranslateStoryboard" />
                </DataTrigger.ExitActions>
                <Setter TargetName="LeftHandle" Property="Opacity" Value="1" />
                <Setter TargetName="RightHandle" Property="Opacity" Value="1" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static telerik1:FluentPalette.Palette}, Path=ScrollBarsMode}" Value="Compact">
                <DataTrigger.EnterActions>
                    <BeginStoryboard x:Name="CompactModeScaleStoryboard" Storyboard="{StaticResource ScaleToCompactYStoryboard}" />
                    <BeginStoryboard x:Name="CompactModeTranslateStoryboard" Storyboard="{StaticResource TranslateCompactYStoryboard}" />
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="CompactModeScaleStoryboard" />
                    <RemoveStoryboard BeginStoryboardName="CompactModeTranslateStoryboard" />
                </DataTrigger.ExitActions>
                <Setter Property="Background" Value="Transparent" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Storyboard x:Key="ScaleToNormalXStoryboard">
        <DoubleAnimation
            Storyboard.TargetName="Thumb"
            Storyboard.TargetProperty="RenderTransform.Children[0].ScaleX"
            To="1"
            Duration="0:0:0.140" />
    </Storyboard>
    <Storyboard x:Key="ScaleToCompactXStoryboard">
        <DoubleAnimation
            Storyboard.TargetName="Thumb"
            Storyboard.TargetProperty="RenderTransform.Children[0].ScaleX"
            To=".25"
            Duration="0:0:0.140" />
    </Storyboard>
    <Storyboard x:Key="TranslateAutoXStoryboard">
        <DoubleAnimation
            Storyboard.TargetName="Thumb"
            Storyboard.TargetProperty="RenderTransform.Children[1].X"
            To="0"
            Duration="0:0:0.100" />
    </Storyboard>
    <Storyboard x:Key="TranslateCompactXStoryboard">
        <DoubleAnimation
            Storyboard.TargetName="Thumb"
            Storyboard.TargetProperty="RenderTransform.Children[1].X"
            To="-2"
            Duration="0:0:0.100" />
    </Storyboard>
    <ControlTemplate x:Key="ScrollBarVerticalControlTemplate" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="16" />
                <RowDefinition Height="1*" />
                <RowDefinition MaxHeight="16" />
            </Grid.RowDefinitions>
            <Border
                Grid.RowSpan="3"
                Margin="-1,0,0,0"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            <RepeatButton
                x:Name="TopHandle"
                Command="{x:Static ScrollBar.LineUpCommand}"
                Content="Up"
                Opacity="0"
                Style="{StaticResource RepeatButtonLineUpStyle}" />
            <Track
                Name="PART_Track"
                Grid.Row="1"
                IsDirectionReversed="True">
                <Track.Resources>
                    <sys:Double x:Key="{x:Static SystemParameters.VerticalScrollBarButtonHeightKey}">16</sys:Double>
                </Track.Resources>
                <Track.DecreaseRepeatButton>
                    <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource RepeatButtonBlankStyle}" />
                </Track.DecreaseRepeatButton>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource RepeatButtonBlankStyle}" />
                </Track.IncreaseRepeatButton>
                <Track.Thumb>
                    <Thumb
                        x:Name="Thumb"
                        RenderTransformOrigin="1 .5"
                        Style="{StaticResource ThumbVerticalStyle}">
                        <Thumb.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleY="1" />
                                <TranslateTransform />
                            </TransformGroup>
                        </Thumb.RenderTransform>
                    </Thumb>
                </Track.Thumb>
            </Track>
            <RepeatButton
                x:Name="BottomHandle"
                Grid.Row="2"
                Command="{x:Static ScrollBar.LineDownCommand}"
                Opacity="0"
                Style="{StaticResource RepeatButtonLineDownStyle}" />
        </Grid>
        <ControlTemplate.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Source={x:Static telerik1:FluentPalette.Palette}, Path=ScrollBarsMode}" Value="Auto" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.EnterActions>
                    <BeginStoryboard x:Name="AutoModeScaleStoryboard" Storyboard="{StaticResource ScaleToCompactXStoryboard}" />
                    <BeginStoryboard x:Name="AutoModeTranslateStoryboard" Storyboard="{StaticResource TranslateCompactXStoryboard}" />
                </MultiDataTrigger.EnterActions>
                <MultiDataTrigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="AutoModeScaleStoryboard" />
                    <RemoveStoryboard BeginStoryboardName="AutoModeTranslateStoryboard" />
                </MultiDataTrigger.ExitActions>
                <Setter Property="Background" Value="Transparent" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Source={x:Static telerik1:FluentPalette.Palette}, Path=ScrollBarsMode}" Value="Auto" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.EnterActions>
                    <BeginStoryboard x:Name="AutoModeMouseOverScaleStoryboard" Storyboard="{StaticResource ScaleToNormalXStoryboard}" />
                    <BeginStoryboard Storyboard="{StaticResource TranslateAutoXStoryboard}" />
                </MultiDataTrigger.EnterActions>
                <MultiDataTrigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="AutoModeMouseOverScaleStoryboard" />
                    <BeginStoryboard Storyboard="{StaticResource ScaleToCompactXStoryboard}" />
                    <BeginStoryboard Storyboard="{StaticResource TranslateCompactXStoryboard}" />
                </MultiDataTrigger.ExitActions>
                <Setter TargetName="TopHandle" Property="Opacity" Value="1" />
                <Setter TargetName="BottomHandle" Property="Opacity" Value="1" />
                <Setter Property="Canvas.ZIndex" Value="1" />
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static telerik1:FluentPalette.Palette}, Path=ScrollBarsMode}" Value="Normal">
                <DataTrigger.EnterActions>
                    <BeginStoryboard x:Name="NormalModeScaleStoryboard" Storyboard="{StaticResource ScaleToNormalXStoryboard}" />
                    <BeginStoryboard x:Name="NormalModeTranslateStoryboard" Storyboard="{StaticResource TranslateAutoXStoryboard}" />
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="NormalModeScaleStoryboard" />
                    <RemoveStoryboard BeginStoryboardName="NormalModeTranslateStoryboard" />
                </DataTrigger.ExitActions>
                <Setter TargetName="TopHandle" Property="Opacity" Value="1" />
                <Setter TargetName="BottomHandle" Property="Opacity" Value="1" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static telerik1:FluentPalette.Palette}, Path=ScrollBarsMode}" Value="Compact">
                <DataTrigger.EnterActions>
                    <BeginStoryboard x:Name="CompactModeScaleStoryboard" Storyboard="{StaticResource ScaleToCompactXStoryboard}" />
                    <BeginStoryboard x:Name="CompactModeTranslateStoryboard" Storyboard="{StaticResource TranslateCompactXStoryboard}" />
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="CompactModeScaleStoryboard" />
                    <RemoveStoryboard BeginStoryboardName="CompactModeTranslateStoryboard" />
                </DataTrigger.ExitActions>
                <Setter Property="Background" Value="Transparent" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="ScrollBarStyle" TargetType="{x:Type ScrollBar}">
        <Setter Property="Template" Value="{StaticResource ScrollBarVerticalControlTemplate}" />
        <Setter Property="MinWidth" Value="16" />
        <Setter Property="MinHeight" Value="16" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Background" Value="{telerik1:FluentResource ResourceKey=AlternativeBrush}" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ClipToBounds" Value="True" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Template" Value="{StaticResource ScrollBarHorizontalControlTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <ControlTemplate x:Key="ScrollViewerControlTemplate" TargetType="{x:Type ScrollViewer}">
        <Border
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <ScrollContentPresenter
                    x:Name="PART_ScrollContentPresenter"
                    Margin="{TemplateBinding Padding}"
                    CanContentScroll="{TemplateBinding CanContentScroll}"
                    CanHorizontallyScroll="False"
                    CanVerticallyScroll="False"
                    Content="{TemplateBinding Content}"
                    ContentTemplate="{TemplateBinding ContentTemplate}" />
                <Border
                    x:Name="ScrollViewerCornerBorder"
                    Grid.Row="1"
                    Grid.Column="1"
                    Background="{Binding ElementName=PART_HorizontalScrollBar, Path=Background}"
                    Visibility="Collapsed" />
                <ScrollBar
                    x:Name="PART_HorizontalScrollBar"
                    VerticalAlignment="Bottom"
                    AutomationProperties.AutomationId="HorizontalScrollBar"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    Cursor="Arrow"
                    Maximum="{TemplateBinding ScrollableWidth}"
                    Minimum="0"
                    Orientation="Horizontal"
                    ViewportSize="{TemplateBinding ViewportWidth}"
                    Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                    Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                <ScrollBar
                    x:Name="PART_VerticalScrollBar"
                    HorizontalAlignment="Right"
                    AutomationProperties.AutomationId="VerticalScrollBar"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    Cursor="Arrow"
                    Maximum="{TemplateBinding ScrollableHeight}"
                    Minimum="0"
                    ViewportSize="{TemplateBinding ViewportHeight}"
                    Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                    Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static telerik1:FluentPalette.Palette}, Path=ScrollBarsMode}" Value="Normal">
                <Setter TargetName="PART_VerticalScrollBar" Property="Grid.Column" Value="1" />
                <Setter TargetName="PART_HorizontalScrollBar" Property="Grid.Row" Value="1" />
                <Setter TargetName="ScrollViewerCornerBorder" Property="Visibility" Value="Visible" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="ScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
        <Setter Property="mat:MaterialAssist.CornerRadius" Value="0" />
        <Setter Property="Template" Value="{StaticResource ScrollViewerControlTemplate}" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=MarkerBrush}" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
    </Style>
    <Style BasedOn="{StaticResource ScrollBarStyle}" TargetType="ScrollBar" />
    <Style BasedOn="{StaticResource ScrollViewerStyle}" TargetType="ScrollViewer" />
    <Style x:Key="ToolTipStyle" TargetType="ToolTip">
        <Setter Property="FontFamily" Value="{telerik1:FluentResource ResourceKey=FontFamily}" />
        <Setter Property="FontSize" Value="{telerik1:FluentResource ResourceKey=FontSize}" />
        <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=MarkerBrush}" />
        <Setter Property="Background" Value="{telerik1:FluentResource ResourceKey=PrimaryBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:FluentResource ResourceKey=BasicBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Grid>
                        <Border
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <ContentPresenter
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource ToolTipStyle}" TargetType="ToolTip" />
    <Style x:Key="TextBoxStyle" TargetType="TextBox">
        <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:FluentResource ResourceKey=PrimaryMouseOverBrush}" />
        <Setter Property="mat:MaterialAssist.FocusBrush" Value="{telerik1:FluentResource ResourceKey=AccentFocusedBrush}" />
        <Setter Property="mat:MaterialAssist.CornerRadius" Value="{telerik1:FluentResource ResourceKey=CornerRadius}" />
        <Setter Property="SelectionBrush" Value="{telerik1:FluentResource ResourceKey=AccentMouseOverBrush}" />
        <Setter Property="FontFamily" Value="{telerik1:FluentResource ResourceKey=FontFamily}" />
        <Setter Property="FontSize" Value="{telerik1:FluentResource ResourceKey=FontSize}" />
        <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=MarkerBrush}" />
        <Setter Property="Background" Value="{telerik1:FluentResource ResourceKey=PrimaryBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:FluentResource ResourceKey=BasicBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="CaretBrush" Value="{telerik1:FluentResource ResourceKey=MarkerMouseOverBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ValidationTooltipTemplate}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Grid x:Name="root">
                        <Border
                            x:Name="BorderVisual"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}" />
                        <Border
                            x:Name="ReadOnlyVisual"
                            Background="{telerik1:FluentResource ResourceKey=ReadOnlyBackgroundBrush}"
                            BorderBrush="{x:Null}"
                            BorderThickness="{telerik1:FluentResource ResourceKey=FocusThickness}"
                            CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                            IsHitTestVisible="False"
                            Visibility="Collapsed" />
                        <Border
                            x:Name="FocusVisual"
                            Background="{x:Null}"
                            BorderBrush="{TemplateBinding mat:MaterialAssist.FocusBrush}"
                            BorderThickness="{telerik1:FluentResource ResourceKey=FocusThickness}"
                            CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                            IsHitTestVisible="False"
                            Visibility="Collapsed" />
                        <ScrollViewer
                            x:Name="PART_ContentHost"
                            Margin="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            Background="Transparent"
                            BorderBrush="Transparent"
                            BorderThickness="0"
                            Foreground="{TemplateBinding Foreground}"
                            Opacity="{telerik1:FluentResource ResourceKey=InputOpacity}" />
                    </Grid>
                    <ControlTemplate.Triggers>

                        <!--  MouseOver  -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=MarkerMouseOverBrush}" />
                            <Setter TargetName="PART_ContentHost" Property="Opacity" Value="1" />
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}" />
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter TargetName="BorderVisual" Property="BorderThickness" Value="{telerik1:FluentResource ResourceKey=FocusThickness}" />
                            <Setter TargetName="BorderVisual" Property="BorderBrush" Value="{telerik1:FluentResource ResourceKey=ReadOnlyBorderBrush}" />
                            <Setter TargetName="PART_ContentHost" Property="Opacity" Value="{telerik1:FluentResource ResourceKey=ReadOnlyOpacity}" />
                            <Setter TargetName="ReadOnlyVisual" Property="Visibility" Value="Visible" />
                        </Trigger>

                        <!--  Focused  -->
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=MarkerMouseOverBrush}" />
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}" />
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_ContentHost" Property="Opacity" Value="1" />
                        </Trigger>

                        <!--  Invalid  -->
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Collapsed" />
                        </Trigger>

                        <!--  Disabled  -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_ContentHost" Property="Opacity" Value="{telerik1:FluentResource ResourceKey=DisabledOpacity}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource TextBoxStyle}" TargetType="TextBox" />
    <Style x:Key="PasswordBoxStyle" TargetType="PasswordBox">
        <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:FluentResource ResourceKey=PrimaryMouseOverBrush}" />
        <Setter Property="mat:MaterialAssist.FocusBrush" Value="{telerik1:FluentResource ResourceKey=AccentFocusedBrush}" />
        <Setter Property="mat:MaterialAssist.CornerRadius" Value="{telerik1:FluentResource ResourceKey=CornerRadius}" />
        <Setter Property="SelectionBrush" Value="{telerik1:FluentResource ResourceKey=AccentMouseOverBrush}" />
        <Setter Property="FontFamily" Value="{telerik1:FluentResource ResourceKey=FontFamily}" />
        <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=MarkerBrush}" />
        <Setter Property="FontSize" Value="{telerik1:FluentResource ResourceKey=FontSize}" />
        <Setter Property="Background" Value="{telerik1:FluentResource ResourceKey=PrimaryBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:FluentResource ResourceKey=BasicBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="CaretBrush" Value="{telerik1:FluentResource ResourceKey=MarkerMouseOverBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ValidationTooltipTemplate}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="PasswordBox">
                    <Grid x:Name="root">
                        <Border
                            x:Name="BorderVisual"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <ScrollViewer
                            x:Name="PART_ContentHost"
                            Margin="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            Background="Transparent"
                            BorderBrush="Transparent"
                            BorderThickness="0"
                            Foreground="{TemplateBinding Foreground}"
                            Opacity="{telerik1:FluentResource ResourceKey=InputOpacity}" />
                        <Border
                            x:Name="FocusVisual"
                            Background="{x:Null}"
                            BorderBrush="{TemplateBinding mat:MaterialAssist.FocusBrush}"
                            BorderThickness="{telerik1:FluentResource ResourceKey=FocusThickness}"
                            CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                            IsHitTestVisible="False"
                            Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>

                        <!--  MouseOver  -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=MarkerMouseOverBrush}" />
                            <Setter TargetName="PART_ContentHost" Property="Opacity" Value="1" />
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}" />
                        </Trigger>

                        <!--  Focused  -->
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=MarkerMouseOverBrush}" />
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}" />
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_ContentHost" Property="Opacity" Value="1" />
                        </Trigger>

                        <!--  Invalid  -->
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Collapsed" />
                        </Trigger>

                        <!--  Disabled  -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_ContentHost" Property="Opacity" Value="{telerik1:FluentResource ResourceKey=DisabledOpacity}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource PasswordBoxStyle}" TargetType="PasswordBox" />
    <Style x:Key="ListBoxItemStyle" TargetType="ListBoxItem">
        <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:FluentResource ResourceKey=MouseOverBrush}" />
        <Setter Property="mat:MaterialAssist.PressedBrush" Value="{telerik1:FluentResource ResourceKey=PressedBrush}" />
        <Setter Property="mat:MaterialAssist.CheckedBrush" Value="{telerik1:FluentResource ResourceKey=AccentBrush}" />
        <Setter Property="mat:MaterialAssist.FocusBrush" Value="{telerik1:FluentResource ResourceKey=AccentFocusedBrush}" />
        <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=MarkerBrush}" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="MinHeight" Value="28" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="FontFamily" Value="{telerik1:FluentResource ResourceKey=FontFamily}" />
        <Setter Property="FontSize" Value="{telerik1:FluentResource ResourceKey=FontSize}" />
        <Setter Property="BorderThickness" Value="0,1" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Local" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Grid>
                        <Border
                            x:Name="BorderVisual"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Border
                            x:Name="FocusVisual"
                            Background="{x:Null}"
                            BorderBrush="{TemplateBinding mat:MaterialAssist.FocusBrush}"
                            BorderThickness="{telerik1:FluentResource ResourceKey=FocusThickness}"
                            IsHitTestVisible="False"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            Visibility="Collapsed" />
                        <mat:FluentControl
                            x:Name="Fluent"
                            HorizontalContentAlignment="Stretch"
                            VerticalContentAlignment="Stretch"
                            ClipToBounds="True"
                            IsSmartClipped="False"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <ContentControl
                                x:Name="contentPresenter"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Content}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                FocusVisualStyle="{x:Null}"
                                Foreground="{TemplateBinding Foreground}"
                                IsTabStop="False" />
                        </mat:FluentControl>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <!--  Focused and animation enabled  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused" Value="True" />
                                <Condition Property="IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Visible" />
                        </MultiTrigger>

                        <!--  IsSelected general setters  -->
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:FluentResource ResourceKey=AccentMouseOverBrush}" />
                            <Setter Property="mat:MaterialAssist.PressedBrush" Value="{telerik1:FluentResource ResourceKey=AccentPressedBrush}" />
                            <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=MarkerInvertedBrush}" />
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CheckedBrush), Mode=OneWay}" />
                            <Setter TargetName="BorderVisual" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CheckedBrush), Mode=OneWay}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}" />
                            <Setter TargetName="BorderVisual" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}" />
                        </Trigger>
                        <Trigger SourceName="Fluent" Property="IsPressed" Value="True">
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.PressedBrush), Mode=OneWay}" />
                            <Setter TargetName="BorderVisual" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.PressedBrush), Mode=OneWay}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="contentPresenter" Property="Opacity" Value="{telerik1:FluentResource ResourceKey=DisabledOpacity}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ListBoxStyle" TargetType="ListBox">
        <Setter Property="mat:MaterialAssist.CornerRadius" Value="0" />
        <Setter Property="Background" Value="{telerik1:FluentResource ResourceKey=AlternativeBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:FluentResource ResourceKey=BasicBrush}" />
        <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=MarkerBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="FontFamily" Value="{telerik1:FluentResource ResourceKey=FontFamily}" />
        <Setter Property="FontSize" Value="{telerik1:FluentResource ResourceKey=FontSize}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <Grid>
                        <Border
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}">
                            <ScrollViewer
                                x:Name="ScrollViewer"
                                Padding="{TemplateBinding Padding}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{x:Null}"
                                BorderThickness="0"
                                ScrollViewer.HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                ScrollViewer.VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                                <ItemsPresenter />
                            </ScrollViewer>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource ListBoxStyle}" TargetType="ListBox" />
    <Style BasedOn="{StaticResource ListBoxItemStyle}" TargetType="ListBoxItem" />
    <Style x:Key="CheckBoxStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="mat:MaterialAssist.FocusBrush" Value="{telerik1:FluentResource ResourceKey=AccentFocusedBrush}" />
        <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:FluentResource ResourceKey=AccentMouseOverBrush}" />
        <Setter Property="mat:MaterialAssist.PressedBrush" Value="{telerik1:FluentResource ResourceKey=AccentPressedBrush}" />
        <Setter Property="mat:MaterialAssist.CheckedBrush" Value="{telerik1:FluentResource ResourceKey=AccentBrush}" />
        <Setter Property="mat:MaterialAssist.CornerRadius" Value="{telerik1:FluentResource ResourceKey=CornerRadius}" />
        <Setter Property="FontFamily" Value="{telerik1:FluentResource ResourceKey=FontFamily}" />
        <Setter Property="FontSize" Value="{telerik1:FluentResource ResourceKey=FontSize}" />
        <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=MarkerBrush}" />
        <Setter Property="Background" Value="{telerik1:FluentResource ResourceKey=PrimaryBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:FluentResource ResourceKey=BasicBrush}" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Padding" Value="5,0" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <Grid HorizontalAlignment="Left">
                        <AdornedElementPlaceholder x:Name="Holder" />
                        <Grid
                            Width="18"
                            Height="18"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center">
                            <Border
                                BorderBrush="{telerik1:FluentResource ResourceKey=ValidationBrush}"
                                BorderThickness="1"
                                CornerRadius="{telerik1:FluentResource ResourceKey=CornerRadius}"
                                IsHitTestVisible="False"
                                SnapsToDevicePixels="True" />
                            <Path
                                HorizontalAlignment="Right"
                                VerticalAlignment="Top"
                                Data="{StaticResource ArrowTopRight8x8}"
                                Fill="{telerik1:FluentResource ResourceKey=ValidationBrush}"
                                SnapsToDevicePixels="True"
                                Stretch="None" />
                        </Grid>
                        <ToolTipService.ToolTip>
                            <ToolTip
                                x:Name="PART_ToolTip"
                                Margin="0,2,0,0"
                                DataContext="{Binding RelativeSource={RelativeSource Mode=Self}, Path=PlacementTarget.DataContext}"
                                Placement="Right"
                                Template="{StaticResource ErrorTooltipTemplate}" />
                        </ToolTipService.ToolTip>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid
                        x:Name="templateRoot"
                        Background="Transparent"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Border
                                x:Name="checkBoxBorder"
                                Width="18"
                                Height="18"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}">
                                <Grid x:Name="markGrid">
                                    <telerik1:RadGlyph
                                        x:Name="optionMark"
                                        FlowDirection="LeftToRight"
                                        FontSize="16"
                                        Foreground="{telerik1:FluentResource ResourceKey=MarkerInvertedBrush}"
                                        Glyph="{StaticResource GlyphCheck}"
                                        Opacity="0" />
                                    <Border
                                        x:Name="indeterminateMark"
                                        Margin="2"
                                        Background="{TemplateBinding BorderBrush}"
                                        Visibility="Collapsed" />
                                </Grid>
                            </Border>
                        </Grid>
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Grid.Column="1"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content, Converter={StaticResource NullToVisibilityConverter}}" />
                    </Grid>
                    <ControlTemplate.Triggers>

                        <!--  IsChecked True  -->
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="optionMark" Property="Opacity" Value="1" />
                            <Setter TargetName="checkBoxBorder" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CheckedBrush), Mode=OneWay}" />
                            <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CheckedBrush), Mode=OneWay}" />
                        </Trigger>

                        <!--  IsChecked Null  -->
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="optionMark" Property="Opacity" Value="0" />
                            <Setter TargetName="indeterminateMark" Property="Visibility" Value="Visible" />
                        </Trigger>

                        <!--  Focused  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused" Value="True" />
                                <Condition Property="IsMouseOver" Value="False" />
                                <Condition Property="IsPressed" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.FocusBrush), Mode=OneWay}" />
                            <Setter TargetName="checkBoxBorder" Property="Background" Value="{telerik1:FluentResource ResourceKey=PrimaryMouseOverBrush}" />
                        </MultiTrigger>

                        <!--  IsMouseOver  -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}" />
                            <Setter TargetName="checkBoxBorder" Property="Background" Value="{telerik1:FluentResource ResourceKey=PrimaryMouseOverBrush}" />
                            <Setter TargetName="indeterminateMark" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}" />
                            <Setter TargetName="indeterminateMark" Property="Opacity" Value="{telerik1:FluentResource ResourceKey=InputOpacity}" />
                        </Trigger>

                        <!--  IsPressed  -->
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.PressedBrush), Mode=OneWay}" />
                            <Setter TargetName="indeterminateMark" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.PressedBrush), Mode=OneWay}" />
                            <Setter TargetName="indeterminateMark" Property="Opacity" Value="1" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsChecked" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="checkBoxBorder" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="True" />
                                <Condition Property="IsChecked" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="checkBoxBorder" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.PressedBrush), Mode=OneWay}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused" Value="True" />
                                <Condition Property="IsMouseOver" Value="False" />
                                <Condition Property="IsPressed" Value="False" />
                                <Condition Property="IsChecked" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="checkBoxBorder" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.FocusBrush), Mode=OneWay}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused" Value="True" />
                                <Condition Property="IsMouseOver" Value="False" />
                                <Condition Property="IsPressed" Value="False" />
                                <Condition Property="IsChecked" Value="{x:Null}" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="indeterminateMark" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.FocusBrush), Mode=OneWay}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="optionMark" Property="Foreground" Value="{telerik1:FluentResource ResourceKey=MarkerBrush}" />
                            <Setter TargetName="markGrid" Property="Opacity" Value="{telerik1:FluentResource ResourceKey=DisabledOpacity}" />
                            <Setter TargetName="contentPresenter" Property="Opacity" Value="{telerik1:FluentResource ResourceKey=DisabledOpacity}" />
                            <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{telerik1:FluentResource ResourceKey=BasicBrush}" />
                            <Setter TargetName="checkBoxBorder" Property="Background" Value="{telerik1:FluentResource ResourceKey=AlternativeBrush}" />
                            <Setter TargetName="indeterminateMark" Property="Background" Value="{telerik1:FluentResource ResourceKey=MarkerBrush}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                                <Condition Property="IsChecked" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{telerik1:FluentResource ResourceKey=AlternativeBrush}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource CheckBoxStyle}" TargetType="CheckBox" />

    <!--  Style for Separator which is not child of StatusBar (horizontal one)  -->
    <Style x:Key="SeparatorStyle" TargetType="Separator">
        <Setter Property="Background" Value="{telerik1:FluentResource ResourceKey=BasicBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Margin" Value="0,5" />
        <Setter Property="MinHeight" Value="1" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Separator">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Style for Separator which is child of StatusBar (vertical one)  -->
    <Style x:Key="{x:Static StatusBar.SeparatorStyleKey}" TargetType="Separator">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="{telerik1:FluentResource ResourceKey=BasicBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="MinWidth" Value="1" />
        <Setter Property="Margin" Value="5,3" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Separator">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Style for StatusBarItem  -->
    <Style x:Key="StatusBarItemStyle" TargetType="StatusBarItem">
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="Padding" Value="5,3" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="StatusBarItem">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style BasedOn="{StaticResource {x:Static StatusBar.SeparatorStyleKey}}" TargetType="Separator">
                <Setter Property="Margin" Value="0" />
            </Style>
        </Style.Resources>
    </Style>

    <!--  Style for StatusBar  -->
    <Style x:Key="StatusBarStyle" TargetType="StatusBar">
        <Setter Property="FontFamily" Value="{telerik1:FluentResource ResourceKey=FontFamily}" />
        <Setter Property="FontSize" Value="{telerik1:FluentResource ResourceKey=FontSize}" />
        <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=MarkerBrush}" />
        <Setter Property="Background" Value="{telerik1:FluentResource ResourceKey=MainBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:FluentResource ResourceKey=BasicBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="StatusBar">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <ItemsPresenter Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style BasedOn="{StaticResource {x:Static StatusBar.SeparatorStyleKey}}" TargetType="Separator" />
        </Style.Resources>
    </Style>
    <Style BasedOn="{StaticResource StatusBarStyle}" TargetType="StatusBar" />
    <Style BasedOn="{StaticResource StatusBarItemStyle}" TargetType="StatusBarItem" />
    <Style BasedOn="{StaticResource SeparatorStyle}" TargetType="Separator" />
    <Style x:Key="GridSplitterPreviewStyle">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Fill="#80000000" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="GridSplitterStyle" TargetType="GridSplitter">
        <Setter Property="MinWidth" Value="8" />
        <Setter Property="MinHeight" Value="8" />
        <Setter Property="MaxWidth" Value="8" />
        <Setter Property="Background" Value="{telerik1:FluentResource ResourceKey=AlternativeBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:FluentResource ResourceKey=BasicBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=IconBrush}" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="PreviewStyle" Value="{StaticResource GridSplitterPreviewStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GridSplitter">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <telerik1:RadGlyph
                            x:Name="grip"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            FontSize="{TemplateBinding FontSize}"
                            Glyph="{StaticResource GlyphMoreVertical}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HorizontalAlignment" Value="Stretch">
                            <Setter TargetName="grip" Property="Glyph" Value="{StaticResource GlyphMoreHorizontal}" />
                            <Setter Property="MaxWidth" Value="{x:Static sys:Double.MaxValue}" />
                            <Setter Property="MaxHeight" Value="8" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="{telerik1:FluentResource ResourceKey=DisabledOpacity}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource GridSplitterStyle}" TargetType="{x:Type GridSplitter}" />
    <Style x:Key="HyperlinkStyle" TargetType="Hyperlink">
        <Setter Property="FontFamily" Value="{telerik1:FluentResource ResourceKey=FontFamily}" />
        <Setter Property="FontSize" Value="{telerik1:FluentResource ResourceKey=FontSize}" />
        <Setter Property="Foreground" Value="{StaticResource RadHyperlinkButtonNormalBrush}" />
        <Setter Property="TextDecorations" Value="{x:Null}" />
        <Setter Property="Cursor" Value="Hand" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource RadHyperlinkButtonHoverBrush}" />
                <Setter Property="TextDecorations" Value="Underline" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=MarkerBrush}" />
                <Setter Property="TextBlock.Opacity" Value="{telerik1:FluentResource ResourceKey=DisabledOpacity}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style BasedOn="{StaticResource HyperlinkStyle}" TargetType="Hyperlink" />
</ResourceDictionary>
