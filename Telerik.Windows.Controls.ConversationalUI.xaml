<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:c="http://schemas.telerik.com/2008/xaml/compile"
    xmlns:calendar="clr-namespace:Telerik.Windows.Controls.Calendar;assembly=Telerik.Windows.Controls.Input"
    xmlns:chat="clr-namespace:Telerik.Windows.Controls.ConversationalUI;assembly=Telerik.Windows.Controls.ConversationalUI"
    xmlns:controls="clr-namespace:Telerik.Windows.Controls;assembly=Telerik.Windows.Controls.ConversationalUI"
    xmlns:ext="clr-namespace:Telerik.Windows.Controls.MarkupExtensions;assembly=Telerik.Windows.Controls"
    xmlns:mat="clr-namespace:Telerik.Windows.Controls.MaterialControls;assembly=Telerik.Windows.Controls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
    xmlns:telerik1="clr-namespace:Telerik.Windows.Controls;assembly=Telerik.Windows.Controls"
    xmlns:telerikDragDrop="clr-namespace:Telerik.Windows.DragDrop;assembly=Telerik.Windows.Controls"
    xmlns:telerikInput="clr-namespace:Telerik.Windows.Controls;assembly=Telerik.Windows.Controls.Input"
    xmlns:telerikNavigation="clr-namespace:Telerik.Windows.Controls;assembly=Telerik.Windows.Controls.Navigation"
    xmlns:telerikPrimitives="clr-namespace:Telerik.Windows.Controls.Primitives;assembly=Telerik.Windows.Controls"
    xmlns:telerikRating="clr-namespace:Telerik.Windows.Controls.Rating;assembly=Telerik.Windows.Controls.Input"
    mc:Ignorable="c">
    <ResourceDictionary.MergedDictionaries>
        <telerik:FluentResourceDictionary />
    </ResourceDictionary.MergedDictionaries>
    <telerik1:DragDropBooleanToVisibilityConverter x:Key="DragDropBooleanToVisibilityConverter" />
    <telerik1:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <telerik1:ThicknessToOrientedThicknessConverter x:Key="ThicknessToOrientedThicknessConverter" />
    <telerik1:NumberToVisibilityConverter x:Key="NumberToVisibilityConverter" />
    <telerik1:OpacityConverter x:Key="OpacityConverter" />
    <telerik1:NullToVisibilityConverter x:Key="NullToVisibilityConverter" />
    <Geometry x:Key="ArrowTopRight8x8">M0,0 L8,0 8,8 z</Geometry>
    <sys:String x:Key="GlyphArrowsKpi"></sys:String>
    <sys:String x:Key="GlyphArrowChevronUp"></sys:String>
    <sys:String x:Key="GlyphArrowChevronRight"></sys:String>
    <sys:String x:Key="GlyphArrowChevronDown"></sys:String>
    <sys:String x:Key="GlyphArrowChevronLeft"></sys:String>
    <sys:String x:Key="GlyphArrowRight"></sys:String>
    <sys:String x:Key="GlyphGrid"></sys:String>
    <sys:String x:Key="GlyphMoreHorizontal"></sys:String>
    <sys:String x:Key="GlyphClock"></sys:String>
    <sys:String x:Key="GlyphCalendar"></sys:String>
    <sys:String x:Key="GlyphLinkHorizontal"></sys:String>
    <sys:String x:Key="GlyphCancel"></sys:String>
    <sys:String x:Key="GlyphPlus"></sys:String>
    <sys:String x:Key="GlyphStarOutline"></sys:String>
    <sys:String x:Key="GlyphStar"></sys:String>
    <sys:String x:Key="GlyphInsertUp"></sys:String>
    <sys:String x:Key="GlyphInsertDown"></sys:String>
    <telerik1:ColorToBrushConverter x:Key="ColorToBrushConverter" />
    <ext:DynamicResourceProxy x:Key="PrimaryBackgroundBrushProxy" ProxyValue="{Binding Source={x:Static telerik1:FluentPalette.Palette}, Path=PrimaryBackgroundColor, Converter={StaticResource ColorToBrushConverter}}" />
    <ControlTemplate x:Key="ErrorTooltipTemplate" TargetType="ToolTip">
        <Grid
            x:Name="RootVisual"
            HorizontalAlignment="Right"
            Opacity="0"
            RenderTransformOrigin="0 0"
            SnapsToDevicePixels="True">
            <Grid.RenderTransform>
                <TranslateTransform x:Name="xform" X="-25" />
            </Grid.RenderTransform>
            <Border
                Margin="1,0,0,0"
                Background="{telerik1:FluentResource ResourceKey=ValidationBrush}"
                UseLayoutRounding="True">
                <ContentPresenter
                    Margin="10,6"
                    VerticalAlignment="Center"
                    Content="{Binding ErrorContent}"
                    TextBlock.FontSize="{telerik1:FluentResource ResourceKey=FontSize}"
                    TextBlock.Foreground="{telerik1:FluentResource ResourceKey=MarkerInvertedBrush}" />
            </Border>
            <ContentControl />
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="OpenStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0" />
                        <VisualTransition GeneratedDuration="0:0:0.3" To="Open">
                            <Storyboard>
                                <DoubleAnimation
                                    Storyboard.TargetName="xform"
                                    Storyboard.TargetProperty="X"
                                    To="0"
                                    Duration="0:0:0.3">
                                    <DoubleAnimation.EasingFunction>
                                        <BackEase Amplitude=".4" EasingMode="EaseOut" />
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation
                                    Storyboard.TargetName="RootVisual"
                                    Storyboard.TargetProperty="Opacity"
                                    To="1"
                                    Duration="0:0:0.3" />
                            </Storyboard>
                        </VisualTransition>
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Closed">
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="RootVisual"
                                Storyboard.TargetProperty="Opacity"
                                To="0"
                                Duration="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Open">
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="xform"
                                Storyboard.TargetProperty="X"
                                To="0"
                                Duration="0" />
                            <DoubleAnimation
                                Storyboard.TargetName="RootVisual"
                                Storyboard.TargetProperty="Opacity"
                                To="1"
                                Duration="0" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="ValidationTooltipTemplate">
        <Grid VerticalAlignment="Top" SnapsToDevicePixels="True">
            <AdornedElementPlaceholder x:Name="Holder" />
            <Border
                BorderBrush="{telerik1:FluentResource ResourceKey=ValidationBrush}"
                BorderThickness="1"
                CornerRadius="{telerik1:FluentResource ResourceKey=CornerRadius}" />
            <Path
                Width="8"
                Height="8"
                Margin="0,1,1,0"
                HorizontalAlignment="Right"
                VerticalAlignment="Top"
                Data="{StaticResource ArrowTopRight8x8}"
                Fill="{telerik1:FluentResource ResourceKey=ValidationBrush}" />
            <ToolTipService.ToolTip>
                <ToolTip
                    x:Name="PART_ToolTip"
                    DataContext="{Binding RelativeSource={RelativeSource Mode=Self}, Path=PlacementTarget.DataContext}"
                    Placement="Right"
                    Template="{StaticResource ErrorTooltipTemplate}" />
            </ToolTipService.ToolTip>
        </Grid>
    </ControlTemplate>
    <telerik:InvertedBooleanToVisibilityConverter x:Key="InvertedBooleanToVisibilityConverter" />
    <Thickness x:Key="CalendarButtonMargin">1</Thickness>
    <Thickness x:Key="CalendarViewBorderThickness">2 0</Thickness>
    <Thickness x:Key="CalendarViewHeaderPadding">5</Thickness>
    <Thickness x:Key="CalendarViewMargin">0</Thickness>
    <Thickness x:Key="CalendarViewHeaderMargin">0</Thickness>
    <Thickness x:Key="CalendarItemsMargin">1</Thickness>
    <sys:Int32 x:Key="CalendarWeekHeaderVerticalOuterBorderZIndex">0</sys:Int32>
    <Thickness x:Key="CalendarWeekHeaderVerticalOuterBorderMargin">0 1 -2 0</Thickness>
    <sys:Int32 x:Key="CalendarWeekHeaderVerticalBackgroundZIndex">2</sys:Int32>
    <sys:Int32 x:Key="CalendarWeekHeaderHorizontalBackgroundZIndex">1</sys:Int32>
    <TextDecorationCollection x:Key="HeaderButtonTextDecoration">Underline</TextDecorationCollection>
    <FontWeight x:Key="HeaderTextFontWeight">Normal</FontWeight>
    <Thickness x:Key="CalendarHeaderPadding">10 0</Thickness>
    <Thickness x:Key="CalendarTransitionPanelMargin">0</Thickness>
    <Thickness x:Key="ClockItemPadding">10 5</Thickness>
    <Thickness x:Key="ClockItemsPresenterMargin">1</Thickness>
    <Thickness x:Key="ClockItemsMargin">1</Thickness>
    <Style x:Key="RepeatButtonStyle" TargetType="RepeatButton">
        <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:FluentResource ResourceKey=MouseOverBrush}" />
        <Setter Property="mat:MaterialAssist.PressedBrush" Value="{telerik1:FluentResource ResourceKey=PressedBrush}" />
        <Setter Property="mat:MaterialAssist.FocusBrush" Value="{telerik1:FluentResource ResourceKey=AccentFocusedBrush}" />
        <Setter Property="mat:MaterialAssist.CornerRadius" Value="{telerik1:FluentResource ResourceKey=CornerRadius}" />
        <Setter Property="FontFamily" Value="{telerik1:FluentResource ResourceKey=FontFamily}" />
        <Setter Property="FontSize" Value="{telerik1:FluentResource ResourceKey=FontSize}" />
        <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=MarkerBrush}" />
        <Setter Property="Background" Value="{telerik1:FluentResource ResourceKey=MainBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:FluentResource ResourceKey=MainBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Grid>
                        <Border
                            x:Name="BorderVisual"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Border
                            x:Name="FocusVisual"
                            Background="{x:Null}"
                            BorderBrush="{TemplateBinding mat:MaterialAssist.FocusBrush}"
                            BorderThickness="{telerik1:FluentResource ResourceKey=FocusThickness}"
                            CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                            IsHitTestVisible="False"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            Visibility="Collapsed" />
                        <mat:FluentControl
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                            EffectMode="Glow"
                            IsSmartClipped="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <ContentPresenter
                                x:Name="Content"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Content}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                TextBlock.Foreground="{TemplateBinding Foreground}" />
                        </mat:FluentControl>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused" Value="True" />
                                <Condition Property="IsPressed" Value="False" />
                                <Condition Property="IsMouseOver" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}" />
                            <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(mat:MaterialAssist.PressedBrush), Mode=OneWay}" />
                            <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=(mat:MaterialAssist.PressedBrush), Mode=OneWay}" />
                        </Trigger>

                        <!--  disabled and focused  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                                <Condition Property="IsKeyboardFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Collapsed" />
                        </MultiTrigger>

                        <!--  disabled  -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Content" Property="Opacity" Value="{telerik1:FluentResource ResourceKey=DisabledOpacity}" />
                            <Setter Property="Background" Value="{telerik1:FluentResource ResourceKey=AlternativeBrush}" />
                            <Setter Property="BorderBrush" Value="{telerik1:FluentResource ResourceKey=AlternativeBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource RepeatButtonStyle}" TargetType="RepeatButton" />
    <DataTemplate x:Key="RepeatButtonLineUpTemplate">
        <telerik1:RadGlyph Glyph="{StaticResource GlyphArrowChevronUp}" />
    </DataTemplate>
    <DataTemplate x:Key="RepeatButtonLineDownTemplate">
        <telerik1:RadGlyph Glyph="{StaticResource GlyphArrowChevronDown}" />
    </DataTemplate>
    <DataTemplate x:Key="RepeatButtonLineLeftTemplate">
        <telerik1:RadGlyph Glyph="{StaticResource GlyphArrowChevronLeft}" />
    </DataTemplate>
    <DataTemplate x:Key="RepeatButtonLineRightTemplate">
        <telerik1:RadGlyph Glyph="{StaticResource GlyphArrowChevronRight}" />
    </DataTemplate>
    <Style
        x:Key="RepeatButtonLineBaseStyle"
        BasedOn="{StaticResource RepeatButtonStyle}"
        TargetType="RepeatButton">
        <Setter Property="Padding" Value="0" />
        <Setter Property="mat:MaterialAssist.CornerRadius" Value="0" />
        <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=IconBrush}" />
        <Setter Property="Background" Value="{telerik1:FluentResource ResourceKey=AlternativeBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:FluentResource ResourceKey=MainBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Focusable" Value="False" />
    </Style>
    <Style
        x:Key="RepeatButtonLineUpStyle"
        BasedOn="{StaticResource RepeatButtonLineBaseStyle}"
        TargetType="RepeatButton">
        <Setter Property="ContentTemplate" Value="{StaticResource RepeatButtonLineUpTemplate}" />
    </Style>
    <Style
        x:Key="RepeatButtonLineDownStyle"
        BasedOn="{StaticResource RepeatButtonLineBaseStyle}"
        TargetType="RepeatButton">
        <Setter Property="ContentTemplate" Value="{StaticResource RepeatButtonLineDownTemplate}" />
    </Style>
    <Style
        x:Key="RepeatButtonLineLeftStyle"
        BasedOn="{StaticResource RepeatButtonLineBaseStyle}"
        TargetType="RepeatButton">
        <Setter Property="ContentTemplate" Value="{StaticResource RepeatButtonLineLeftTemplate}" />
        <Style.Triggers>
            <Trigger Property="FlowDirection" Value="RightToLeft">
                <Setter Property="ContentTemplate" Value="{StaticResource RepeatButtonLineRightTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="RepeatButtonLineRightStyle"
        BasedOn="{StaticResource RepeatButtonLineBaseStyle}"
        TargetType="RepeatButton">
        <Setter Property="ContentTemplate" Value="{StaticResource RepeatButtonLineRightTemplate}" />
        <Style.Triggers>
            <Trigger Property="FlowDirection" Value="RightToLeft">
                <Setter Property="ContentTemplate" Value="{StaticResource RepeatButtonLineLeftTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ThumbBaseStyle" TargetType="Thumb">
        <Setter Property="Background" Value="{telerik1:FluentResource ResourceKey=MainBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:FluentResource ResourceKey=MainBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Grid Background="Transparent">
                        <Border
                            x:Name="Track"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Track" Property="Background" Value="{telerik1:FluentResource ResourceKey=MouseOverBrush}" />
                        </Trigger>
                        <Trigger Property="IsDragging" Value="True">
                            <Setter TargetName="Track" Property="Background" Value="{telerik1:FluentResource ResourceKey=PressedBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Track" Property="Opacity" Value="{telerik1:FluentResource ResourceKey=DisabledOpacity}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="ThumbHorizontalStyle"
        BasedOn="{StaticResource ThumbBaseStyle}"
        TargetType="Thumb">
        <Setter Property="Height" Value="16" />
    </Style>
    <Style
        x:Key="ThumbVerticalStyle"
        BasedOn="{StaticResource ThumbBaseStyle}"
        TargetType="Thumb">
        <Setter Property="Width" Value="16" />
    </Style>
    <Style x:Key="RepeatButtonBlankStyle" TargetType="RepeatButton">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Rectangle Fill="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Storyboard x:Key="ScaleToNormalYStoryboard">
        <DoubleAnimation
            Storyboard.TargetName="Thumb"
            Storyboard.TargetProperty="RenderTransform.Children[0].ScaleY"
            To="1"
            Duration="0:0:0.140" />
    </Storyboard>
    <Storyboard x:Key="ScaleToCompactYStoryboard">
        <DoubleAnimation
            Storyboard.TargetName="Thumb"
            Storyboard.TargetProperty="RenderTransform.Children[0].ScaleY"
            To=".25"
            Duration="0:0:0.140" />
    </Storyboard>
    <Storyboard x:Key="TranslateAutoYStoryboard">
        <DoubleAnimation
            Storyboard.TargetName="Thumb"
            Storyboard.TargetProperty="RenderTransform.Children[1].Y"
            To="0"
            Duration="0:0:0.100" />
    </Storyboard>
    <Storyboard x:Key="TranslateCompactYStoryboard">
        <DoubleAnimation
            Storyboard.TargetName="Thumb"
            Storyboard.TargetProperty="RenderTransform.Children[1].Y"
            To="-2"
            Duration="0:0:0.100" />
    </Storyboard>
    <ControlTemplate x:Key="ScrollBarHorizontalControlTemplate" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MaxWidth="16" />
                <ColumnDefinition Width="1*" />
                <ColumnDefinition MaxWidth="16" />
            </Grid.ColumnDefinitions>
            <Border
                Grid.ColumnSpan="3"
                Margin="0,-1,0,0"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            <RepeatButton
                x:Name="LeftHandle"
                Command="{x:Static ScrollBar.LineLeftCommand}"
                Opacity="0"
                Style="{StaticResource RepeatButtonLineLeftStyle}" />
            <Track
                Name="PART_Track"
                Grid.Column="1"
                Orientation="Horizontal">
                <Track.Resources>
                    <sys:Double x:Key="{x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}">16</sys:Double>
                </Track.Resources>
                <Track.DecreaseRepeatButton>
                    <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource RepeatButtonBlankStyle}" />
                </Track.DecreaseRepeatButton>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource RepeatButtonBlankStyle}" />
                </Track.IncreaseRepeatButton>
                <Track.Thumb>
                    <Thumb
                        x:Name="Thumb"
                        RenderTransformOrigin=".5 1"
                        Style="{StaticResource ThumbHorizontalStyle}">
                        <Thumb.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="1" />
                                <TranslateTransform />
                            </TransformGroup>
                        </Thumb.RenderTransform>
                    </Thumb>
                </Track.Thumb>
            </Track>
            <RepeatButton
                x:Name="RightHandle"
                Grid.Column="2"
                Command="{x:Static ScrollBar.LineRightCommand}"
                Opacity="0"
                Style="{StaticResource RepeatButtonLineRightStyle}" />
        </Grid>
        <ControlTemplate.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Source={x:Static telerik1:FluentPalette.Palette}, Path=ScrollBarsMode}" Value="Auto" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.EnterActions>
                    <BeginStoryboard x:Name="AutoModeScaleStoryboard" Storyboard="{StaticResource ScaleToCompactYStoryboard}" />
                    <BeginStoryboard x:Name="AutoModeTranslateStoryboard" Storyboard="{StaticResource TranslateCompactYStoryboard}" />
                </MultiDataTrigger.EnterActions>
                <MultiDataTrigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="AutoModeScaleStoryboard" />
                    <RemoveStoryboard BeginStoryboardName="AutoModeTranslateStoryboard" />
                </MultiDataTrigger.ExitActions>
                <Setter Property="Background" Value="Transparent" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Source={x:Static telerik1:FluentPalette.Palette}, Path=ScrollBarsMode}" Value="Auto" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.EnterActions>
                    <BeginStoryboard x:Name="AutoModeMouseOverScaleStoryboard" Storyboard="{StaticResource ScaleToNormalYStoryboard}" />
                    <BeginStoryboard Storyboard="{StaticResource TranslateAutoYStoryboard}" />
                </MultiDataTrigger.EnterActions>
                <MultiDataTrigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="AutoModeMouseOverScaleStoryboard" />
                    <BeginStoryboard Storyboard="{StaticResource ScaleToCompactYStoryboard}" />
                    <BeginStoryboard Storyboard="{StaticResource TranslateCompactYStoryboard}" />
                </MultiDataTrigger.ExitActions>
                <Setter TargetName="LeftHandle" Property="Opacity" Value="1" />
                <Setter TargetName="RightHandle" Property="Opacity" Value="1" />
                <Setter Property="Canvas.ZIndex" Value="1" />
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static telerik1:FluentPalette.Palette}, Path=ScrollBarsMode}" Value="Normal">
                <DataTrigger.EnterActions>
                    <BeginStoryboard x:Name="NormalModeScaleStoryboard" Storyboard="{StaticResource ScaleToNormalYStoryboard}" />
                    <BeginStoryboard x:Name="NormalModeTranslateStoryboard" Storyboard="{StaticResource TranslateAutoYStoryboard}" />
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="NormalModeScaleStoryboard" />
                    <RemoveStoryboard BeginStoryboardName="NormalModeTranslateStoryboard" />
                </DataTrigger.ExitActions>
                <Setter TargetName="LeftHandle" Property="Opacity" Value="1" />
                <Setter TargetName="RightHandle" Property="Opacity" Value="1" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static telerik1:FluentPalette.Palette}, Path=ScrollBarsMode}" Value="Compact">
                <DataTrigger.EnterActions>
                    <BeginStoryboard x:Name="CompactModeScaleStoryboard" Storyboard="{StaticResource ScaleToCompactYStoryboard}" />
                    <BeginStoryboard x:Name="CompactModeTranslateStoryboard" Storyboard="{StaticResource TranslateCompactYStoryboard}" />
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="CompactModeScaleStoryboard" />
                    <RemoveStoryboard BeginStoryboardName="CompactModeTranslateStoryboard" />
                </DataTrigger.ExitActions>
                <Setter Property="Background" Value="Transparent" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Storyboard x:Key="ScaleToNormalXStoryboard">
        <DoubleAnimation
            Storyboard.TargetName="Thumb"
            Storyboard.TargetProperty="RenderTransform.Children[0].ScaleX"
            To="1"
            Duration="0:0:0.140" />
    </Storyboard>
    <Storyboard x:Key="ScaleToCompactXStoryboard">
        <DoubleAnimation
            Storyboard.TargetName="Thumb"
            Storyboard.TargetProperty="RenderTransform.Children[0].ScaleX"
            To=".25"
            Duration="0:0:0.140" />
    </Storyboard>
    <Storyboard x:Key="TranslateAutoXStoryboard">
        <DoubleAnimation
            Storyboard.TargetName="Thumb"
            Storyboard.TargetProperty="RenderTransform.Children[1].X"
            To="0"
            Duration="0:0:0.100" />
    </Storyboard>
    <Storyboard x:Key="TranslateCompactXStoryboard">
        <DoubleAnimation
            Storyboard.TargetName="Thumb"
            Storyboard.TargetProperty="RenderTransform.Children[1].X"
            To="-2"
            Duration="0:0:0.100" />
    </Storyboard>
    <ControlTemplate x:Key="ScrollBarVerticalControlTemplate" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="16" />
                <RowDefinition Height="1*" />
                <RowDefinition MaxHeight="16" />
            </Grid.RowDefinitions>
            <Border
                Grid.RowSpan="3"
                Margin="-1,0,0,0"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            <RepeatButton
                x:Name="TopHandle"
                Command="{x:Static ScrollBar.LineUpCommand}"
                Content="Up"
                Opacity="0"
                Style="{StaticResource RepeatButtonLineUpStyle}" />
            <Track
                Name="PART_Track"
                Grid.Row="1"
                IsDirectionReversed="True">
                <Track.Resources>
                    <sys:Double x:Key="{x:Static SystemParameters.VerticalScrollBarButtonHeightKey}">16</sys:Double>
                </Track.Resources>
                <Track.DecreaseRepeatButton>
                    <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource RepeatButtonBlankStyle}" />
                </Track.DecreaseRepeatButton>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource RepeatButtonBlankStyle}" />
                </Track.IncreaseRepeatButton>
                <Track.Thumb>
                    <Thumb
                        x:Name="Thumb"
                        RenderTransformOrigin="1 .5"
                        Style="{StaticResource ThumbVerticalStyle}">
                        <Thumb.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleY="1" />
                                <TranslateTransform />
                            </TransformGroup>
                        </Thumb.RenderTransform>
                    </Thumb>
                </Track.Thumb>
            </Track>
            <RepeatButton
                x:Name="BottomHandle"
                Grid.Row="2"
                Command="{x:Static ScrollBar.LineDownCommand}"
                Opacity="0"
                Style="{StaticResource RepeatButtonLineDownStyle}" />
        </Grid>
        <ControlTemplate.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Source={x:Static telerik1:FluentPalette.Palette}, Path=ScrollBarsMode}" Value="Auto" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.EnterActions>
                    <BeginStoryboard x:Name="AutoModeScaleStoryboard" Storyboard="{StaticResource ScaleToCompactXStoryboard}" />
                    <BeginStoryboard x:Name="AutoModeTranslateStoryboard" Storyboard="{StaticResource TranslateCompactXStoryboard}" />
                </MultiDataTrigger.EnterActions>
                <MultiDataTrigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="AutoModeScaleStoryboard" />
                    <RemoveStoryboard BeginStoryboardName="AutoModeTranslateStoryboard" />
                </MultiDataTrigger.ExitActions>
                <Setter Property="Background" Value="Transparent" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Source={x:Static telerik1:FluentPalette.Palette}, Path=ScrollBarsMode}" Value="Auto" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.EnterActions>
                    <BeginStoryboard x:Name="AutoModeMouseOverScaleStoryboard" Storyboard="{StaticResource ScaleToNormalXStoryboard}" />
                    <BeginStoryboard Storyboard="{StaticResource TranslateAutoXStoryboard}" />
                </MultiDataTrigger.EnterActions>
                <MultiDataTrigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="AutoModeMouseOverScaleStoryboard" />
                    <BeginStoryboard Storyboard="{StaticResource ScaleToCompactXStoryboard}" />
                    <BeginStoryboard Storyboard="{StaticResource TranslateCompactXStoryboard}" />
                </MultiDataTrigger.ExitActions>
                <Setter TargetName="TopHandle" Property="Opacity" Value="1" />
                <Setter TargetName="BottomHandle" Property="Opacity" Value="1" />
                <Setter Property="Canvas.ZIndex" Value="1" />
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static telerik1:FluentPalette.Palette}, Path=ScrollBarsMode}" Value="Normal">
                <DataTrigger.EnterActions>
                    <BeginStoryboard x:Name="NormalModeScaleStoryboard" Storyboard="{StaticResource ScaleToNormalXStoryboard}" />
                    <BeginStoryboard x:Name="NormalModeTranslateStoryboard" Storyboard="{StaticResource TranslateAutoXStoryboard}" />
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="NormalModeScaleStoryboard" />
                    <RemoveStoryboard BeginStoryboardName="NormalModeTranslateStoryboard" />
                </DataTrigger.ExitActions>
                <Setter TargetName="TopHandle" Property="Opacity" Value="1" />
                <Setter TargetName="BottomHandle" Property="Opacity" Value="1" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static telerik1:FluentPalette.Palette}, Path=ScrollBarsMode}" Value="Compact">
                <DataTrigger.EnterActions>
                    <BeginStoryboard x:Name="CompactModeScaleStoryboard" Storyboard="{StaticResource ScaleToCompactXStoryboard}" />
                    <BeginStoryboard x:Name="CompactModeTranslateStoryboard" Storyboard="{StaticResource TranslateCompactXStoryboard}" />
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="CompactModeScaleStoryboard" />
                    <RemoveStoryboard BeginStoryboardName="CompactModeTranslateStoryboard" />
                </DataTrigger.ExitActions>
                <Setter Property="Background" Value="Transparent" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="ScrollBarStyle" TargetType="{x:Type ScrollBar}">
        <Setter Property="Template" Value="{StaticResource ScrollBarVerticalControlTemplate}" />
        <Setter Property="MinWidth" Value="16" />
        <Setter Property="MinHeight" Value="16" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Background" Value="{telerik1:FluentResource ResourceKey=AlternativeBrush}" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ClipToBounds" Value="True" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Template" Value="{StaticResource ScrollBarHorizontalControlTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <ControlTemplate x:Key="ScrollViewerControlTemplate" TargetType="{x:Type ScrollViewer}">
        <Border
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <ScrollContentPresenter
                    x:Name="PART_ScrollContentPresenter"
                    Margin="{TemplateBinding Padding}"
                    CanContentScroll="{TemplateBinding CanContentScroll}"
                    CanHorizontallyScroll="False"
                    CanVerticallyScroll="False"
                    Content="{TemplateBinding Content}"
                    ContentTemplate="{TemplateBinding ContentTemplate}" />
                <Border
                    x:Name="ScrollViewerCornerBorder"
                    Grid.Row="1"
                    Grid.Column="1"
                    Background="{Binding ElementName=PART_HorizontalScrollBar, Path=Background}"
                    Visibility="Collapsed" />
                <ScrollBar
                    x:Name="PART_HorizontalScrollBar"
                    VerticalAlignment="Bottom"
                    AutomationProperties.AutomationId="HorizontalScrollBar"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    Cursor="Arrow"
                    Maximum="{TemplateBinding ScrollableWidth}"
                    Minimum="0"
                    Orientation="Horizontal"
                    ViewportSize="{TemplateBinding ViewportWidth}"
                    Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                    Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                <ScrollBar
                    x:Name="PART_VerticalScrollBar"
                    HorizontalAlignment="Right"
                    AutomationProperties.AutomationId="VerticalScrollBar"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    Cursor="Arrow"
                    Maximum="{TemplateBinding ScrollableHeight}"
                    Minimum="0"
                    ViewportSize="{TemplateBinding ViewportHeight}"
                    Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                    Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static telerik1:FluentPalette.Palette}, Path=ScrollBarsMode}" Value="Normal">
                <Setter TargetName="PART_VerticalScrollBar" Property="Grid.Column" Value="1" />
                <Setter TargetName="PART_HorizontalScrollBar" Property="Grid.Row" Value="1" />
                <Setter TargetName="ScrollViewerCornerBorder" Property="Visibility" Value="Visible" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="ScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
        <Setter Property="mat:MaterialAssist.CornerRadius" Value="0" />
        <Setter Property="Template" Value="{StaticResource ScrollViewerControlTemplate}" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=MarkerBrush}" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
    </Style>
    <Style BasedOn="{StaticResource ScrollBarStyle}" TargetType="ScrollBar" />
    <Style BasedOn="{StaticResource ScrollViewerStyle}" TargetType="ScrollViewer" />
    <Style x:Key="DragVisualStyle" TargetType="telerikDragDrop:DragVisual">
        <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=MarkerBrush}" />
        <Setter Property="Background" Value="{telerik1:FluentResource ResourceKey=AlternativeBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:FluentResource ResourceKey=BasicBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Margin" Value="5,0,0,0" />
        <Setter Property="Padding" Value="0,5,5,5" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerikDragDrop:DragVisual">
                    <Grid>
                        <Border
                            x:Name="SecondItemVisual"
                            Margin="4,4,0,0"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Opacity="0.8"
                            Visibility="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=IsDraggingMultipleItems, Converter={StaticResource BooleanToVisibilityConverter}}" />
                        <Border
                            x:Name="ThirdthItemVisual"
                            Margin="2"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Opacity="0.8"
                            Visibility="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=IsDraggingMultipleItems, Converter={StaticResource BooleanToVisibilityConverter}}" />
                        <Border
                            x:Name="DragBackgroundVisual"
                            Margin="0,0,4,4"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Opacity="0.8" />
                        <Border Padding="{TemplateBinding BorderThickness}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <telerik1:RadGlyph
                                    x:Name="NoneEffect"
                                    Margin="5,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    Foreground="{telerik1:FluentResource ResourceKey=ValidationBrush}"
                                    Glyph="{StaticResource GlyphCancel}"
                                    Visibility="Collapsed" />
                                <telerik1:RadGlyph
                                    x:Name="MoveEffect"
                                    Margin="5,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    Foreground="{telerik1:FluentResource ResourceKey=IconBrush}"
                                    Glyph="{StaticResource GlyphArrowRight}"
                                    Visibility="Collapsed" />
                                <telerik1:RadGlyph
                                    x:Name="CopyEffect"
                                    Margin="5,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    Foreground="{telerik1:FluentResource ResourceKey=IconBrush}"
                                    Glyph="{StaticResource GlyphPlus}"
                                    Visibility="Collapsed" />
                                <telerik1:RadGlyph
                                    x:Name="LinkEffect"
                                    Margin="5,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    Foreground="{telerik1:FluentResource ResourceKey=IconBrush}"
                                    Glyph="{StaticResource GlyphLinkHorizontal}"
                                    Visibility="Collapsed" />
                                <telerik1:RadGlyph
                                    x:Name="ScrollEffect"
                                    Margin="5,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    Foreground="{telerik1:FluentResource ResourceKey=IconBrush}"
                                    Glyph="{StaticResource GlyphArrowsKpi}"
                                    Visibility="Collapsed" />
                                <ContentPresenter
                                    x:Name="Content"
                                    Grid.Column="1"
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Content="{TemplateBinding Content}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Effects" Value="None">
                            <Setter TargetName="NoneEffect" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="Effects" Value="Move">
                            <Setter TargetName="MoveEffect" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="Effects" Value="Copy">
                            <Setter TargetName="CopyEffect" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="Effects" Value="Move, Scroll">
                            <Setter TargetName="MoveEffect" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="Effects" Value="Copy, Scroll">
                            <Setter TargetName="CopyEffect" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="Effects" Value="Link">
                            <Setter TargetName="LinkEffect" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="Effects" Value="Scroll">
                            <Setter TargetName="ScrollEffect" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource DragVisualStyle}" TargetType="telerikDragDrop:DragVisual" />
    <Style x:Key="RadListBoxItemStyle" TargetType="telerik1:RadListBoxItem">
        <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:FluentResource ResourceKey=MouseOverBrush}" />
        <Setter Property="mat:MaterialAssist.PressedBrush" Value="{telerik1:FluentResource ResourceKey=PressedBrush}" />
        <Setter Property="mat:MaterialAssist.CheckedBrush" Value="{telerik1:FluentResource ResourceKey=AccentBrush}" />
        <Setter Property="mat:MaterialAssist.FocusBrush" Value="{telerik1:FluentResource ResourceKey=AccentFocusedBrush}" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=MarkerBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0,1" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Local" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadListBoxItem">
                    <Grid Background="Transparent">
                        <Grid Margin="0">
                            <Border
                                x:Name="BorderVisual"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <Border
                                x:Name="FocusVisual"
                                Background="{x:Null}"
                                BorderBrush="{TemplateBinding mat:MaterialAssist.FocusBrush}"
                                BorderThickness="{telerik1:FluentResource ResourceKey=FocusThickness}"
                                IsHitTestVisible="False"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                Visibility="Collapsed" />
                            <mat:FluentControl
                                x:Name="Fluent"
                                HorizontalContentAlignment="Stretch"
                                VerticalContentAlignment="Stretch"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                ClipToBounds="True">
                                <ContentControl
                                    x:Name="contentPresenter"
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Content="{TemplateBinding Content}"
                                    ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                    Foreground="{TemplateBinding Foreground}"
                                    IsTabStop="False" />
                            </mat:FluentControl>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <!--  Focused  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="True" />
                                <Condition Property="IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Visible" />
                        </MultiTrigger>

                        <!--  IsSelected  -->
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:FluentResource ResourceKey=AccentMouseOverBrush}" />
                            <Setter Property="mat:MaterialAssist.PressedBrush" Value="{telerik1:FluentResource ResourceKey=AccentPressedBrush}" />
                            <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=MarkerInvertedBrush}" />
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CheckedBrush), Mode=OneWay}" />
                            <Setter TargetName="BorderVisual" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CheckedBrush), Mode=OneWay}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}" />
                            <Setter TargetName="BorderVisual" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}" />
                        </Trigger>
                        <Trigger SourceName="Fluent" Property="IsPressed" Value="True">
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.PressedBrush), Mode=OneWay}" />
                            <Setter TargetName="BorderVisual" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.PressedBrush), Mode=OneWay}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="contentPresenter" Property="Opacity" Value="{telerik1:FluentResource ResourceKey=DisabledOpacity}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="ListBoxDragVisualStyle"
        BasedOn="{StaticResource DragVisualStyle}"
        TargetType="telerikDragDrop:ListBoxDragVisual">
        <Setter Property="FontFamily" Value="{telerik1:FluentResource ResourceKey=FontFamily}" />
        <Setter Property="FontSize" Value="{telerik1:FluentResource ResourceKey=FontSize}" />
        <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=MarkerInvertedBrush}" />
        <Setter Property="Background" Value="{telerik1:FluentResource ResourceKey=AccentBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:FluentResource ResourceKey=AccentBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="5,6" />
        <Setter Property="Margin" Value="12,0,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerikDragDrop:DragVisual">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Border
                                x:Name="DragBackgroundVisual"
                                Grid.ColumnSpan="2"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Opacity="0.9" />
                            <telerik1:RadGlyph
                                x:Name="NoneEffect"
                                Margin="5,5,0,5"
                                VerticalAlignment="Top"
                                Foreground="{TemplateBinding Foreground}"
                                Glyph="{StaticResource GlyphCancel}"
                                Visibility="Collapsed" />
                            <ItemsControl
                                Grid.Column="1"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                ItemsSource="{Binding DraggedItemsStrings}" />
                        </Grid>
                        <Grid x:Name="lowerGrid" Grid.Row="1">
                            <Border
                                Background="{telerik1:FluentResource ResourceKey=AlternativeBrush}"
                                BorderThickness="0"
                                Opacity="0.8" />
                            <StackPanel Margin="5,6" Orientation="Horizontal">
                                <telerik1:RadGlyph
                                    Margin="0,0,5,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"
                                    FontSize="16"
                                    Foreground="{telerik1:FluentResource ResourceKey=IconBrush}"
                                    Glyph="{StaticResource GlyphInsertUp}"
                                    Visibility="{Binding DropPosition, Converter={StaticResource DragDropBooleanToVisibilityConverter}, ConverterParameter=Before}" />
                                <telerik1:RadGlyph
                                    Margin="0,0,5,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"
                                    FontSize="16"
                                    Foreground="{telerik1:FluentResource ResourceKey=IconBrush}"
                                    Glyph="{StaticResource GlyphInsertDown}"
                                    Visibility="{Binding DropPosition, Converter={StaticResource DragDropBooleanToVisibilityConverter}, ConverterParameter=After}" />
                                <TextBlock Foreground="{telerik1:FluentResource ResourceKey=MarkerBrush}" Text="{Binding DropPosition}" />
                                <TextBlock
                                    Margin="1,0,3,0"
                                    Foreground="{telerik1:FluentResource ResourceKey=MarkerBrush}"
                                    Text=":" />
                                <TextBlock Foreground="{telerik1:FluentResource ResourceKey=MarkerBrush}" Text="{Binding DropItemString}" />
                            </StackPanel>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Effects" Value="None">
                            <Setter TargetName="NoneEffect" Property="Visibility" Value="Visible" />
                            <Setter TargetName="lowerGrid" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Effects" Value="Move">
                            <Setter TargetName="NoneEffect" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RadListBoxStyle" TargetType="telerik1:RadListBox">
        <Setter Property="mat:MaterialAssist.CornerRadius" Value="0" />
        <Setter Property="FontFamily" Value="{telerik1:FluentResource ResourceKey=FontFamily}" />
        <Setter Property="FontSize" Value="{telerik1:FluentResource ResourceKey=FontSize}" />
        <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=MarkerBrush}" />
        <Setter Property="Background" Value="{telerik1:FluentResource ResourceKey=AlternativeBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:FluentResource ResourceKey=BasicBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="telerik1:ScrollingSettingsBehavior.IsEnabled" Value="True" />
        <Setter Property="telerik1:ScrollingSettingsBehavior.ScrollAreaPadding" Value="30" />

        <!--  ScrollStep should be at least the ActualHeight of the ListBoxItem when scrolling is item based.  -->
        <Setter Property="telerik1:ScrollingSettingsBehavior.ScrollStep" Value="28" />
        <Setter Property="telerik1:ScrollingSettingsBehavior.ScrollStepTime" Value="00:00:00.05" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Once" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadListBox">
                    <Grid UseLayoutRounding="True">
                        <Border
                            x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}">
                            <ScrollViewer
                                x:Name="PART_ScrollViewer"
                                Padding="{TemplateBinding Padding}"
                                Background="{x:Null}"
                                BorderBrush="{x:Null}"
                                BorderThickness="0"
                                HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                IsTabStop="False"
                                VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                                <ScrollViewer.InputBindings>
                                    <KeyBinding
                                        Key="A"
                                        Command="telerikPrimitives:ListControl.SelectAllCommand"
                                        Modifiers="Control" />
                                </ScrollViewer.InputBindings>
                                <ItemsPresenter ClipToBounds="True" />
                            </ScrollViewer>
                        </Border>
                        <ContentPresenter
                            x:Name="dragVisualPlaceholder"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Visibility="Collapsed" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource RadListBoxStyle}" TargetType="telerik1:RadListBox" />
    <Style BasedOn="{StaticResource RadListBoxItemStyle}" TargetType="telerik1:RadListBoxItem" />
    <Style BasedOn="{StaticResource ListBoxDragVisualStyle}" TargetType="telerikDragDrop:ListBoxDragVisual" />
    <Style x:Key="CalendarButtonStyle" TargetType="calendar:CalendarButton">
        <Setter Property="mat:MaterialAssist.CornerRadius" Value="0" />
        <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:FluentResource ResourceKey=MouseOverBrush}" />
        <Setter Property="mat:MaterialAssist.PressedBrush" Value="{telerik1:FluentResource ResourceKey=PressedBrush}" />
        <Setter Property="mat:MaterialAssist.FocusBrush" Value="{telerik1:FluentResource ResourceKey=AccentFocusedBrush}" />
        <Setter Property="mat:MaterialAssist.CheckedBrush" Value="{telerik1:FluentResource ResourceKey=AccentBrush}" />
        <Setter Property="FontFamily" Value="{telerik1:FluentResource ResourceKey=FontFamily}" />
        <Setter Property="FontSize" Value="{telerik1:FluentResource ResourceKey=FontSize}" />
        <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=MarkerBrush}" />
        <Setter Property="Background" Value="{telerik1:FluentResource ResourceKey=PrimaryBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:FluentResource ResourceKey=PrimaryBackgroundBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="MinWidth" Value="38" />
        <Setter Property="MinHeight" Value="38" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="calendar:CalendarButton">
                    <Grid
                        x:Name="LayoutRoot"
                        Margin="{StaticResource CalendarButtonMargin}"
                        Background="Transparent">
                        <Border
                            x:Name="BorderVisual"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}" />
                        <mat:FluentControl
                            x:Name="Fluent"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                            IsSmartClipped="True">
                            <ContentControl
                                x:Name="Content"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Content}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                FontFamily="{TemplateBinding FontFamily}"
                                FontSize="{TemplateBinding FontSize}"
                                Foreground="{TemplateBinding Foreground}"
                                IsTabStop="False" />
                        </mat:FluentControl>
                        <Border
                            x:Name="FocusVisual"
                            Background="{x:Null}"
                            BorderBrush="{TemplateBinding mat:MaterialAssist.FocusBrush}"
                            BorderThickness="{telerik1:FluentResource ResourceKey=FocusThickness}"
                            CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                            IsHitTestVisible="False"
                            Visibility="Collapsed" />
                        <Border
                            x:Name="SelectedVisual"
                            Background="{x:Null}"
                            BorderBrush="{telerik1:FluentResource ResourceKey=IconBrush}"
                            BorderThickness="{telerik1:FluentResource ResourceKey=FocusThickness}"
                            CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                            IsHitTestVisible="False"
                            Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFromCurrentView" Value="False">
                            <Setter TargetName="BorderVisual" Property="Background" Value="{telerik1:FluentResource ResourceKey=AlternativeBrush}" />
                            <Setter TargetName="BorderVisual" Property="BorderBrush" Value="{telerik1:FluentResource ResourceKey=AlternativeBrush}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="ButtonType" Value="TodayDate">
                            <Setter TargetName="BorderVisual" Property="Background" Value="{telerik1:FluentResource ResourceKey=AccentMouseOverBrush}" />
                            <Setter TargetName="BorderVisual" Property="BorderBrush" Value="{telerik1:FluentResource ResourceKey=AccentMouseOverBrush}" />
                            <Setter Property="mat:MaterialAssist.CheckedBrush" Value="{telerik1:FluentResource ResourceKey=AccentPressedBrush}" />
                            <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:FluentResource ResourceKey=AccentMouseOverBrush}" />
                            <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=MarkerInvertedBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}" />
                            <Setter TargetName="BorderVisual" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}" />
                        </Trigger>
                        <Trigger SourceName="Fluent" Property="IsPressed" Value="True">
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.PressedBrush), Mode=OneWay}" />
                            <Setter TargetName="BorderVisual" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.PressedBrush), Mode=OneWay}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Content" Property="Opacity" Value="{telerik1:FluentResource ResourceKey=DisabledOpacity}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=MarkerInvertedBrush}" />
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CheckedBrush), Mode=OneWay}" />
                            <Setter TargetName="BorderVisual" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CheckedBrush), Mode=OneWay}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="ButtonType" Value="TodayDate" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                        <Trigger Property="ButtonType" Value="WeekNumber">
                            <Setter TargetName="Fluent" Property="IsEnabled" Value="False" />
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background, Mode=OneWay}" />
                            <Setter TargetName="BorderVisual" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background, Mode=OneWay}" />
                            <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=AccentBrush}" />
                        </Trigger>
                        <Trigger Property="ButtonType" Value="WeekName">
                            <Setter TargetName="Fluent" Property="IsEnabled" Value="False" />
                            <Setter TargetName="Content" Property="Foreground" Value="{telerik1:FluentResource ResourceKey=MarkerBrush}" />
                            <Setter TargetName="Content" Property="FontWeight" Value="SemiBold" />
                            <Setter TargetName="LayoutRoot" Property="Margin" Value="0" />
                            <Setter TargetName="BorderVisual" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource CalendarButtonStyle}" TargetType="calendar:CalendarButton" />
    <Style x:Key="CalendarViewStyle" TargetType="calendar:CalendarView">
        <Setter Property="FontSize" Value="{telerik1:FluentResource ResourceKey=FontSize}" />
        <Setter Property="FontFamily" Value="{telerik1:FluentResource ResourceKey=FontFamily}" />
        <Setter Property="Background" Value="{telerik1:FluentResource ResourceKey=BasicBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:FluentResource ResourceKey=BasicBrush}" />
        <Setter Property="BorderThickness" Value="{StaticResource CalendarViewBorderThickness}" />
        <Setter Property="Padding" Value="{StaticResource CalendarViewHeaderPadding}" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="calendar:CalendarView">
                    <Grid Margin="{StaticResource CalendarViewMargin}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Border
                            x:Name="BackgroundVisual"
                            Grid.RowSpan="2"
                            Background="{TemplateBinding Background}" />
                        <Border
                            x:Name="Header"
                            MinHeight="40"
                            Margin="{StaticResource CalendarViewHeaderMargin}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Visibility="{TemplateBinding HeaderVisibility}">
                            <ContentPresenter
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Header}"
                                ContentTemplate="{TemplateBinding HeaderTemplate}" />
                        </Border>
                        <ItemsPresenter Grid.Row="1" Margin="{StaticResource CalendarItemsMargin}" />
                        <Rectangle
                            x:Name="MinDesiredSize"
                            Grid.Row="1"
                            Width="306"
                            Height="268" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MonthViewStyle" TargetType="calendar:CalendarView">
        <Setter Property="FontFamily" Value="{telerik1:FluentResource ResourceKey=FontFamily}" />
        <Setter Property="FontSize" Value="{telerik1:FluentResource ResourceKey=FontSize}" />
        <Setter Property="Background" Value="{telerik1:FluentResource ResourceKey=BasicBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:FluentResource ResourceKey=BasicBrush}" />
        <Setter Property="BorderThickness" Value="{StaticResource CalendarViewBorderThickness}" />
        <Setter Property="Padding" Value="{StaticResource CalendarViewHeaderPadding}" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="calendar:CalendarView">
                    <Grid Margin="{StaticResource CalendarViewMargin}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Border
                            x:Name="BackgroundVisual"
                            Grid.RowSpan="2"
                            Background="{TemplateBinding Background}" />
                        <Border
                            x:Name="Header"
                            MinHeight="40"
                            Margin="{StaticResource CalendarViewHeaderMargin}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Visibility="{TemplateBinding HeaderVisibility}">
                            <ContentPresenter
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Header}"
                                ContentTemplate="{TemplateBinding HeaderTemplate}" />
                        </Border>
                        <Grid x:Name="WeekHeaders" Grid.Row="1">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="6*" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="7*" />
                            </Grid.ColumnDefinitions>
                            <Border
                                x:Name="VerticalOuterBorder"
                                Grid.RowSpan="2"
                                Margin="{StaticResource CalendarWeekHeaderVerticalOuterBorderMargin}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="0"
                                Canvas.ZIndex="{StaticResource CalendarWeekHeaderVerticalOuterBorderZIndex}"
                                Visibility="{Binding Path=HideColumn, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InvertedBooleanToVisibilityConverter}}" />
                            <Rectangle
                                x:Name="VerticalBackground"
                                Grid.RowSpan="2"
                                Margin="0"
                                Canvas.ZIndex="{StaticResource CalendarWeekHeaderVerticalBackgroundZIndex}"
                                Visibility="{Binding Path=HideColumn, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InvertedBooleanToVisibilityConverter}}" />
                            <Rectangle
                                x:Name="HorizontalBackground"
                                Grid.ColumnSpan="2"
                                Margin="{TemplateBinding BorderThickness}"
                                Canvas.ZIndex="{StaticResource CalendarWeekHeaderHorizontalBackgroundZIndex}"
                                Fill="{telerik1:FluentResource ResourceKey=PrimaryBackgroundBrush}"
                                Visibility="{Binding Path=HideRow, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InvertedBooleanToVisibilityConverter}}" />
                        </Grid>
                        <ItemsPresenter Grid.Row="1" Margin="{StaticResource CalendarItemsMargin}" />
                        <Rectangle
                            x:Name="MinDesiredSize"
                            Grid.Row="1"
                            Width="306"
                            Height="268" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource MonthViewStyle}" TargetType="calendar:CalendarView" />
    <Style
        x:Key="MoveRepeatButtonBaseStyle"
        BasedOn="{StaticResource RepeatButtonStyle}"
        TargetType="RepeatButton">
        <Setter Property="Width" Value="38" />
        <Setter Property="Height" Value="38" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=IconBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Background" Value="#01FFFFFF" />
    </Style>
    <Style
        x:Key="MoveLeftButtonStyle"
        BasedOn="{StaticResource MoveRepeatButtonBaseStyle}"
        TargetType="RepeatButton">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <telerik:RadGlyph
                        x:Name="Icon"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        FontSize="16"
                        Glyph="{StaticResource GlyphArrowChevronUp}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="MoveRightButtonStyle"
        BasedOn="{StaticResource MoveRepeatButtonBaseStyle}"
        TargetType="RepeatButton">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <telerik:RadGlyph
                        x:Name="Icon"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        FontSize="16"
                        Glyph="{StaticResource GlyphArrowChevronDown}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CalendarHeaderButton" TargetType="Button">
        <Setter Property="FontSize" Value="{telerik1:FluentResource ResourceKey=FontSizeL}" />
        <Setter Property="FontFamily" Value="{telerik1:FluentResource ResourceKey=FontFamily}" />
        <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=MarkerBrush}" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="10,0" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="LayoutRoot" Background="#01FFFFFF">
                        <TextBlock
                            x:Name="Text"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Foreground="{TemplateBinding Foreground}"
                            Text="{TemplateBinding Content}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Text" Property="TextDecorations" Value="{StaticResource HeaderButtonTextDecoration}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Text" Property="TextDecorations" Value="{StaticResource HeaderButtonTextDecoration}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="Text" Property="TextDecorations" Value="{StaticResource HeaderButtonTextDecoration}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="LayoutRoot" Property="Opacity" Value="{telerik1:FluentResource ResourceKey=DisabledOpacity}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RadCalendarStyle" TargetType="telerikInput:RadCalendar">
        <Setter Property="Columns" Value="1" />
        <Setter Property="Rows" Value="1" />
        <Setter Property="MonthViewStyle" Value="{StaticResource MonthViewStyle}" />
        <Setter Property="YearViewStyle" Value="{StaticResource CalendarViewStyle}" />
        <Setter Property="DecadeViewStyle" Value="{StaticResource CalendarViewStyle}" />
        <Setter Property="CenturyViewStyle" Value="{StaticResource CalendarViewStyle}" />
        <Setter Property="DayButtonStyle" Value="{StaticResource CalendarButtonStyle}" />
        <Setter Property="MonthButtonStyle" Value="{StaticResource CalendarButtonStyle}" />
        <Setter Property="YearButtonStyle" Value="{StaticResource CalendarButtonStyle}" />
        <Setter Property="DecadeButtonStyle" Value="{StaticResource CalendarButtonStyle}" />
        <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=MarkerBrush}" />
        <Setter Property="Background" Value="{telerik1:FluentResource ResourceKey=PrimaryBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:FluentResource ResourceKey=BasicBrush}" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="UseShortestDayNames" Value="True" />
        <Setter Property="ViewsHeaderVisibility" Value="Collapsed" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Once" />
        <Setter Property="KeyboardNavigation.IsTabStop" Value="True" />
        <Setter Property="TabIndex" Value="0" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerikInput:RadCalendar">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Border
                            x:Name="BackgroundVisual"
                            Grid.RowSpan="2"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}" />
                        <calendar:TransitionPanel
                            x:Name="TransitionPanel"
                            Grid.Row="1"
                            Margin="{StaticResource CalendarTransitionPanelMargin}"
                            ClipToBounds="True"
                            FocusVisualStyle="{x:Null}">
                            <telerikPrimitives:RadUniformGrid
                                x:Name="MonthViews"
                                Columns="{TemplateBinding Columns}"
                                Rows="{TemplateBinding Rows}" />
                            <telerikPrimitives:RadUniformGrid
                                x:Name="YearViews"
                                Columns="{TemplateBinding Columns}"
                                Rows="{TemplateBinding Rows}"
                                Visibility="Collapsed" />
                            <telerikPrimitives:RadUniformGrid
                                x:Name="DecadeViews"
                                Columns="{TemplateBinding Columns}"
                                Rows="{TemplateBinding Rows}"
                                Visibility="Collapsed" />
                            <telerikPrimitives:RadUniformGrid
                                x:Name="CenturyViews"
                                Columns="{TemplateBinding Columns}"
                                Rows="{TemplateBinding Rows}"
                                Visibility="Collapsed" />
                        </calendar:TransitionPanel>
                        <Border
                            x:Name="Navigation"
                            MinHeight="40"
                            Background="{telerik1:FluentResource ResourceKey=PrimaryBackgroundBrush}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessToOrientedThicknessConverter}, ConverterParameter=LeftTopRight}"
                            Canvas.ZIndex="2"
                            Visibility="{TemplateBinding HeaderVisibility}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Button
                                    x:Name="Header"
                                    Grid.Column="0"
                                    Style="{StaticResource CalendarHeaderButton}" />
                                <RepeatButton
                                    x:Name="MoveLeft"
                                    Grid.Column="1"
                                    Style="{StaticResource MoveLeftButtonStyle}" />
                                <RepeatButton
                                    x:Name="MoveRight"
                                    Grid.Column="2"
                                    Style="{StaticResource MoveRightButtonStyle}" />
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="MonthViewPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <calendar:CalendarPanel
                        VerticalAlignment="Stretch"
                        Columns="8"
                        FirstColumn="1"
                        PreserveSpaceForCollapsedChildren="True"
                        Rows="7" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="YearViewPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <calendar:CalendarPanel
                        VerticalAlignment="Stretch"
                        Columns="4"
                        PreserveSpaceForCollapsedChildren="True"
                        Rows="3" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="DecadeViewPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <calendar:CalendarPanel
                        VerticalAlignment="Stretch"
                        Columns="4"
                        PreserveSpaceForCollapsedChildren="True"
                        Rows="3" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="CenturyViewPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <calendar:CalendarPanel
                        VerticalAlignment="Stretch"
                        Columns="4"
                        PreserveSpaceForCollapsedChildren="True"
                        Rows="3" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource RadCalendarStyle}" TargetType="telerikInput:RadCalendar" />
    <Style x:Key="RadClockItemStyle" TargetType="telerikInput:RadClockItem">
        <Setter Property="mat:MaterialAssist.CornerRadius" Value="0" />
        <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:FluentResource ResourceKey=MouseOverBrush}" />
        <Setter Property="mat:MaterialAssist.PressedBrush" Value="{telerik1:FluentResource ResourceKey=PressedBrush}" />
        <Setter Property="mat:MaterialAssist.CheckedBrush" Value="{telerik1:FluentResource ResourceKey=AccentPressedBrush}" />
        <Setter Property="FontSize" Value="{telerik1:FluentResource ResourceKey=FontSize}" />
        <Setter Property="FontFamily" Value="{telerik1:FluentResource ResourceKey=FontFamily}" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=MarkerBrush}" />
        <Setter Property="Background" Value="{telerik1:FluentResource ResourceKey=PrimaryBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:FluentResource ResourceKey=PrimaryBackgroundBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Margin" Value="{StaticResource ClockItemsMargin}" />
        <Setter Property="Padding" Value="{StaticResource ClockItemPadding}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="MinHeight" Value="36" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerikInput:RadClockItem">
                    <Grid x:Name="LayoutRoot" Background="Transparent">
                        <Border
                            x:Name="BorderVisual"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}" />
                        <mat:FluentControl
                            x:Name="Fluent"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                            IsSmartClipped="True">
                            <ContentControl
                                x:Name="Content"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                Foreground="{TemplateBinding Foreground}" />
                        </mat:FluentControl>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Content" Property="Opacity" Value="{telerik1:FluentResource ResourceKey=DisabledOpacity}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}" />
                            <Setter TargetName="BorderVisual" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}" />
                        </Trigger>
                        <Trigger SourceName="Fluent" Property="IsPressed" Value="True">
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.PressedBrush), Mode=OneWay}" />
                            <Setter TargetName="BorderVisual" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.PressedBrush), Mode=OneWay}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=MarkerInvertedBrush}" />
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CheckedBrush), Mode=OneWay}" />
                            <Setter TargetName="BorderVisual" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CheckedBrush), Mode=OneWay}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource RadClockItemStyle}" TargetType="telerikInput:RadClockItem" />
    <Style x:Key="RadClockStyle" TargetType="telerikInput:RadClock">
        <Setter Property="FontFamily" Value="{telerik1:FluentResource ResourceKey=FontFamily}" />
        <Setter Property="FontSize" Value="{telerik1:FluentResource ResourceKey=FontSizeL}" />
        <Setter Property="Background" Value="{telerik1:FluentResource ResourceKey=PrimaryBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:FluentResource ResourceKey=BasicBrush}" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Padding" Value="{StaticResource CalendarHeaderPadding}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Once" />
        <Setter Property="KeyboardNavigation.IsTabStop" Value="True" />
        <Setter Property="TabIndex" Value="1" />
        <Setter Property="StartTime" Value="0:0:0" />
        <Setter Property="EndTime" Value="23:59:0" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <telerikPrimitives:RadUniformGrid x:Name="UniformGrid" Columns="4" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock
                        x:Name="ContentText"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Text="{Binding}"
                        TextAlignment="Center" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerikInput:RadClock">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Border
                            x:Name="BorderVisual"
                            Grid.RowSpan="2"
                            Background="{TemplateBinding BorderBrush}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{telerik1:FluentResource ResourceKey=CornerRadius}" />
                        <Border
                            x:Name="Header"
                            MinHeight="40"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{x:Null}"
                            BorderThickness="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessToOrientedThicknessConverter}, ConverterParameter=LeftTopRight}"
                            CornerRadius="{telerik1:FluentResource ResourceKey=CornerRadiusTop}">
                            <ContentControl
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Header}"
                                ContentTemplate="{TemplateBinding HeaderTemplate}"
                                FontFamily="{TemplateBinding FontFamily}"
                                FontSize="{TemplateBinding FontSize}"
                                FontWeight="{StaticResource HeaderTextFontWeight}"
                                IsTabStop="False" />
                        </Border>
                        <ItemsPresenter Grid.Row="1" Margin="{StaticResource ClockItemsPresenterMargin}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource RadClockStyle}" TargetType="telerikInput:RadClock" />
    <DataTemplate x:Key="TooltipTemplate">
        <Border
            Background="{telerik1:FluentResource ResourceKey=PrimaryBackgroundBrush}"
            BorderBrush="{telerik1:FluentResource ResourceKey=BasicBrush}"
            BorderThickness="1">
            <ContentControl
                Margin="5"
                Content="{Binding}"
                Foreground="{telerik1:FluentResource ResourceKey=MarkerBrush}" />
        </Border>
    </DataTemplate>
    <Style x:Key="RadDateTimePickerStyle" TargetType="telerikInput:RadDateTimePicker">
        <Setter Property="mat:MaterialAssist.FocusBrush" Value="{telerik1:FluentResource ResourceKey=AccentFocusedBrush}" />
        <Setter Property="CalendarStyle" Value="{StaticResource RadCalendarStyle}" />
        <Setter Property="ClockStyle" Value="{StaticResource RadClockStyle}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="KeyboardNavigation.ControlTabNavigation" Value="Cycle" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Once" />
        <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ValidationTooltipTemplate}" />
        <Setter Property="TooltipTemplate" Value="{StaticResource TooltipTemplate}" />
        <Setter Property="FontSize" Value="{telerik1:FluentResource ResourceKey=FontSize}" />
        <Setter Property="FontFamily" Value="{telerik1:FluentResource ResourceKey=FontFamily}" />
        <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=MarkerBrush}" />
        <Setter Property="Background" Value="{telerik1:FluentResource ResourceKey=PrimaryBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:FluentResource ResourceKey=BasicBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="5,5,2,5" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerikInput:RadDateTimePicker">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="auto" />
                        </Grid.ColumnDefinitions>
                        <Border
                            x:Name="BorderVisual"
                            Grid.ColumnSpan="2"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" />
                        <telerik:RadWatermarkTextBox
                            x:Name="PART_DateTimeInput"
                            Padding="{TemplateBinding Padding}"
                            VerticalAlignment="Stretch"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            mat:MaterialAssist.FocusBrush="{x:Null}"
                            Background="{x:Null}"
                            BorderBrush="{x:Null}"
                            BorderThickness="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessToOrientedThicknessConverter}, ConverterParameter=BottomLeftTop}"
                            CurrentText="{Binding CurrentDateTimeText, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                            DisabledBackground="{x:Null}"
                            FontFamily="{telerik1:FluentResource ResourceKey=FontFamily}"
                            FontSize="{TemplateBinding FontSize}"
                            Foreground="{TemplateBinding Foreground}"
                            IsReadOnly="{TemplateBinding IsReadOnly}"
                            SelectionOnFocus="{TemplateBinding SelectionOnFocus}"
                            TabIndex="0"
                            Text="{Binding DateTimeText, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                            TextAlignment="{TemplateBinding TextAlignment}"
                            WatermarkContent="{TemplateBinding DateTimeWatermarkContent}"
                            WatermarkTemplate="{TemplateBinding DateTimeWatermarkTemplate}" />
                        <telerik:RadDropDownButton
                            x:Name="PART_DropDownButton"
                            Grid.Column="1"
                            Width="26"
                            Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessToOrientedThicknessConverter}, ConverterParameter=TopRightBottom}"
                            Padding="0"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Stretch"
                            HorizontalContentAlignment="Stretch"
                            VerticalContentAlignment="Stretch"
                            telerikInput:DateTimePickerExtensions.FocusContentOnOpen="True"
                            Background="{x:Null}"
                            BorderBrush="{x:Null}"
                            BorderThickness="0"
                            CloseOnEnter="True"
                            DropDownIndicatorVisibility="Collapsed"
                            Focusable="False"
                            IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            IsTabStop="False"
                            PopupPlacementTarget="{Binding ElementName=PART_DateTimeInput}"
                            TabIndex="1">
                            <telerik:RadDropDownButton.DropDownContent>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Border
                                        x:Name="BackgroundVisual"
                                        Grid.Row="0"
                                        Grid.RowSpan="2"
                                        Grid.ColumnSpan="2" />
                                    <telerikInput:RadCalendar
                                        x:Name="PART_Calendar"
                                        Grid.Row="0"
                                        Grid.Column="0"
                                        Background="{x:Null}"
                                        BlackoutDates="{Binding BlackoutDates, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                        Culture="{TemplateBinding Culture}"
                                        DateSelectionMode="{TemplateBinding DateSelectionMode}"
                                        DisplayDate="{Binding DisplayDate, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                        DisplayDateEnd="{Binding DisplayDateEnd, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                        DisplayDateStart="{Binding DisplayDateStart, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                        IsReadOnly="{TemplateBinding IsReadOnly}"
                                        SelectableDateEnd="{Binding SelectableDateEnd, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                        SelectableDateStart="{Binding SelectableDateStart, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                        SelectedDate="{Binding SelectedDate, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                        SelectionMode="Single"
                                        Style="{TemplateBinding CalendarStyle}" />
                                    <telerikInput:DateTimePickerClock
                                        x:Name="PART_Clock"
                                        Grid.Row="0"
                                        Grid.Column="1"
                                        Culture="{TemplateBinding Culture}"
                                        EndTime="{TemplateBinding EndTime}"
                                        IsReadOnly="{TemplateBinding IsReadOnly}"
                                        ItemsSource="{TemplateBinding ClockItemsSource}"
                                        SelectedItem="{Binding SelectedTime, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                        StartTime="{TemplateBinding StartTime}"
                                        Style="{TemplateBinding ClockStyle}"
                                        TimeInterval="{Binding TimeInterval, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <Border
                                        x:Name="CloseButtonContainer"
                                        Grid.Row="1"
                                        Grid.Column="0"
                                        Grid.ColumnSpan="2"
                                        telerik:TouchManager.TouchMode="None"
                                        Background="{telerik1:FluentResource ResourceKey=MainBrush}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="2,0,2,2">
                                        <telerik:RadButton
                                            x:Name="PART_Close"
                                            Margin="5,4"
                                            Padding="25,5"
                                            HorizontalAlignment="Right"
                                            telerik:LocalizationManager.ResourceKey="Close"
                                            Command="{x:Static telerikInput:RadDateTimePickerCommands.Close}"
                                            IsTabStop="True"
                                            KeyboardNavigation.TabNavigation="Once"
                                            TabIndex="2" />
                                    </Border>
                                    <Border
                                        x:Name="TodayButtonBorder"
                                        Grid.Row="1"
                                        Background="{telerik1:FluentResource ResourceKey=MainBrush}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="2,0,2,2"
                                        SnapsToDevicePixels="True"
                                        Visibility="{TemplateBinding TodayButtonVisibility}">
                                        <telerik:RadButton
                                            x:Name="TodayButton"
                                            Margin="0"
                                            Padding="0"
                                            BorderThickness="0"
                                            Command="{x:Static telerik:RadDateTimePickerCommands.SetToday}"
                                            Content="{TemplateBinding TodayButtonContent}"
                                            CornerRadius="0"
                                            IsBackgroundVisible="False" />
                                    </Border>
                                </Grid>
                            </telerik:RadDropDownButton.DropDownContent>
                            <telerik:RadDropDownButton.Template>
                                <ControlTemplate TargetType="telerik:RadDropDownButton">
                                    <Grid>
                                        <Border x:Name="Background">
                                            <mat:FluentControl
                                                BorderThickness="0"
                                                EffectMode="Glow"
                                                IsSmartClipped="True">
                                                <ContentPresenter
                                                    Margin="{TemplateBinding Padding}"
                                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                            </mat:FluentControl>
                                        </Border>
                                        <Popup
                                            x:Name="DropDownPopup"
                                            mat:ThemeEffectsHelper.IsAcrylic="True"
                                            AllowsTransparency="True"
                                            Focusable="false"
                                            HorizontalOffset="0"
                                            IsOpen="{Binding Path=IsOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                            Placement="Bottom"
                                            StaysOpen="False"
                                            VerticalOffset="1">
                                            <Grid x:Name="DropDownPopupGrid" Background="{telerik1:FluentResource ResourceKey=PrimaryBackgroundBrush}">
                                                <ContentPresenter
                                                    x:Name="DropDownPopupContent"
                                                    Content="{TemplateBinding DropDownContent}"
                                                    ContentTemplate="{TemplateBinding DropDownContentTemplate}"
                                                    DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataContext}" />
                                            </Grid>
                                        </Popup>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger SourceName="DropDownPopup" Property="mat:ThemeEffectsHelper.IsAcrylic" Value="True">
                                            <Setter TargetName="DropDownPopupGrid" Property="Background" Value="{Binding Source={StaticResource PrimaryBackgroundBrushProxy}, Path=ProxyValue, Converter={StaticResource OpacityConverter}, ConverterParameter=153}" />
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="Background" Property="Background" Value="{telerik1:FluentResource ResourceKey=MouseOverBrush}" />
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter TargetName="Background" Property="Background" Value="{telerik1:FluentResource ResourceKey=PressedBrush}" />
                                        </Trigger>
                                        <Trigger Property="IsOpen" Value="True">
                                            <Setter TargetName="Background" Property="Background" Value="{telerik1:FluentResource ResourceKey=PressedBrush}" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </telerik:RadDropDownButton.Template>
                            <Grid>
                                <Grid
                                    x:Name="DropDownIcon"
                                    Background="Transparent"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                    <telerik:RadGlyph
                                        x:Name="DateTimePickerIcon"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        FlowDirection="LeftToRight"
                                        FontSize="16"
                                        Foreground="{telerik1:FluentResource ResourceKey=IconBrush}"
                                        Glyph="{StaticResource GlyphGrid}"
                                        Visibility="Collapsed" />
                                    <telerik:RadGlyph
                                        x:Name="CalendarIcon"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        FlowDirection="LeftToRight"
                                        FontSize="16"
                                        Foreground="{telerik1:FluentResource ResourceKey=IconBrush}"
                                        Glyph="{StaticResource GlyphCalendar}"
                                        Visibility="Collapsed" />
                                    <telerik:RadGlyph
                                        x:Name="ClockIcon"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        FlowDirection="LeftToRight"
                                        FontSize="16"
                                        Foreground="{telerik1:FluentResource ResourceKey=IconBrush}"
                                        Glyph="{StaticResource GlyphClock}"
                                        Visibility="Collapsed" />
                                </Grid>
                            </Grid>
                        </telerik:RadDropDownButton>
                        <Border
                            x:Name="FocusVisual"
                            Grid.ColumnSpan="2"
                            Background="{x:Null}"
                            BorderBrush="{TemplateBinding mat:MaterialAssist.FocusBrush}"
                            BorderThickness="{telerik1:FluentResource ResourceKey=FocusThickness}"
                            IsHitTestVisible="False"
                            Visibility="Collapsed" />
                        <Border
                            x:Name="ReadOnlyVisual"
                            Grid.ColumnSpan="2"
                            Background="{telerik1:FluentResource ResourceKey=ReadOnlyBackgroundBrush}"
                            BorderBrush="{telerik1:FluentResource ResourceKey=ReadOnlyBorderBrush}"
                            BorderThickness="{telerik1:FluentResource ResourceKey=FocusThickness}"
                            IsHitTestVisible="False"
                            Visibility="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" />
                        <Popup
                            x:Name="PART_InputPopup"
                            telerik:PopupExtensions.IsOpen="{Binding IsTooltipOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                            telerik:PopupExtensions.Owner="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                            telerik:PopupExtensions.Placement="Top"
                            telerik:PopupExtensions.PlacementTarget="{Binding ElementName=PART_DateTimeInput}"
                            AllowsTransparency="True"
                            HorizontalOffset="-1"
                            StaysOpen="False"
                            VerticalOffset="-2">
                            <ContentPresenter Content="{TemplateBinding TooltipContent}" ContentTemplate="{TemplateBinding TooltipTemplate}" />
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="PART_DateTimeInput" Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=MarkerMouseOverBrush}" />
                        </Trigger>
                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=MarkerMouseOverBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="DropDownIcon" Property="Opacity" Value="{telerik1:FluentResource ResourceKey=DisabledOpacity}" />
                        </Trigger>

                        <!--  Focused  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocusWithin" Value="True" />
                                <Condition SourceName="PART_DropDownButton" Property="IsOpen" Value="False" />
                                <Condition Property="IsMouseOver" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Visible" />
                            <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=MarkerMouseOverBrush}" />
                        </MultiTrigger>
                        <Trigger SourceName="PART_DateTimeInput" Property="IsKeyboardFocusWithin" Value="True">
                            <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=MarkerMouseOverBrush}" />
                        </Trigger>
                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=MarkerBrush}" />
                        </Trigger>
                        <Trigger Property="InputMode" Value="DateTimePicker">
                            <Setter TargetName="DateTimePickerIcon" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="InputMode" Value="DateTimePicker" />
                                <Condition Property="TodayButtonVisibility" Value="Visible" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="CloseButtonContainer" Property="Grid.ColumnSpan" Value="1" />
                            <Setter TargetName="CloseButtonContainer" Property="Grid.Column" Value="1" />
                        </MultiTrigger>
                        <Trigger Property="InputMode" Value="DatePicker">
                            <Setter TargetName="PART_Clock" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="CalendarIcon" Property="Visibility" Value="Visible" />
                            <Setter TargetName="CloseButtonContainer" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="InputMode" Value="DatePicker" />
                                <Condition Property="TodayButtonVisibility" Value="Visible" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="TodayButtonBorder" Property="MinHeight" Value="36" />
                        </MultiTrigger>
                        <Trigger Property="InputMode" Value="TimePicker">
                            <Setter TargetName="PART_Calendar" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="ClockIcon" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_Clock" Property="Margin" Value="0" />
                            <Setter TargetName="CloseButtonContainer" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="InputMode" Value="TimePicker" />
                                <Condition Property="TodayButtonVisibility" Value="Visible" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="TodayButtonBorder" Property="Grid.Column" Value="2" />
                            <Setter TargetName="TodayButtonBorder" Property="MinHeight" Value="36" />
                        </MultiTrigger>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource RadDateTimePickerStyle}" TargetType="telerikInput:RadDateTimePicker" />
    <Style BasedOn="{StaticResource RadDateTimePickerStyle}" TargetType="telerikInput:RadDatePicker">
        <Setter Property="InputMode" Value="DatePicker" />
    </Style>
    <Style BasedOn="{StaticResource RadDateTimePickerStyle}" TargetType="telerikInput:RadTimePicker">
        <Setter Property="InputMode" Value="TimePicker" />
    </Style>
    <chat:DataFormTemplateSelector x:Key="DataFormTemplateSelector">
        <chat:DataFormTemplateSelector.CheckBoxTemplate>
            <DataTemplate>
                <CheckBox
                    x:Name="check"
                    Margin="5"
                    chat:DataFormAutoBind.BindEditProperty="IsChecked"
                    Content="{Binding PropertyDescriptor.DisplayName}" />
            </DataTemplate>
        </chat:DataFormTemplateSelector.CheckBoxTemplate>
        <chat:DataFormTemplateSelector.TextInputTemplate>
            <DataTemplate>
                <StackPanel Margin="5">
                    <TextBlock Margin="0,0,0,5" Text="{Binding PropertyDescriptor.DisplayName}" />
                    <TextBox chat:DataFormAutoBind.BindEditProperty="Text" />
                </StackPanel>
            </DataTemplate>
        </chat:DataFormTemplateSelector.TextInputTemplate>
        <chat:DataFormTemplateSelector.DateTimeTemplate>
            <DataTemplate>
                <StackPanel Margin="5">
                    <TextBlock Margin="0,0,0,5" Text="{Binding PropertyDescriptor.DisplayName}" />
                    <telerik:RadDateTimePicker chat:DataFormAutoBind.BindEditProperty="SelectedValue" />
                </StackPanel>
            </DataTemplate>
        </chat:DataFormTemplateSelector.DateTimeTemplate>
        <chat:DataFormTemplateSelector.ComboBoxTemplate>
            <DataTemplate>
                <StackPanel Margin="5">
                    <TextBlock Margin="0,0,0,5" Text="{Binding PropertyDescriptor.DisplayName}" />
                    <telerik:RadComboBox
                        chat:DataFormAutoBind.BindEditProperty="SelectedValue"
                        DisplayMemberPath="DisplayName"
                        ItemsSource="{Binding DataSource}"
                        SelectedValuePath="Value" />
                </StackPanel>
            </DataTemplate>
        </chat:DataFormTemplateSelector.ComboBoxTemplate>
    </chat:DataFormTemplateSelector>
    <chat:MessageTemplateSelector x:Key="MessageTemplateSelector" x:Shared="false">
        <chat:MessageTemplateSelector.CalendarMessageTemplate>
            <DataTemplate>
                <telerik:RadCalendar DisplayDate="{Binding DisplayDate}" SelectedDate="{Binding SelectedDate, Mode=TwoWay}" />
            </DataTemplate>
        </chat:MessageTemplateSelector.CalendarMessageTemplate>
        <chat:MessageTemplateSelector.ListMessageTemplate>
            <DataTemplate>
                <telerik:RadListBox
                    MinWidth="220"
                    DisplayMemberPath="{Binding DisplayMemberPath}"
                    IsSynchronizedWithCurrentItem="False"
                    ItemTemplate="{Binding ItemTemplate}"
                    ItemsSource="{Binding Source}"
                    SelectedIndex="{Binding SelectedIndex, Mode=TwoWay}"
                    SelectedItem="{Binding SelectedItem, Mode=TwoWay}"
                    SelectionMode="{Binding SelectionMode}">
                    <telerik:EventToCommandBehavior.EventBindings>
                        <telerik:EventBinding
                            Command="{Binding SelectionChangedCommand}"
                            EventName="SelectionChanged"
                            PassEventArgsToCommand="True" />
                    </telerik:EventToCommandBehavior.EventBindings>
                </telerik:RadListBox>
            </DataTemplate>
        </chat:MessageTemplateSelector.ListMessageTemplate>
        <chat:MessageTemplateSelector.TextMessageTemplate>
            <DataTemplate>
                <chat:TextMessageControl />
            </DataTemplate>
        </chat:MessageTemplateSelector.TextMessageTemplate>
        <chat:MessageTemplateSelector.CardTemplate>
            <DataTemplate>
                <chat:Card />
            </DataTemplate>
        </chat:MessageTemplateSelector.CardTemplate>
        <chat:MessageTemplateSelector.ImageCardTemplate>
            <DataTemplate>
                <chat:ImageCard />
            </DataTemplate>
        </chat:MessageTemplateSelector.ImageCardTemplate>
        <chat:MessageTemplateSelector.ProductCardTemplate>
            <DataTemplate>
                <chat:ProductCard />
            </DataTemplate>
        </chat:MessageTemplateSelector.ProductCardTemplate>
        <chat:MessageTemplateSelector.WeatherCardTemplate>
            <DataTemplate>
                <chat:WeatherCard />
            </DataTemplate>
        </chat:MessageTemplateSelector.WeatherCardTemplate>
        <chat:MessageTemplateSelector.FlightCardTemplate>
            <DataTemplate>
                <chat:FlightCard />
            </DataTemplate>
        </chat:MessageTemplateSelector.FlightCardTemplate>
        <chat:MessageTemplateSelector.CarouselTemplate>
            <DataTemplate>
                <chat:CarouselCard />
            </DataTemplate>
        </chat:MessageTemplateSelector.CarouselTemplate>
        <chat:MessageTemplateSelector.DataFormTemplate>
            <DataTemplate>
                <ItemsControl
                    MinWidth="220"
                    Margin="5"
                    ItemTemplateSelector="{StaticResource DataFormTemplateSelector}"
                    ItemsSource="{Binding Fields}" />
            </DataTemplate>
        </chat:MessageTemplateSelector.DataFormTemplate>
        <chat:MessageTemplateSelector.ImageTemplate>
            <DataTemplate>
                <Image
                    Width="{Binding Size.Width}"
                    Height="{Binding Size.Height}"
                    Source="{Binding Source}"
                    Stretch="{Binding Stretch}" />
            </DataTemplate>
        </chat:MessageTemplateSelector.ImageTemplate>
        <chat:MessageTemplateSelector.GifTemplate>
            <DataTemplate>
                <MediaElement
                    Width="{Binding Size.Width}"
                    Height="{Binding Size.Height}"
                    LoadedBehavior="Play"
                    Source="{Binding Source}"
                    Stretch="{Binding Stretch}"
                    UnloadedBehavior="Play">
                    <telerik:EventToCommandBehavior.EventBindings>
                        <telerik:EventBinding
                            Command="{Binding MediaEndedCommand}"
                            EventName="MediaEnded"
                            PassEventArgsToCommand="True" />
                    </telerik:EventToCommandBehavior.EventBindings>
                </MediaElement>
            </DataTemplate>
        </chat:MessageTemplateSelector.GifTemplate>
    </chat:MessageTemplateSelector>
    <Style x:Key="ChatButtonStyle" TargetType="telerik:RadButton">
        <Setter Property="Height" Value="28" />
        <Setter Property="Width" Value="28" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="{telerik:FluentResource ResourceKey=AccentFocusedBrush}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik:RadButton">
                    <Grid>
                        <Border
                            x:Name="BorderVisual"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" />
                        <ContentPresenter
                            x:Name="Content"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            TextBlock.Foreground="{TemplateBinding Foreground}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{telerik:FluentResource ResourceKey=AccentMouseOverBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="{telerik:FluentResource ResourceKey=AccentMouseOverBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Content" Property="Opacity" Value="{telerik1:FluentResource ResourceKey=DisabledOpacity}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ChatToggleButtonStyle" TargetType="telerik:RadToggleButton">
        <Setter Property="Height" Value="28" />
        <Setter Property="Width" Value="28" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="{telerik:FluentResource ResourceKey=IconBrush}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik:RadToggleButton">
                    <Grid>
                        <Border
                            x:Name="BorderVisual"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" />
                        <ContentPresenter
                            x:Name="Content"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            TextBlock.Foreground="{TemplateBinding Foreground}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" Value="{telerik:FluentResource ResourceKey=AccentFocusedBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{telerik:FluentResource ResourceKey=AccentMouseOverBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="{telerik:FluentResource ResourceKey=AccentMouseOverBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Content" Property="Opacity" Value="{telerik1:FluentResource ResourceKey=DisabledOpacity}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <sys:Double x:Key="ChatRatingItemFontSize">20</sys:Double>
    <Style x:Key="ChatRatingItemStyle" TargetType="telerikInput:RadRatingItem">
        <Setter Property="Background" Value="{telerik1:FluentResource ResourceKey=MainBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:FluentResource ResourceKey=IconBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerikInput:RadRatingItem">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid
                            x:Name="itemGrid"
                            Margin="{TemplateBinding Padding}"
                            Background="Transparent">
                            <telerik:RadGlyph
                                x:Name="NormalRatingItem"
                                FontSize="{StaticResource ChatRatingItemFontSize}"
                                Foreground="{telerik1:FluentResource ResourceKey=IconBrush}"
                                Glyph="{StaticResource GlyphStarOutline}" />
                            <telerik:RadGlyph
                                x:Name="ReadOnlyRatingItem"
                                FontSize="{StaticResource ChatRatingItemFontSize}"
                                Foreground="{telerik1:FluentResource ResourceKey=ComplementaryBrush}"
                                Glyph="{StaticResource GlyphStar}"
                                Opacity="0" />
                            <telerikRating:LinearClipper
                                HorizontalContentAlignment="Center"
                                ExpandDirection="Right"
                                RatioVisible="{TemplateBinding ValueRatio}">
                                <telerik:RadGlyph
                                    x:Name="SelectedUnHoveredRatingItem"
                                    FontSize="{StaticResource ChatRatingItemFontSize}"
                                    Foreground="{telerik1:FluentResource ResourceKey=AccentBrush}"
                                    Glyph="{StaticResource GlyphStarOutline}"
                                    Opacity="0" />
                            </telerikRating:LinearClipper>
                            <telerikRating:LinearClipper
                                HorizontalContentAlignment="Center"
                                ExpandDirection="Right"
                                RatioVisible="{TemplateBinding RatioVisible}">
                                <telerik:RadGlyph
                                    x:Name="MouseOverRatingItem"
                                    FontSize="{StaticResource ChatRatingItemFontSize}"
                                    Foreground="{telerik1:FluentResource ResourceKey=AccentMouseOverBrush}"
                                    Glyph="{StaticResource GlyphStar}" />
                            </telerikRating:LinearClipper>
                            <telerikRating:LinearClipper
                                HorizontalContentAlignment="Center"
                                ExpandDirection="Right"
                                RatioVisible="{TemplateBinding RatioVisible}">
                                <telerik:RadGlyph
                                    x:Name="SelectedRatingItem"
                                    FontSize="{StaticResource ChatRatingItemFontSize}"
                                    Foreground="{telerik1:FluentResource ResourceKey=AccentBrush}"
                                    Glyph="{StaticResource GlyphStar}" />
                            </telerikRating:LinearClipper>
                            <telerik:RadGlyph
                                x:Name="DisabledRatingItemBorder"
                                FontSize="{StaticResource ChatRatingItemFontSize}"
                                Foreground="{telerik1:FluentResource ResourceKey=BasicSolidBrush}"
                                Glyph="{StaticResource GlyphStarOutline}"
                                Opacity="0" />
                            <telerikRating:LinearClipper
                                x:Name="DisabledRatingItem"
                                HorizontalContentAlignment="Center"
                                ExpandDirection="Right"
                                Opacity="0"
                                RatioVisible="{TemplateBinding RatioVisible}">
                                <telerik:RadGlyph
                                    FontSize="{StaticResource ChatRatingItemFontSize}"
                                    Foreground="{telerik1:FluentResource ResourceKey=BasicSolidBrush}"
                                    Glyph="{StaticResource GlyphStar}" />
                            </telerikRating:LinearClipper>
                        </Grid>
                        <ContentPresenter
                            x:Name="Content"
                            Grid.Row="1"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            Cursor="{TemplateBinding Cursor}" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="ReadOnly">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="ReadOnlyRatingItem"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="1"
                                            Duration="0" />
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalRatingItem" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Hidden</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FillStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="00:00:00.1000000" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Empty" />
                                <VisualState x:Name="Partial" />
                                <VisualState x:Name="Filled" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOverItem" Value="True">
                            <Setter TargetName="MouseOverRatingItem" Property="Opacity" Value="1" />
                            <Setter TargetName="SelectedRatingItem" Property="Opacity" Value="0" />
                            <Setter TargetName="SelectedUnHoveredRatingItem" Property="Opacity" Value="0" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="SelectedState">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="MouseOverRatingItem"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="0"
                                            Duration="0" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="SelectedRatingItem"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="1"
                                            Duration="0" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="SelectedUnHoveredRatingItem"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="0"
                                            Duration="0" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="MouseOverRatingItem"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="1"
                                            Duration="0" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="SelectedRatingItem"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="0"
                                            Duration="0" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="SelectedUnHoveredRatingItem"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="1"
                                            Duration="0" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="DisabledRatingItem" Property="Opacity" Value="1" />
                            <Setter TargetName="DisabledRatingItemBorder" Property="Opacity" Value="1" />
                            <Setter TargetName="NormalRatingItem" Property="Opacity" Value="0" />
                            <Setter TargetName="ReadOnlyRatingItem" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="SelectedRatingItem" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TimeBreakControlStyle" TargetType="{x:Type chat:TimeBreakControl}">
        <Setter Property="Opacity" Value="0.7" />
        <Setter Property="MinHeight" Value="50" />
        <Setter Property="FontSize" Value="11" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type chat:TimeBreakControl}">
                    <TextBlock
                        Margin="{TemplateBinding Padding}"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        Text="{Binding Header}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource TimeBreakControlStyle}" TargetType="{x:Type chat:TimeBreakControl}" />
    <Style x:Key="TypingIndicatorStyle" TargetType="{x:Type chat:TypingIndicator}">
        <Setter Property="Background" Value="{telerik:FluentResource ResourceKey=IconBrush}" />
        <Setter Property="Margin" Value="0,0,0,5" />
        <Setter Property="Padding" Value="16,0" />
        <Setter Property="FontSize" Value="10" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type chat:TypingIndicator}">
                    <Grid Margin="{TemplateBinding Padding}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Grid.Triggers>
                            <EventTrigger RoutedEvent="Grid.Loaded">
                                <BeginStoryboard>
                                    <Storyboard Name="waitingAnimation" RepeatBehavior="Forever">
                                        <DoubleAnimation
                                            AutoReverse="True"
                                            BeginTime="0:0:0.1"
                                            Storyboard.TargetName="Dot1"
                                            Storyboard.TargetProperty="Opacity"
                                            From=".3"
                                            To="0.7"
                                            Duration="0:0:0.5" />
                                        <DoubleAnimation
                                            AutoReverse="True"
                                            BeginTime="0:0:0.2"
                                            Storyboard.TargetName="Dot2"
                                            Storyboard.TargetProperty="Opacity"
                                            From=".3"
                                            To="0.7"
                                            Duration="0:0:0.5" />
                                        <DoubleAnimation
                                            AutoReverse="True"
                                            BeginTime="0:0:0.3"
                                            Storyboard.TargetName="Dot3"
                                            Storyboard.TargetProperty="Opacity"
                                            From=".3"
                                            To="0.7"
                                            Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Grid.Triggers>
                        <Image
                            Width="28"
                            Height="28"
                            RenderOptions.BitmapScalingMode="HighQuality"
                            SnapsToDevicePixels="True"
                            Source="{TemplateBinding Icon}"
                            Stretch="UniformToFill">
                            <Image.Clip>
                                <EllipseGeometry
                                    Center="14, 14"
                                    RadiusX="14"
                                    RadiusY="14" />
                            </Image.Clip>
                        </Image>
                        <StackPanel
                            Grid.Column="1"
                            Margin="5,0"
                            VerticalAlignment="Center"
                            Orientation="Horizontal">
                            <Ellipse
                                Name="Dot1"
                                Width="8"
                                Height="8"
                                Fill="{TemplateBinding Background}"
                                Opacity=".3" />
                            <Ellipse
                                Name="Dot2"
                                Width="8"
                                Height="8"
                                Margin="4,0,0,0"
                                Fill="{TemplateBinding Background}"
                                Opacity=".3" />
                            <Ellipse
                                Name="Dot3"
                                Width="8"
                                Height="8"
                                Margin="4,0,0,0"
                                Fill="{TemplateBinding Background}"
                                Opacity=".3" />
                        </StackPanel>
                        <TextBlock
                            Grid.Row="1"
                            Grid.Column="1"
                            Margin="5,-2,5,0"
                            Opacity="0.7"
                            Text="{TemplateBinding Text}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource TypingIndicatorStyle}" TargetType="{x:Type chat:TypingIndicator}" />
    <Style x:Key="InlineMessageControlStyle" TargetType="{x:Type chat:InlineMessageControl}">
        <Style.Resources>
            <Style BasedOn="{StaticResource RadCalendarStyle}" TargetType="telerik:RadCalendar">
                <Setter Property="Margin" Value="5" />
            </Style>
            <Style BasedOn="{StaticResource RadListBoxStyle}" TargetType="telerik:RadListBox">
                <Setter Property="Margin" Value="5" />
            </Style>
        </Style.Resources>
        <Setter Property="mat:MaterialAssist.ShadowDepth" Value="Depth1" />
        <Setter Property="CornerRadiusValue" Value="10" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="Margin" Value="0,0,0,5" />
        <Setter Property="HorizontalAlignment" Value="{Binding Alignment}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type chat:InlineMessageControl}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <mat:Shadow
                            Grid.Column="1"
                            Background="{telerik:FluentResource ResourceKey=PrimaryBackgroundBrush}"
                            CornerRadius="{Binding CalculatedCornerRadius}"
                            ShadowDepth="{TemplateBinding mat:MaterialAssist.ShadowDepth}" />
                        <Grid x:Name="ContentPresenterGrid" Grid.Column="1">
                            <mat:ClipBorder CornerRadius="{Binding CalculatedCornerRadius}">
                                <ContentPresenter />
                            </mat:ClipBorder>
                        </Grid>
                        <ItemsControl
                            x:Name="ReportActionsInline"
                            Grid.Row="1"
                            Grid.Column="1"
                            HorizontalAlignment="Center"
                            ItemsSource="{Binding ReportActions}"
                            Visibility="{Binding ReportCommandsVisibility}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <telerik:RadButton
                                        Margin="5,5,5,0"
                                        Command="{Binding Command}"
                                        CommandParameter="{Binding}"
                                        Content="{Binding Text}"
                                        Visibility="{Binding CommandButtonVisibility}" />
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                        <TextBlock
                            x:Name="CreationDateTextBlock"
                            Grid.Row="0"
                            Grid.Column="2"
                            Margin="5,0"
                            FontSize="10"
                            Opacity="0.7"
                            Text="{Binding CreationDate, StringFormat={}{0:t}}"
                            Visibility="{Binding CreationDateVisibility}" />
                        <TextBlock
                            x:Name="StatusTextBlock"
                            Grid.Row="2"
                            Grid.Column="1"
                            Grid.ColumnSpan="2"
                            Margin="0,5"
                            FontSize="10"
                            Opacity="0.7"
                            Text="{Binding Status}"
                            Visibility="{Binding StatusVisibility}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Alignment}" Value="Right">
                            <Setter TargetName="CreationDateTextBlock" Property="Grid.Column" Value="0" />
                            <Setter TargetName="StatusTextBlock" Property="HorizontalAlignment" Value="Right" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="{x:Null}">
                            <Setter TargetName="StatusTextBlock" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <EventTrigger RoutedEvent="Loaded">
                            <BeginStoryboard>
                                <BeginStoryboard.Storyboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="Opacity"
                                            From="0"
                                            To="1"
                                            Duration="0:0:0.280" />
                                    </Storyboard>
                                </BeginStoryboard.Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TextMessageControlStyle" TargetType="{x:Type chat:TextMessageControl}">
        <Style.Resources>
            <Style TargetType="TextBox" />
            <Style BasedOn="{StaticResource ScrollViewerStyle}" TargetType="ScrollViewer">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderThickness" Value="0" />
            </Style>
        </Style.Resources>
        <Setter Property="Text" Value="{Binding Text}" />
        <Setter Property="Background" Value="{telerik:FluentResource ResourceKey=MainBrush}" />
        <Setter Property="Padding" Value="10,5" />
        <Setter Property="MinHeight" Value="28" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type chat:TextMessageControl}">
                    <Grid MinHeight="{TemplateBinding MinHeight}">
                        <Border x:Name="MessageBorder" Background="{TemplateBinding Background}">
                            <TextBox
                                x:Name="PART_TextMessageTextBox"
                                Padding="{TemplateBinding Padding}"
                                VerticalAlignment="Center"
                                telerik:TouchManager.ShouldSuspendMousePromotion="True"
                                AcceptsReturn="True"
                                Background="Transparent"
                                BorderThickness="0"
                                Foreground="{TemplateBinding Foreground}"
                                IsReadOnly="True"
                                ScrollViewer.PanningMode="None"
                                Text="{TemplateBinding Text}"
                                TextWrapping="Wrap">
                                <telerik:RadContextMenu.ContextMenu>
                                    <telerik:RadContextMenu>
                                        <telerik:RadMenuItem Command="ApplicationCommands.Copy" />
                                        <telerik:RadMenuItem Command="ApplicationCommands.SelectAll" />
                                    </telerik:RadContextMenu>
                                </telerik:RadContextMenu.ContextMenu>
                            </TextBox>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type chat:InlineMessageControl}}, Path=HorizontalAlignment}" Value="Right">
                            <Setter Property="Background" Value="{telerik:FluentResource ResourceKey=AccentMouseOverBrush}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource InlineMessageControlStyle}" TargetType="{x:Type chat:InlineMessageControl}" />
    <Style BasedOn="{StaticResource TextMessageControlStyle}" TargetType="{x:Type chat:TextMessageControl}" />
    <Style x:Key="MessageGroupStyle" TargetType="{x:Type chat:MessageGroup}">
        <Setter Property="HorizontalAlignment" Value="{Binding Alignment}" />
        <Setter Property="Padding" Value="5,0" />
        <Setter Property="ItemsSource" Value="{Binding Messages}" />
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <chat:InlineMessageControl Content="{Binding Message}" ContentTemplateSelector="{StaticResource MessageTemplateSelector}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type chat:MessageGroup}">
                    <DockPanel>
                        <Image
                            Width="28"
                            Height="28"
                            Margin="0,20,0,0"
                            VerticalAlignment="Top"
                            DockPanel.Dock="{Binding AvatarAlignment}"
                            RenderOptions.BitmapScalingMode="HighQuality"
                            SnapsToDevicePixels="True"
                            Source="{Binding Author.Avatar}"
                            Stretch="UniformToFill">
                            <Image.Clip>
                                <EllipseGeometry
                                    Center="14, 14"
                                    RadiusX="14"
                                    RadiusY="14" />
                            </Image.Clip>
                        </Image>
                        <Grid Margin="{TemplateBinding Padding}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" MinHeight="20" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <StackPanel
                                HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                VerticalAlignment="Center"
                                Opacity="0.7"
                                Orientation="Horizontal"
                                TextElement.FontSize="10">
                                <TextBlock Text="{Binding CreationDate, StringFormat={}{0:t}}" />
                                <StackPanel Orientation="Horizontal" Visibility="{Binding Author.IsCurrent, Converter={StaticResource InvertedBooleanToVisibilityConverter}}">
                                    <TextBlock Text="," />
                                    <TextBlock Text="{Binding Author.Name}" />
                                </StackPanel>
                            </StackPanel>
                            <ItemsPresenter Grid.Row="1" />
                        </Grid>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource MessageGroupStyle}" TargetType="{x:Type chat:MessageGroup}" />
    <Style x:Key="ChatMessageListStyle" TargetType="{x:Type chat:ChatMessageList}">
        <Setter Property="Padding" Value="16,20,16,16" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel Orientation="Vertical" ScrollViewer.HorizontalScrollBarVisibility="Disabled" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ContentPresenter">
                    <Setter Property="MaxWidth" Value="{Binding RelativeSource={RelativeSource AncestorType=ItemsPresenter}, Path=ActualWidth}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type chat:ChatMessageList}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <ScrollViewer
                            x:Name="PART_ScrollViewer"
                            Background="{x:Null}"
                            BorderThickness="0"
                            CanContentScroll="True"
                            HorizontalScrollBarVisibility="Disabled"
                            PanningMode="None"
                            VerticalScrollBarVisibility="Auto">
                            <ItemsPresenter Margin="{TemplateBinding Padding}" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource ChatMessageListStyle}" TargetType="{x:Type chat:ChatMessageList}" />
    <Style x:Key="ChatCardBaseStyle" TargetType="{x:Type chat:Card}">
        <Setter Property="Foreground" Value="{telerik:FluentResource ResourceKey=MarkerBrush}" />
        <Setter Property="Background" Value="{telerik:FluentResource ResourceKey=PrimaryBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{telerik:FluentResource ResourceKey=BasicSolidBrush}" />
        <Setter Property="Width" Value="230" />
        <Setter Property="MinHeight" Value="28" />
    </Style>
    <Style x:Key="ChatCardTitleStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="17" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Margin" Value="0,0,0,5" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>
    <Style x:Key="ChatCardSubTitleStyle" TargetType="TextBlock">
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Opacity" Value="0.7" />
        <Setter Property="Margin" Value="0,0,0,5" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>
    <Style
        x:Key="CardStyle"
        BasedOn="{StaticResource ChatCardBaseStyle}"
        TargetType="{x:Type chat:Card}">
        <Setter Property="Padding" Value="5" />
        <Setter Property="Title" Value="{Binding Title, Mode=TwoWay}" />
        <Setter Property="SubTitle" Value="{Binding SubTitle, Mode=TwoWay}" />
        <Setter Property="Text" Value="{Binding Text, Mode=TwoWay}" />
        <Setter Property="ActionResultsOrientation" Value="{Binding ActionResultsOrientation, Mode=TwoWay}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type chat:Card}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{Binding RelativeSource={RelativeSource AncestorType={x:Type chat:InlineMessageControl}}, Path=DataContext.CalculatedCornerRadius}">
                        <Grid Margin="{TemplateBinding Padding}">
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <StackPanel Margin="5,5,5,10">
                                <TextBlock
                                    x:Name="Title"
                                    Style="{StaticResource ChatCardTitleStyle}"
                                    Text="{TemplateBinding Title}" />
                                <TextBlock
                                    x:Name="SubTitle"
                                    Style="{StaticResource ChatCardSubTitleStyle}"
                                    Text="{TemplateBinding SubTitle}" />
                                <TextBlock
                                    x:Name="Text"
                                    Text="{TemplateBinding Text}"
                                    TextWrapping="Wrap" />
                            </StackPanel>
                            <ItemsControl Grid.Row="1" ItemsSource="{Binding ReportActions}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <telerik:RadButton
                                            Margin="5,0,5,5"
                                            VerticalAlignment="Center"
                                            Command="{Binding Command}"
                                            Content="{Binding Text}" />
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="{Binding ActionResultsOrientation}" />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Title" Value="{x:Null}">
                            <Setter TargetName="Title" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="SubTitle" Value="{x:Null}">
                            <Setter TargetName="SubTitle" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Text" Value="{x:Null}">
                            <Setter TargetName="Text" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="ImageCardStyle"
        BasedOn="{StaticResource ChatCardBaseStyle}"
        TargetType="{x:Type chat:ImageCard}">
        <Style.Triggers>
            <Trigger Property="CardOrientation" Value="Landscape">
                <Setter Property="Width" Value="260" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="Padding" Value="0" />
        <Setter Property="Title" Value="{Binding Title, Mode=TwoWay}" />
        <Setter Property="SubTitle" Value="{Binding SubTitle, Mode=TwoWay}" />
        <Setter Property="Text" Value="{Binding Text, Mode=TwoWay}" />
        <Setter Property="ActionResultsOrientation" Value="{Binding ActionResultsOrientation, Mode=TwoWay}" />
        <Setter Property="CardOrientation" Value="{Binding CardOrientation, Mode=TwoWay}" />
        <Setter Property="ImageSource" Value="{Binding ImageSource, Mode=TwoWay}" />
        <Setter Property="ImageDisplayMode" Value="{Binding ImageDisplayMode, Mode=TwoWay}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type chat:ImageCard}">
                    <Grid Margin="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Image
                            x:Name="CardImage"
                            Grid.Row="0"
                            Grid.ColumnSpan="2"
                            Source="{Binding ImageSource}"
                            Stretch="UniformToFill" />
                        <StackPanel
                            x:Name="TitleStackPanel"
                            Grid.Row="1"
                            Grid.ColumnSpan="2"
                            Margin="10,10,10,5">
                            <TextBlock
                                x:Name="Title"
                                Style="{StaticResource ChatCardTitleStyle}"
                                Text="{TemplateBinding Title}" />
                            <TextBlock
                                x:Name="SubTitle"
                                Style="{StaticResource ChatCardSubTitleStyle}"
                                Text="{TemplateBinding SubTitle}" />
                            <TextBlock
                                x:Name="Text"
                                Text="{TemplateBinding Text}"
                                TextWrapping="Wrap" />
                        </StackPanel>
                        <ItemsControl
                            x:Name="ActionResultsItemsControl"
                            Grid.Row="2"
                            Grid.ColumnSpan="2"
                            Margin="5,0,5,10"
                            ItemsSource="{Binding ReportActions}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <telerik:RadButton
                                        Margin="5,5,5,0"
                                        Command="{Binding Command}"
                                        Content="{Binding Text}" />
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="{Binding ActionResultsOrientation}" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding CardOrientation}" Value="Landscape">
                            <Setter TargetName="CardImage" Property="Grid.RowSpan" Value="3" />
                            <Setter TargetName="CardImage" Property="Grid.ColumnSpan" Value="1" />
                            <Setter TargetName="TitleStackPanel" Property="Grid.Row" Value="1" />
                            <Setter TargetName="TitleStackPanel" Property="Grid.Column" Value="1" />
                            <Setter TargetName="TitleStackPanel" Property="Grid.ColumnSpan" Value="1" />
                            <Setter TargetName="ActionResultsItemsControl" Property="Grid.Row" Value="2" />
                            <Setter TargetName="ActionResultsItemsControl" Property="Grid.Column" Value="1" />
                            <Setter TargetName="ActionResultsItemsControl" Property="Grid.ColumnSpan" Value="1" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=ImageDisplayMode}" Value="Thumbnail">
                            <Setter TargetName="CardImage" Property="Margin" Value="10,10,10,5" />
                            <Setter TargetName="CardImage" Property="Width" Value="80" />
                            <Setter TargetName="CardImage" Property="Height" Value="80" />
                            <Setter TargetName="CardImage" Property="Stretch" Value="Uniform" />
                            <Setter TargetName="CardImage" Property="HorizontalAlignment" Value="Center" />
                            <Setter TargetName="CardImage" Property="VerticalAlignment" Value="Top" />
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding CardOrientation}" Value="Landscape" />
                                <Condition Binding="{Binding ImageDisplayMode}" Value="Stretch" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="CardImage" Property="Width" Value="120" />
                            <Setter TargetName="CardImage" Property="Stretch" Value="Uniform" />
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding ElementName=ActionResultsItemsControl, Path=HasItems}" Value="False">
                            <Setter TargetName="ActionResultsItemsControl" Property="Margin" Value="0" />
                        </DataTrigger>
                        <Trigger Property="Title" Value="{x:Null}">
                            <Setter TargetName="Title" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="SubTitle" Value="{x:Null}">
                            <Setter TargetName="SubTitle" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Text" Value="{x:Null}">
                            <Setter TargetName="Text" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="ProductCardStyle"
        BasedOn="{StaticResource ChatCardBaseStyle}"
        TargetType="{x:Type chat:ProductCard}">
        <Style.Triggers>
            <Trigger Property="CardOrientation" Value="Landscape">
                <Setter Property="Width" Value="260" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="Title" Value="{Binding Title, Mode=TwoWay}" />
        <Setter Property="SubTitle" Value="{Binding SubTitle, Mode=TwoWay}" />
        <Setter Property="Text" Value="{Binding Text, Mode=TwoWay}" />
        <Setter Property="ActionResultsOrientation" Value="{Binding ActionResultsOrientation, Mode=TwoWay}" />
        <Setter Property="CardOrientation" Value="{Binding CardOrientation, Mode=TwoWay}" />
        <Setter Property="ImageSource" Value="{Binding ImageSource}" />
        <Setter Property="ImageDisplayMode" Value="{Binding ImageDisplayMode, Mode=TwoWay}" />
        <Setter Property="Rating" Value="{Binding Rating, Mode=TwoWay}" />
        <Setter Property="Price" Value="{Binding Price, Mode=TwoWay}" />
        <Setter Property="RatingItemsCount" Value="{Binding RatingItemsCount}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type chat:ProductCard}">
                    <Grid Margin="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Image
                            x:Name="CardImage"
                            Grid.Row="0"
                            Grid.ColumnSpan="2"
                            Source="{Binding ImageSource}"
                            Stretch="UniformToFill" />
                        <StackPanel
                            x:Name="TitleStackPanel"
                            Grid.Row="1"
                            Grid.Column="0"
                            Grid.ColumnSpan="2"
                            Margin="10,10,10,5">
                            <TextBlock
                                x:Name="Title"
                                Style="{StaticResource ChatCardTitleStyle}"
                                Text="{TemplateBinding Title}" />
                            <TextBlock
                                x:Name="SubTitle"
                                Style="{StaticResource ChatCardSubTitleStyle}"
                                Text="{TemplateBinding SubTitle}" />
                            <telerik:RadRating
                                Margin="0,0,0,5"
                                IsReadOnly="True"
                                NumberOfItemsToGenerate="{TemplateBinding RatingItemsCount}"
                                Precision="Exact"
                                Value="{TemplateBinding Rating}">
                                <telerik:RadRating.Resources>
                                    <Style BasedOn="{StaticResource ChatRatingItemStyle}" TargetType="telerikInput:RadRatingItem" />
                                </telerik:RadRating.Resources>
                            </telerik:RadRating>
                            <TextBlock
                                x:Name="Text"
                                Margin="0,0,0,5"
                                Text="{TemplateBinding Text}"
                                TextWrapping="Wrap" />
                            <TextBlock
                                x:Name="Price"
                                Style="{StaticResource ChatCardTitleStyle}"
                                Text="{TemplateBinding Price}" />
                        </StackPanel>
                        <ItemsControl
                            x:Name="ActionResultsItemsControl"
                            Grid.Row="2"
                            Grid.Column="0"
                            Grid.ColumnSpan="2"
                            Margin="5,0,5,10"
                            ItemsSource="{Binding ReportActions}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <telerik:RadButton
                                        Margin="5,5,5,0"
                                        Command="{Binding Command}"
                                        Content="{Binding Text}" />
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="{Binding ActionResultsOrientation}" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding CardOrientation}" Value="Landscape">
                            <Setter TargetName="CardImage" Property="Grid.RowSpan" Value="3" />
                            <Setter TargetName="CardImage" Property="Grid.ColumnSpan" Value="1" />
                            <Setter TargetName="TitleStackPanel" Property="Grid.Row" Value="1" />
                            <Setter TargetName="TitleStackPanel" Property="Grid.Column" Value="1" />
                            <Setter TargetName="TitleStackPanel" Property="Grid.ColumnSpan" Value="1" />
                            <Setter TargetName="ActionResultsItemsControl" Property="Grid.Row" Value="2" />
                            <Setter TargetName="ActionResultsItemsControl" Property="Grid.Column" Value="1" />
                            <Setter TargetName="ActionResultsItemsControl" Property="Grid.ColumnSpan" Value="1" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=ImageDisplayMode}" Value="Thumbnail">
                            <Setter TargetName="CardImage" Property="Margin" Value="10,10,10,5" />
                            <Setter TargetName="CardImage" Property="Width" Value="80" />
                            <Setter TargetName="CardImage" Property="Height" Value="80" />
                            <Setter TargetName="CardImage" Property="Stretch" Value="Uniform" />
                            <Setter TargetName="CardImage" Property="HorizontalAlignment" Value="Center" />
                            <Setter TargetName="CardImage" Property="VerticalAlignment" Value="Top" />
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding CardOrientation}" Value="Landscape" />
                                <Condition Binding="{Binding ImageDisplayMode}" Value="Stretch" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="CardImage" Property="Width" Value="120" />
                            <Setter TargetName="CardImage" Property="Stretch" Value="Uniform" />
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding ElementName=ActionResultsItemsControl, Path=HasItems}" Value="False">
                            <Setter TargetName="ActionResultsItemsControl" Property="Margin" Value="0" />
                        </DataTrigger>
                        <Trigger Property="Title" Value="{x:Null}">
                            <Setter TargetName="Title" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="SubTitle" Value="{x:Null}">
                            <Setter TargetName="SubTitle" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Text" Value="{x:Null}">
                            <Setter TargetName="Text" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Price" Value="{x:Null}">
                            <Setter TargetName="Price" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="WeatherCardStyle"
        BasedOn="{StaticResource ChatCardBaseStyle}"
        TargetType="{x:Type chat:WeatherCard}">
        <Style.Triggers>
            <Trigger Property="CardOrientation" Value="Landscape">
                <Setter Property="Width" Value="260" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="BorderThickness" Value="0,1,0,0" />
        <Setter Property="Title" Value="{Binding Title, Mode=TwoWay}" />
        <Setter Property="SubTitle" Value="{Binding SubTitle, Mode=TwoWay}" />
        <Setter Property="Text" Value="{Binding Text, Mode=TwoWay}" />
        <Setter Property="ActionResultsOrientation" Value="{Binding ActionResultsOrientation, Mode=TwoWay}" />
        <Setter Property="CardOrientation" Value="{Binding CardOrientation, Mode=TwoWay}" />
        <Setter Property="ImageSource" Value="{Binding ImageSource}" />
        <Setter Property="ImageDisplayMode" Value="{Binding ImageDisplayMode, Mode=TwoWay}" />
        <Setter Property="Temperature" Value="{Binding Temperature, Mode=TwoWay}" />
        <Setter Property="Humidity" Value="{Binding Humidity, Mode=TwoWay}" />
        <Setter Property="Dew" Value="{Binding Dew, Mode=TwoWay}" />
        <Setter Property="Pressure" Value="{Binding Pressure, Mode=TwoWay}" />
        <Setter Property="Wind" Value="{Binding Wind, Mode=TwoWay}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type chat:WeatherCard}">
                    <Grid Margin="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <TextBlock
                            x:Name="Title"
                            Grid.ColumnSpan="2"
                            Margin="0,20,0,0"
                            HorizontalAlignment="Center"
                            Style="{StaticResource ChatCardTitleStyle}"
                            Text="{TemplateBinding Title}" />
                        <Image
                            x:Name="CardImage"
                            Grid.Row="1"
                            Grid.ColumnSpan="2"
                            Width="{TemplateBinding Width}"
                            HorizontalAlignment="Left"
                            Source="{Binding ImageSource}"
                            Stretch="UniformToFill" />
                        <StackPanel
                            x:Name="TitleStackPanel"
                            Grid.Row="2"
                            Grid.Column="0"
                            Grid.ColumnSpan="2"
                            Margin="10,10,10,5">
                            <TextBlock
                                x:Name="SubTitle"
                                Style="{StaticResource ChatCardSubTitleStyle}"
                                Text="{TemplateBinding SubTitle}"
                                TextAlignment="Center" />
                            <TextBlock
                                x:Name="Text"
                                Text="{TemplateBinding Text}"
                                TextAlignment="Center"
                                TextWrapping="Wrap" />
                            <TextBlock
                                x:Name="Temperature"
                                FontSize="30"
                                Text="{TemplateBinding Temperature}"
                                TextAlignment="Center"
                                TextWrapping="Wrap" />
                        </StackPanel>
                        <Border
                            x:Name="CardDetails"
                            Grid.Row="3"
                            Grid.ColumnSpan="2"
                            Padding="5,5,5,10"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition x:Name="HumidityRow" Height="Auto" />
                                    <RowDefinition x:Name="DewRow" Height="Auto" />
                                    <RowDefinition x:Name="PressureRow" Height="Auto" />
                                    <RowDefinition x:Name="WindRow" Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="6*" />
                                    <ColumnDefinition Width="4*" />
                                </Grid.ColumnDefinitions>
                                <TextBlock
                                    Grid.Row="0"
                                    Margin="0,0,5,0"
                                    HorizontalAlignment="Right"
                                    telerik:LocalizationManager.ResourceKey="Chat_Humidity"
                                    FontWeight="SemiBold"
                                    TextWrapping="Wrap" />
                                <TextBlock
                                    Grid.Row="0"
                                    Grid.Column="1"
                                    Text="{TemplateBinding Humidity}"
                                    TextWrapping="Wrap" />
                                <TextBlock
                                    Grid.Row="1"
                                    Margin="0,0,5,0"
                                    HorizontalAlignment="Right"
                                    telerik:LocalizationManager.ResourceKey="Chat_Dew"
                                    FontWeight="SemiBold"
                                    TextWrapping="Wrap" />
                                <TextBlock
                                    Grid.Row="1"
                                    Grid.Column="1"
                                    Text="{TemplateBinding Dew}"
                                    TextWrapping="Wrap" />
                                <TextBlock
                                    Grid.Row="2"
                                    Margin="0,0,5,0"
                                    HorizontalAlignment="Right"
                                    telerik:LocalizationManager.ResourceKey="Chat_Pressure"
                                    FontWeight="SemiBold"
                                    TextWrapping="Wrap" />
                                <TextBlock
                                    Grid.Row="2"
                                    Grid.Column="1"
                                    Text="{TemplateBinding Pressure}"
                                    TextWrapping="Wrap" />
                                <TextBlock
                                    Grid.Row="3"
                                    Margin="0,0,5,0"
                                    HorizontalAlignment="Right"
                                    telerik:LocalizationManager.ResourceKey="Chat_WindSpeed"
                                    FontWeight="SemiBold"
                                    TextWrapping="Wrap" />
                                <TextBlock
                                    Grid.Row="3"
                                    Grid.Column="1"
                                    Text="{TemplateBinding Wind}"
                                    TextWrapping="Wrap" />
                            </Grid>
                        </Border>
                        <ItemsControl
                            x:Name="ActionResultsItemsControl"
                            Grid.Row="4"
                            Grid.Column="0"
                            Grid.ColumnSpan="2"
                            Margin="5,0,5,10"
                            ItemsSource="{Binding ReportActions}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <telerik:RadButton
                                        Margin="5,5,5,0"
                                        Command="{Binding Command}"
                                        Content="{Binding Text}" />
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="{Binding ActionResultsOrientation}" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding CardOrientation}" Value="Landscape">
                            <Setter TargetName="CardImage" Property="MaxWidth" Value="100" />
                            <Setter TargetName="CardImage" Property="Grid.Row" Value="0" />
                            <Setter TargetName="CardImage" Property="Grid.RowSpan" Value="5" />
                            <Setter TargetName="CardImage" Property="Grid.ColumnSpan" Value="1" />
                            <Setter TargetName="Title" Property="Grid.Column" Value="1" />
                            <Setter TargetName="Title" Property="Grid.ColumnSpan" Value="1" />
                            <Setter TargetName="TitleStackPanel" Property="Grid.Row" Value="1" />
                            <Setter TargetName="TitleStackPanel" Property="Grid.Column" Value="1" />
                            <Setter TargetName="TitleStackPanel" Property="Grid.ColumnSpan" Value="1" />
                            <Setter TargetName="CardDetails" Property="Grid.Row" Value="2" />
                            <Setter TargetName="CardDetails" Property="Grid.Column" Value="1" />
                            <Setter TargetName="CardDetails" Property="Grid.RowSpan" Value="2" />
                            <Setter TargetName="CardDetails" Property="Grid.ColumnSpan" Value="1" />
                            <Setter TargetName="ActionResultsItemsControl" Property="Grid.Row" Value="4" />
                            <Setter TargetName="ActionResultsItemsControl" Property="Grid.Column" Value="1" />
                            <Setter TargetName="ActionResultsItemsControl" Property="Grid.ColumnSpan" Value="1" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=ImageDisplayMode}" Value="Thumbnail">
                            <Setter TargetName="CardImage" Property="Margin" Value="10,10,10,5" />
                            <Setter TargetName="CardImage" Property="Width" Value="80" />
                            <Setter TargetName="CardImage" Property="Height" Value="80" />
                            <Setter TargetName="CardImage" Property="Stretch" Value="Uniform" />
                            <Setter TargetName="CardImage" Property="HorizontalAlignment" Value="Center" />
                            <Setter TargetName="CardImage" Property="VerticalAlignment" Value="Top" />
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding CardOrientation}" Value="Portrait" />
                                <Condition Binding="{Binding ImageDisplayMode}" Value="Stretch" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="CardImage" Property="Margin" Value="0,10,0,0" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding CardOrientation}" Value="Landscape" />
                                <Condition Binding="{Binding ImageDisplayMode}" Value="Stretch" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="CardImage" Property="Width" Value="120" />
                            <Setter TargetName="CardImage" Property="Stretch" Value="Uniform" />
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding ElementName=ActionResultsItemsControl, Path=HasItems}" Value="False">
                            <Setter TargetName="ActionResultsItemsControl" Property="Margin" Value="0" />
                        </DataTrigger>
                        <Trigger Property="Title" Value="{x:Null}">
                            <Setter TargetName="Title" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="SubTitle" Value="{x:Null}">
                            <Setter TargetName="SubTitle" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Text" Value="{x:Null}">
                            <Setter TargetName="Text" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Temperature" Value="{x:Null}">
                            <Setter TargetName="Temperature" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Humidity" Value="{x:Null}">
                            <Setter TargetName="HumidityRow" Property="Height" Value="0" />
                        </Trigger>
                        <Trigger Property="Dew" Value="{x:Null}">
                            <Setter TargetName="DewRow" Property="Height" Value="0" />
                        </Trigger>
                        <Trigger Property="Pressure" Value="{x:Null}">
                            <Setter TargetName="PressureRow" Property="Height" Value="0" />
                        </Trigger>
                        <Trigger Property="Wind" Value="{x:Null}">
                            <Setter TargetName="WindRow" Property="Height" Value="0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="FlightCardStyle" TargetType="{x:Type chat:FlightCard}">
        <Setter Property="Foreground" Value="{telerik:FluentResource ResourceKey=MarkerBrush}" />
        <Setter Property="Background" Value="{telerik:FluentResource ResourceKey=PrimaryBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{telerik:FluentResource ResourceKey=BasicSolidBrush}" />
        <Setter Property="BorderThickness" Value="0,1" />
        <Setter Property="Width" Value="230" />
        <Setter Property="MinHeight" Value="28" />
        <Setter Property="ActionResultsOrientation" Value="{Binding ActionResultsOrientation, Mode=TwoWay}" />
        <Setter Property="PassengerName" Value="{Binding PassengerName}" />
        <Setter Property="Flights" Value="{Binding Flights}" />
        <Setter Property="Total" Value="{Binding Total}" />
        <Setter Property="ImageSource" Value="{Binding ImageSource}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type chat:FlightCard}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="{Binding RelativeSource={RelativeSource AncestorType={x:Type chat:InlineMessageControl}}, Path=DataContext.CalculatedCornerRadius}">
                        <Grid Margin="{TemplateBinding Padding}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                                <RowDefinition x:Name="TotalRow" Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <StackPanel
                                x:Name="PassengerName"
                                Grid.Row="0"
                                Grid.Column="0"
                                Grid.ColumnSpan="2"
                                Margin="10"
                                HorizontalAlignment="Left"
                                Orientation="Vertical">
                                <TextBlock
                                    Margin="0"
                                    telerik:LocalizationManager.ResourceKey="Chat_Passenger"
                                    Style="{StaticResource ChatCardTitleStyle}" />
                                <TextBlock
                                    Margin="0"
                                    FontWeight="Normal"
                                    Style="{StaticResource ChatCardTitleStyle}"
                                    Text="{TemplateBinding PassengerName}" />
                            </StackPanel>
                            <Border
                                Grid.Row="1"
                                Grid.RowSpan="2"
                                Grid.ColumnSpan="2"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" />
                            <TextBlock
                                x:Name="DepartureLabel"
                                Grid.Row="1"
                                Margin="10,10,5,0"
                                HorizontalAlignment="Left"
                                telerik:LocalizationManager.ResourceKey="Chat_Departure"
                                FontSize="16"
                                Style="{StaticResource ChatCardTitleStyle}" />
                            <TextBlock
                                x:Name="ArrivalsLabel"
                                Grid.Row="1"
                                Grid.Column="1"
                                Margin="5,10,10,0"
                                telerik:LocalizationManager.ResourceKey="Chat_Arrival"
                                FontSize="16"
                                Style="{StaticResource ChatCardTitleStyle}"
                                TextAlignment="Right" />
                            <ItemsControl
                                x:Name="FlightsItemsControl"
                                Grid.Row="2"
                                Grid.ColumnSpan="2"
                                Margin="10,0,10,10"
                                ItemsSource="{TemplateBinding Flights}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Grid Margin="0,15">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <TextBlock
                                                Grid.Row="0"
                                                Grid.Column="0"
                                                Margin="0,0,0,-5"
                                                Style="{StaticResource ChatCardSubTitleStyle}"
                                                Text="{Binding DepartureCity}"
                                                TextWrapping="Wrap" />
                                            <TextBlock
                                                Grid.Row="1"
                                                Grid.Column="0"
                                                FontSize="30"
                                                Text="{Binding DepartureAirport}"
                                                TextWrapping="Wrap" />
                                            <TextBlock
                                                Grid.Row="2"
                                                Grid.Column="0"
                                                FontSize="11"
                                                FontWeight="Bold"
                                                Text="{Binding DepartureDateTime, StringFormat={}{0:d}}"
                                                TextWrapping="Wrap" />
                                            <TextBlock
                                                Grid.Row="3"
                                                Grid.Column="0"
                                                FontSize="11"
                                                FontWeight="Bold"
                                                Text="{Binding DepartureDateTime, StringFormat={}{0:t}}"
                                                TextWrapping="Wrap" />
                                            <Image
                                                x:Name="CardImage"
                                                Grid.RowSpan="3"
                                                Grid.Column="1"
                                                MaxWidth="50"
                                                MaxHeight="50"
                                                Source="{Binding ImageSource, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type chat:FlightCard}}}"
                                                Stretch="Uniform" />
                                            <TextBlock
                                                Grid.Row="0"
                                                Grid.Column="2"
                                                Margin="0,0,0,-5"
                                                Style="{StaticResource ChatCardSubTitleStyle}"
                                                Text="{Binding ArrivalCity}"
                                                TextAlignment="Right"
                                                TextWrapping="Wrap" />
                                            <TextBlock
                                                Grid.Row="1"
                                                Grid.Column="2"
                                                FontSize="30"
                                                Text="{Binding ArrivalAirport}"
                                                TextAlignment="Right"
                                                TextWrapping="Wrap" />
                                            <TextBlock
                                                Grid.Row="2"
                                                Grid.Column="2"
                                                FontSize="11"
                                                FontWeight="Bold"
                                                Text="{Binding ArrivalDateTime, StringFormat={}{0:d}}"
                                                TextAlignment="Right"
                                                TextWrapping="Wrap" />
                                            <TextBlock
                                                Grid.Row="3"
                                                Grid.Column="2"
                                                FontSize="11"
                                                FontWeight="Bold"
                                                Text="{Binding ArrivalDateTime, StringFormat={}{0:t}}"
                                                TextAlignment="Right"
                                                TextWrapping="Wrap" />
                                        </Grid>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                            <TextBlock
                                Grid.Row="3"
                                Margin="10,10,5,10"
                                telerik:LocalizationManager.ResourceKey="Chat_Total"
                                FontWeight="Normal"
                                Style="{StaticResource ChatCardTitleStyle}"
                                TextAlignment="Left" />
                            <TextBlock
                                Grid.Row="3"
                                Grid.Column="1"
                                Margin="5,10,10,10"
                                Style="{StaticResource ChatCardTitleStyle}"
                                Text="{Binding Total, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type chat:FlightCard}}}"
                                TextAlignment="Right" />
                            <ItemsControl
                                x:Name="ActionResultsItemsControl"
                                Grid.Row="4"
                                Grid.Column="0"
                                Grid.ColumnSpan="2"
                                Margin="5,0,5,10"
                                ItemsSource="{Binding ReportActions}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <telerik:RadButton
                                            Margin="5,5,5,0"
                                            Command="{Binding Command}"
                                            Content="{Binding Text}" />
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="{Binding ActionResultsOrientation}" />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding ElementName=ActionResultsItemsControl, Path=HasItems}" Value="False">
                            <Setter TargetName="ActionResultsItemsControl" Property="Margin" Value="0" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=FlightsItemsControl, Path=HasItems}" Value="False">
                            <Setter TargetName="FlightsItemsControl" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="DepartureLabel" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="ArrivalsLabel" Property="Visibility" Value="Collapsed" />
                            <Setter Property="BorderThickness" Value="0" />
                        </DataTrigger>
                        <Trigger Property="PassengerName" Value="{x:Null}">
                            <Setter TargetName="PassengerName" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Total" Value="{x:Null}">
                            <Setter TargetName="TotalRow" Property="Height" Value="0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CarouselCardStyle" TargetType="{x:Type chat:CarouselCard}">
        <Style.Resources>
            <Style TargetType="{x:Type telerikNavigation:CarouselItemContentPresenter}">
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" TargetType="ContentControl">
                            <ContentPresenter Content="{Binding}" ContentTemplateSelector="{StaticResource MessageTemplateSelector}" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style BasedOn="{StaticResource CardStyle}" TargetType="{x:Type chat:Card}">
                <Setter Property="BorderThickness" Value="0" />
            </Style>
            <Style BasedOn="{StaticResource ImageCardStyle}" TargetType="{x:Type chat:ImageCard}">
                <Setter Property="BorderThickness" Value="0" />
            </Style>
            <Style BasedOn="{StaticResource ProductCardStyle}" TargetType="{x:Type chat:ProductCard}">
                <Setter Property="BorderThickness" Value="0" />
            </Style>
            <Style BasedOn="{StaticResource WeatherCardStyle}" TargetType="{x:Type chat:WeatherCard}">
                <Setter Property="BorderThickness" Value="0" />
            </Style>
            <Style BasedOn="{StaticResource FlightCardStyle}" TargetType="{x:Type chat:FlightCard}">
                <Setter Property="BorderThickness" Value="0" />
            </Style>
        </Style.Resources>
        <Setter Property="Source" Value="{Binding Source, Mode=TwoWay}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type chat:CarouselCard}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{Binding RelativeSource={RelativeSource AncestorType={x:Type chat:InlineMessageControl}}, Path=DataContext.CalculatedCornerRadius}">
                        <Grid Margin="{TemplateBinding Padding}">
                            <telerik:RadCarousel
                                Height="{Binding CarouselHeight}"
                                HorizontalScrollBarVisibility="Hidden"
                                ItemsSource="{TemplateBinding Source}"
                                SelectedItem="{Binding SelectedItem}">
                                <telerik:RadCarousel.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <telerik:RadCarouselPanel
                                            IsContinuous="True"
                                            IsScalingEnabled="False"
                                            ItemsPerPage="3">
                                            <telerik:RadCarouselPanel.Path>
                                                <Path Stretch="Fill">
                                                    <Path.Data>
                                                        <LineGeometry StartPoint="300,200" EndPoint="20,200" />
                                                    </Path.Data>
                                                </Path>
                                            </telerik:RadCarouselPanel.Path>
                                        </telerik:RadCarouselPanel>
                                    </ItemsPanelTemplate>
                                </telerik:RadCarousel.ItemsPanel>
                                <telerik:EventToCommandBehavior.EventBindings>
                                    <telerik:EventBinding
                                        Command="{Binding LoadedCommand}"
                                        EventName="Loaded"
                                        PassEventArgsToCommand="True" />
                                </telerik:EventToCommandBehavior.EventBindings>
                            </telerik:RadCarousel>
                            <Grid HorizontalAlignment="Stretch">
                                <telerik:CarouselScrollButton
                                    x:Name="PART_PageLeftButton"
                                    Width="30"
                                    Height="30"
                                    Margin="10,0,0,0"
                                    HorizontalAlignment="Left"
                                    CarouselScrollButtonType="LineLeft" />
                                <telerik:CarouselScrollButton
                                    x:Name="PART_PageRightButton"
                                    Width="30"
                                    Height="30"
                                    Margin="0,0,10,0"
                                    HorizontalAlignment="Right"
                                    CarouselScrollButtonType="LineRight" />
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource CardStyle}" TargetType="{x:Type chat:Card}" />
    <Style BasedOn="{StaticResource ImageCardStyle}" TargetType="{x:Type chat:ImageCard}" />
    <Style BasedOn="{StaticResource ProductCardStyle}" TargetType="{x:Type chat:ProductCard}" />
    <Style BasedOn="{StaticResource WeatherCardStyle}" TargetType="{x:Type chat:WeatherCard}" />
    <Style BasedOn="{StaticResource FlightCardStyle}" TargetType="{x:Type chat:FlightCard}" />
    <Style BasedOn="{StaticResource CarouselCardStyle}" TargetType="{x:Type chat:CarouselCard}" />
    <Style x:Key="ChatOverlayStyle" TargetType="{x:Type chat:ChatOverlay}">
        <Setter Property="HeaderBackground" Value="{telerik:FluentResource ResourceKey=ComplementaryBrush}" />
        <Setter Property="FooterBackground" Value="{telerik:FluentResource ResourceKey=ComplementaryBrush}" />
        <Setter Property="ActionsBackground" Value="{telerik:FluentResource ResourceKey=AlternativeBrush}" />
        <Setter Property="Background" Value="{telerik:FluentResource ResourceKey=AlternativeBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type chat:ChatOverlay}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition
                                    x:Name="Header"
                                    Height="Auto"
                                    MinHeight="48" />
                                <RowDefinition x:Name="Main" />
                                <RowDefinition
                                    x:Name="Footer"
                                    Height="Auto"
                                    MinHeight="48" />
                                <RowDefinition x:Name="Actions" Height="48" />
                            </Grid.RowDefinitions>
                            <Grid>
                                <Border Background="{TemplateBinding HeaderBackground}" />
                                <ContentControl
                                    Margin="10,5"
                                    VerticalAlignment="Center"
                                    Content="{Binding OverlayViewModel.Header}"
                                    ContentTemplate="{Binding OverlayViewModel.HeaderTemplate}"
                                    FontSize="13"
                                    FontWeight="SemiBold" />
                            </Grid>
                            <Border
                                x:Name="PART_MainBorder"
                                Grid.Row="1"
                                Background="{TemplateBinding MainBackground}">
                                <ContentPresenter />
                            </Border>
                            <Grid Grid.Row="2">
                                <Border Background="{TemplateBinding FooterBackground}" />
                                <ContentControl
                                    Margin="10,5"
                                    VerticalAlignment="Center"
                                    Content="{Binding OverlayViewModel.Footer}"
                                    ContentTemplate="{Binding OverlayViewModel.FooterTemplate}"
                                    FontSize="13"
                                    FontWeight="SemiBold" />
                            </Grid>
                            <Border
                                Grid.Row="3"
                                Background="{TemplateBinding ActionsBackground}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="0,1,0,0"
                                SnapsToDevicePixels="True">
                                <ItemsControl
                                    x:Name="ReportActionsOverlay"
                                    HorizontalAlignment="Right"
                                    ItemsSource="{Binding ReportActions}">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <telerik:RadButton
                                                MinWidth="60"
                                                Margin="0,0,10,0"
                                                VerticalAlignment="Center"
                                                Command="{Binding Command}"
                                                CommandParameter="{Binding}"
                                                Content="{Binding Text}"
                                                Visibility="{Binding CommandButtonVisibility}" />
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <StackPanel Orientation="Horizontal" />
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                </ItemsControl>
                            </Border>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource ChatOverlayStyle}" TargetType="{x:Type chat:ChatOverlay}" />
    <Style x:Key="ChatPopupPlaceholderStyle" TargetType="{x:Type chat:ChatPopupPlaceholder}">
        <Setter Property="MaxHeight" Value="300" />
        <Setter Property="BorderThickness" Value="0,1,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type chat:ChatPopupPlaceholder}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <ContentPresenter Grid.Row="0" />
                            <ItemsControl
                                x:Name="ReportActionsPopup"
                                Grid.Row="1"
                                HorizontalAlignment="Center"
                                ItemsSource="{Binding ReportActions}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <telerik:RadButton
                                            Margin="3"
                                            Command="{Binding Command}"
                                            CommandParameter="{Binding}"
                                            Content="{Binding Text}"
                                            Visibility="{Binding CommandButtonVisibility}" />
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource ChatPopupPlaceholderStyle}" TargetType="{x:Type chat:ChatPopupPlaceholder}" />
    <Style x:Key="RadChatStyle" TargetType="{x:Type controls:RadChat}">
        <Style.Setters>
            <Setter Property="FontFamily" Value="{telerik:FluentResource ResourceKey=FontFamily}" />
            <Setter Property="Foreground" Value="{telerik:FluentResource ResourceKey=MarkerBrush}" />
            <Setter Property="Background" Value="{telerik:FluentResource ResourceKey=AlternativeBrush}" />
            <Setter Property="BorderBrush" Value="{telerik:FluentResource ResourceKey=BasicSolidBrush}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="MessageListTemplateSelector" Value="{StaticResource MessageTemplateSelector}" />
            <Setter Property="MessagePopupTemplateSelector" Value="{StaticResource MessageTemplateSelector}" />
            <Setter Property="MessageOverlayTemplateSelector" Value="{StaticResource MessageTemplateSelector}" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type controls:RadChat}">
                        <Grid>
                            <Border
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="48" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <chat:ChatMessageList
                                        x:Name="PART_MessageList"
                                        Grid.Row="0"
                                        Margin="{TemplateBinding Padding}" />
                                    <chat:ChatPopupPlaceholder
                                        x:Name="PART_PopupPlaceholder"
                                        Grid.Row="1"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        Visibility="Collapsed" />
                                    <ItemsControl
                                        x:Name="PART_SuggestionItemsControl"
                                        Grid.Row="2"
                                        Padding="16,11,5,18"
                                        chat:ScrollViewerScrollingHelper.IsEnabled="True"
                                        ItemsSource="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:RadChat}}, Path=SuggestedActions}"
                                        Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:RadChat}}, Path=SuggestedActionsVisibility}">
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <telerik:RadButton
                                                    MinHeight="28"
                                                    Margin="0,0,10,0"
                                                    Padding="5,0"
                                                    telerik:TouchManager.ShouldSuspendMousePromotion="True"
                                                    BorderBrush="{telerik:FluentResource ResourceKey=AccentFocusedBrush}"
                                                    Command="{Binding Command}"
                                                    CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:RadChat}}}"
                                                    CornerRadius="12">
                                                    <StackPanel Orientation="Horizontal">
                                                        <Image
                                                            Width="16"
                                                            Height="16"
                                                            Source="{Binding Icon}"
                                                            Stretch="UniformToFill"
                                                            Visibility="{Binding RelativeSource={RelativeSource Self}, Path=Source, Converter={StaticResource NullToVisibilityConverter}}">
                                                            <Image.Clip>
                                                                <EllipseGeometry
                                                                    Center="8, 8"
                                                                    RadiusX="8"
                                                                    RadiusY="8" />
                                                            </Image.Clip>
                                                        </Image>
                                                        <TextBlock
                                                            Margin="{Binding RelativeSource={RelativeSource AncestorType={x:Type telerik:RadButton}}, Path=Padding}"
                                                            VerticalAlignment="Center"
                                                            Text="{Binding Text}"
                                                            Visibility="{Binding RelativeSource={RelativeSource Self}, Path=Text, Converter={StaticResource NullToVisibilityConverter}}" />
                                                    </StackPanel>
                                                </telerik:RadButton>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                        <ItemsControl.Template>
                                            <ControlTemplate TargetType="ItemsControl">
                                                <ScrollViewer
                                                    Background="{x:Null}"
                                                    BorderThickness="0"
                                                    HorizontalScrollBarVisibility="Auto">
                                                    <ItemsPresenter Margin="{TemplateBinding Padding}" />
                                                </ScrollViewer>
                                            </ControlTemplate>
                                        </ItemsControl.Template>
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <VirtualizingStackPanel Orientation="Horizontal" />
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                    </ItemsControl>
                                    <chat:TypingIndicator
                                        x:Name="PART_TypingIndicator"
                                        Grid.Row="3"
                                        Icon="{TemplateBinding TypingIndicatorIcon}"
                                        Text="{TemplateBinding TypingIndicatorText}"
                                        Visibility="{TemplateBinding TypingIndicatorVisibility}" />
                                    <Border
                                        x:Name="InputBoxContainer"
                                        Grid.Row="4"
                                        Background="{telerik:FluentResource ResourceKey=PrimaryBrush}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="0,1,0,0">
                                        <DockPanel>
                                            <StackPanel DockPanel.Dock="Right" Orientation="Horizontal">
                                                <telerik:RadToggleButton
                                                    x:Name="PART_ToolBarButton"
                                                    Margin="5,0"
                                                    IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsToolBarOpen, Mode=TwoWay}"
                                                    Style="{StaticResource ChatToggleButtonStyle}"
                                                    Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ToolBarCommands.Count, Converter={StaticResource NumberToVisibilityConverter}}">
                                                    <telerik:RadGlyph Glyph="{StaticResource GlyphMoreHorizontal}" TextOptions.TextRenderingMode="Aliased" />
                                                </telerik:RadToggleButton>
                                                <telerik:RadButton
                                                    x:Name="SendButton"
                                                    Margin="5,0"
                                                    Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SendCommand}"
                                                    CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                                    Style="{StaticResource ChatButtonStyle}">
                                                    <Path
                                                        Data="M1,9 L18,9 0,16 z M0,0 L18,8 1,8 z"
                                                        Fill="{Binding ElementName=SendButton, Path=Foreground}"
                                                        SnapsToDevicePixels="True"
                                                        Stretch="None"
                                                        StrokeThickness="0" />
                                                </telerik:RadButton>
                                            </StackPanel>
                                            <telerik:RadWatermarkTextBox
                                                x:Name="PART_InputBox"
                                                AcceptsReturn="True"
                                                Background="Transparent"
                                                BorderThickness="0"
                                                WatermarkContent="{TemplateBinding InputBoxWatermarkContent}" />
                                        </DockPanel>
                                    </Border>
                                    <Border
                                        Name="PART_ToolBar"
                                        Grid.Row="5"
                                        Height="48"
                                        Background="{telerik:FluentResource ResourceKey=AlternativeBrush}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="0,1,0,0"
                                        CornerRadius="0 0 1 1"
                                        SnapsToDevicePixels="True"
                                        Visibility="{Binding ElementName=PART_ToolBarButton, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}">
                                        <ItemsControl ItemsSource="{TemplateBinding ToolBarCommands}">
                                            <ItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <StackPanel Orientation="Horizontal" />
                                                </ItemsPanelTemplate>
                                            </ItemsControl.ItemsPanel>
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate>
                                                    <telerik:RadButton
                                                        Margin="5,5,0,5"
                                                        Command="{Binding Command}"
                                                        Content="{Binding}"
                                                        ContentTemplate="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:RadChat}}, Path=ToolBarCommandTemplate}"
                                                        ContentTemplateSelector="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:RadChat}}, Path=ToolBarCommandTemplateSelector}" />
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>
                                    </Border>
                                    <chat:ChatOverlay
                                        x:Name="PART_Overlay"
                                        Grid.RowSpan="5"
                                        Visibility="Collapsed" />
                                </Grid>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>
    <Style BasedOn="{StaticResource RadChatStyle}" TargetType="{x:Type controls:RadChat}" />
</ResourceDictionary>
