<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:animation="clr-namespace:Telerik.Windows.Controls.Animation;assembly=Telerik.Windows.Controls"
    xmlns:c="http://schemas.telerik.com/2008/xaml/compile"
    xmlns:dragDrop="clr-namespace:Telerik.Windows.Controls.DragDrop;assembly=Telerik.Windows.Controls"
    xmlns:expander="clr-namespace:Telerik.Windows.Controls.Expander;assembly=Telerik.Windows.Controls"
    xmlns:filteringEditors="clr-namespace:Telerik.Windows.Controls.Filtering.Editors;assembly=Telerik.Windows.Controls"
    xmlns:legend="clr-namespace:Telerik.Windows.Controls.Legend;assembly=Telerik.Windows.Controls"
    xmlns:mat="clr-namespace:Telerik.Windows.Controls.MaterialControls;assembly=Telerik.Windows.Controls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
    xmlns:telerik1="clr-namespace:Telerik.Windows.Controls;assembly=Telerik.Windows.Controls"
    xmlns:telerikDragDrop="clr-namespace:Telerik.Windows.DragDrop;assembly=Telerik.Windows.Controls"
    xmlns:telerikPrimitives="clr-namespace:Telerik.Windows.Controls.Primitives;assembly=Telerik.Windows.Controls"
    xmlns:telerikShapes="clr-namespace:Telerik.Windows.Shapes;assembly=Telerik.Windows.Controls"
    xmlns:telerikTransitions="clr-namespace:Telerik.Windows.Controls.TransitionEffects;assembly=Telerik.Windows.Controls"
    xmlns:telerikTransitonControl="clr-namespace:Telerik.Windows.Controls.TransitionControl;assembly=Telerik.Windows.Controls"
    xmlns:touch="clr-namespace:Telerik.Windows.Input.Touch;assembly=Telerik.Windows.Controls"
    mc:Ignorable="c">
    <ResourceDictionary.MergedDictionaries>
        <telerik:FluentResourceDictionary />
    </ResourceDictionary.MergedDictionaries>
    <telerik1:DragDropBooleanToVisibilityConverter x:Key="DragDropBooleanToVisibilityConverter" />
    <telerik1:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <expander:ExpandDirectionToRotationAngleConverter x:Key="ExpandDirectionToRotationAngleConverter" />
    <telerik1:ThicknessToOrientedThicknessConverter x:Key="ThicknessToOrientedThicknessConverter" />
    <Geometry x:Key="ArrowTopRight8x8">M0,0 L8,0 8,8 z</Geometry>
    <Geometry x:Key="DragArrow">M 0 1 L 0 0 2 2 0 4 0 3</Geometry>
    <sys:String x:Key="GlyphArrowsKpi"></sys:String>
    <sys:String x:Key="GlyphArrowChevronUp"></sys:String>
    <sys:String x:Key="GlyphArrowChevronRight"></sys:String>
    <sys:String x:Key="GlyphArrowChevronDown"></sys:String>
    <sys:String x:Key="GlyphArrowChevronLeft"></sys:String>
    <sys:String x:Key="GlyphArrowRight"></sys:String>
    <sys:String x:Key="GlyphLinkHorizontal"></sys:String>
    <sys:String x:Key="GlyphCancel"></sys:String>
    <sys:String x:Key="GlyphCheck"></sys:String>
    <sys:String x:Key="GlyphPlus"></sys:String>
    <sys:String x:Key="GlyphPreview"></sys:String>
    <sys:String x:Key="GlyphInsertUp"></sys:String>
    <sys:String x:Key="GlyphInsertDown"></sys:String>
    <SolidColorBrush x:Key="RadHyperlinkButtonNormalBrush" Color="#008EFF" />
    <SolidColorBrush x:Key="RadHyperlinkButtonHoverBrush" Color="#4CB0FF" />
    <SolidColorBrush x:Key="RadHyperlinkButtonVisitedBrush" Color="#744DA9" />
    <ControlTemplate x:Key="ErrorTooltipTemplate" TargetType="ToolTip">
        <Grid
            x:Name="RootVisual"
            HorizontalAlignment="Right"
            Opacity="0"
            RenderTransformOrigin="0 0"
            SnapsToDevicePixels="True">
            <Grid.RenderTransform>
                <TranslateTransform x:Name="xform" X="-25" />
            </Grid.RenderTransform>
            <Border
                Margin="1,0,0,0"
                Background="{telerik1:FluentResource ResourceKey=ValidationBrush}"
                UseLayoutRounding="True">
                <ContentPresenter
                    Margin="10,6"
                    VerticalAlignment="Center"
                    Content="{Binding ErrorContent}"
                    TextBlock.FontSize="{telerik1:FluentResource ResourceKey=FontSize}"
                    TextBlock.Foreground="{telerik1:FluentResource ResourceKey=MarkerInvertedBrush}" />
            </Border>
            <ContentControl />
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="OpenStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0" />
                        <VisualTransition GeneratedDuration="0:0:0.3" To="Open">
                            <Storyboard>
                                <DoubleAnimation
                                    Storyboard.TargetName="xform"
                                    Storyboard.TargetProperty="X"
                                    To="0"
                                    Duration="0:0:0.3">
                                    <DoubleAnimation.EasingFunction>
                                        <BackEase Amplitude=".4" EasingMode="EaseOut" />
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation
                                    Storyboard.TargetName="RootVisual"
                                    Storyboard.TargetProperty="Opacity"
                                    To="1"
                                    Duration="0:0:0.3" />
                            </Storyboard>
                        </VisualTransition>
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Closed">
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="RootVisual"
                                Storyboard.TargetProperty="Opacity"
                                To="0"
                                Duration="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Open">
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="xform"
                                Storyboard.TargetProperty="X"
                                To="0"
                                Duration="0" />
                            <DoubleAnimation
                                Storyboard.TargetName="RootVisual"
                                Storyboard.TargetProperty="Opacity"
                                To="1"
                                Duration="0" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="ValidationTooltipTemplate">
        <Grid VerticalAlignment="Top" SnapsToDevicePixels="True">
            <AdornedElementPlaceholder x:Name="Holder" />
            <Border
                BorderBrush="{telerik1:FluentResource ResourceKey=ValidationBrush}"
                BorderThickness="1"
                CornerRadius="{telerik1:FluentResource ResourceKey=CornerRadius}" />
            <Path
                Width="8"
                Height="8"
                Margin="0,1,1,0"
                HorizontalAlignment="Right"
                VerticalAlignment="Top"
                Data="{StaticResource ArrowTopRight8x8}"
                Fill="{telerik1:FluentResource ResourceKey=ValidationBrush}" />
            <ToolTipService.ToolTip>
                <ToolTip
                    x:Name="PART_ToolTip"
                    DataContext="{Binding RelativeSource={RelativeSource Mode=Self}, Path=PlacementTarget.DataContext}"
                    Placement="Right"
                    Template="{StaticResource ErrorTooltipTemplate}" />
            </ToolTipService.ToolTip>
        </Grid>
    </ControlTemplate>
    <Style x:Key="ShadowStyle" TargetType="{x:Type mat:Shadow}">
        <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background, Mode=OneWay}" />
        <Setter Property="ShadowDepth" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.ShadowDepth), Mode=OneWay, FallbackValue=Depth1}" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Theme" Value="Material" />
    </Style>
    <Style BasedOn="{StaticResource ShadowStyle}" TargetType="{x:Type mat:Shadow}" />
    <RadialGradientBrush x:Key="FluentRadialGradient">
        <RadialGradientBrush.GradientStops>
            <GradientStop Offset="0.2" Color="#59FFFFFF" />
            <GradientStop Offset="0.9" Color="Transparent" />
            <GradientStop Offset="1" Color="Transparent" />
            <GradientStop Offset="1.1" Color="Transparent" />
        </RadialGradientBrush.GradientStops>
    </RadialGradientBrush>
    <RadialGradientBrush x:Key="FluentRadialPressedGradient" Center=".5 .5" GradientOrigin=".5 .5" RadiusX=".3" RadiusY=".3">
        <GradientStop Offset="1" Color="Transparent" />
        <GradientStop Offset=".75" Color="Transparent" />
        <GradientStop Offset=".55" Color="#35FFFFFF" />
        <GradientStop Offset="0.4" Color="#35FFFFFF" />
        <GradientStop Offset="0.2" Color="Transparent" />
    </RadialGradientBrush>
    <RadialGradientBrush x:Key="FluentBorderGradient" RadiusX=".33" RadiusY="1.5">
        <GradientStop Offset="1" Color="Transparent" />
        <GradientStop Offset=".4" Color="#7FFFFFFF" />
    </RadialGradientBrush>
    <Style x:Key="FluentControlStyle" TargetType="{x:Type mat:FluentControl}">
        <Setter Property="IsSmartClipped" Value="True" />
        <Setter Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessToOrientedThicknessConverter}, ConverterParameter=TopBottom}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="RippleBrush" Value="{StaticResource FluentRadialGradient}" />
        <Setter Property="BorderGradient" Value="{StaticResource FluentBorderGradient}" />
        <Setter Property="mat:MaterialAssist.PressedBrush" Value="{StaticResource FluentRadialPressedGradient}" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type mat:FluentControl}">
                    <Grid Background="Transparent">
                        <Canvas
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            IsHitTestVisible="False"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">

                            <!--  this is the feedback element used in code  -->
                            <Ellipse
                                x:Name="PART_FeedbackElement"
                                Canvas.Left="{TemplateBinding RippleX}"
                                Canvas.Top="{TemplateBinding RippleY}"
                                Width="{TemplateBinding RippleSize}"
                                Height="{TemplateBinding RippleSize}"
                                Fill="{TemplateBinding RippleBrush}"
                                Opacity="0"
                                RenderTransformOrigin=".5 .5">
                                <Ellipse.RenderTransform>

                                    <!--  PART_ScaleTransform ScaleTranform used in code  -->
                                    <ScaleTransform x:Name="PART_ScaleTransform" ScaleX="1" ScaleY="1" />
                                </Ellipse.RenderTransform>
                            </Ellipse>
                        </Canvas>
                        <mat:InnerGlow
                            x:Name="innerGlow"
                            Opacity="0"
                            Visibility="Collapsed" />
                        <Border
                            x:Name="rootBorder"
                            Background="{x:Null}"
                            BorderBrush="{TemplateBinding BorderGradient}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <ContentControl
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Content}"
                                Focusable="False"
                                IsTabStop="False"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="MouseIn" To="MousePressed">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames
                                                FillBehavior="HoldEnd"
                                                Storyboard.TargetName="PART_FeedbackElement"
                                                Storyboard.TargetProperty="Opacity">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.050" Value="1" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:1.0" Value="1" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames
                                                FillBehavior="HoldEnd"
                                                Storyboard.TargetName="PART_FeedbackElement"
                                                Storyboard.TargetProperty="RenderTransform.ScaleX">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="1">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <SineEase EasingMode="EaseOut" />
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.080" Value=".3">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <SineEase EasingMode="EaseIn" />
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                                <EasingDoubleKeyFrame KeyTime="0:0:2" Value="2">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <SineEase EasingMode="EaseOut" />
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames
                                                FillBehavior="HoldEnd"
                                                Storyboard.TargetName="PART_FeedbackElement"
                                                Storyboard.TargetProperty="RenderTransform.ScaleY">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="1">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <SineEase EasingMode="EaseOut" />
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.080" Value=".3">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <SineEase EasingMode="EaseIn" />
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                                <EasingDoubleKeyFrame KeyTime="0:0:2" Value="2">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <SineEase EasingMode="EaseOut" />
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="MousePressed" To="MouseIn">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames
                                                FillBehavior="HoldEnd"
                                                Storyboard.TargetName="PART_FeedbackElement"
                                                Storyboard.TargetProperty="Opacity">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.220" Value="0" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.450" Value="0" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.650" Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames
                                                FillBehavior="HoldEnd"
                                                Storyboard.TargetName="PART_FeedbackElement"
                                                Storyboard.TargetProperty="RenderTransform.ScaleX">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.150" Value="2">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <SineEase EasingMode="EaseIn" />
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.450" Value="0" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.500" Value="0" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.650" Value="1">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <SineEase EasingMode="EaseIn" />
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames
                                                FillBehavior="HoldEnd"
                                                Storyboard.TargetName="PART_FeedbackElement"
                                                Storyboard.TargetProperty="RenderTransform.ScaleY">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.150" Value="2">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <SineEase EasingMode="EaseIn" />
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.450" Value="0" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.500" Value="0" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.650" Value="1">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <SineEase EasingMode="EaseIn" />
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="MousePressed" To="MouseOut" />
                                    <VisualTransition From="MousePressed" To="Normal" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="PART_FeedbackElement"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="0" />

                                        <!--
                                            Accessing BorderBrush.Opacity is feasable because the brush is cloned in code behind.
                                            Do not attempt on frozen resources or add a TemplatedParent binding in the brush's properies to allow operations such as this.
                                        -->
                                        <DoubleAnimation
                                            Storyboard.TargetName="rootBorder"
                                            Storyboard.TargetProperty="BorderBrush.Opacity"
                                            To="0"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MousePressed">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="PART_FeedbackElement"
                                            Storyboard.TargetProperty="RenderTransform.ScaleX"
                                            To="1" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="PART_FeedbackElement"
                                            Storyboard.TargetProperty="RenderTransform.ScaleY"
                                            To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOut">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="PART_FeedbackElement"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="0:0:0.050" />

                                        <!--  See upper comment  -->
                                        <DoubleAnimation
                                            Storyboard.TargetName="rootBorder"
                                            Storyboard.TargetProperty="BorderBrush.Opacity"
                                            To="0"
                                            Duration="0:0:0.050" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseIn">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="PART_FeedbackElement"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0:0:0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PART_FeedbackElement" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.PressedBrush)}" />
                        </Trigger>
                        <Trigger Property="EffectMode" Value="Glow">
                            <Setter TargetName="PART_FeedbackElement" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="innerGlow" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="IsRippleEnabled" Value="False" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="InnerGlowStory">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames
                                            FillBehavior="HoldEnd"
                                            Storyboard.TargetName="innerGlow"
                                            Storyboard.TargetProperty="Opacity">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.060" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="InnerGlowStory" />
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource FluentControlStyle}" TargetType="{x:Type mat:FluentControl}" />
    <Style x:Key="RadGlyphStyle" TargetType="{x:Type telerik1:RadGlyph}">
        <Setter Property="Font" Value="TelerikWebUI" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
    </Style>
    <Style BasedOn="{StaticResource RadGlyphStyle}" TargetType="{x:Type telerik1:RadGlyph}" />
    <Style x:Key="RepeatButtonStyle" TargetType="RepeatButton">
        <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:FluentResource ResourceKey=MouseOverBrush}" />
        <Setter Property="mat:MaterialAssist.PressedBrush" Value="{telerik1:FluentResource ResourceKey=PressedBrush}" />
        <Setter Property="mat:MaterialAssist.FocusBrush" Value="{telerik1:FluentResource ResourceKey=AccentFocusedBrush}" />
        <Setter Property="mat:MaterialAssist.CornerRadius" Value="{telerik1:FluentResource ResourceKey=CornerRadius}" />
        <Setter Property="FontFamily" Value="{telerik1:FluentResource ResourceKey=FontFamily}" />
        <Setter Property="FontSize" Value="{telerik1:FluentResource ResourceKey=FontSize}" />
        <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=MarkerBrush}" />
        <Setter Property="Background" Value="{telerik1:FluentResource ResourceKey=MainBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:FluentResource ResourceKey=MainBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Grid>
                        <Border
                            x:Name="BorderVisual"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Border
                            x:Name="FocusVisual"
                            Background="{x:Null}"
                            BorderBrush="{TemplateBinding mat:MaterialAssist.FocusBrush}"
                            BorderThickness="{telerik1:FluentResource ResourceKey=FocusThickness}"
                            CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                            IsHitTestVisible="False"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            Visibility="Collapsed" />
                        <mat:FluentControl
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                            EffectMode="Glow"
                            IsSmartClipped="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <ContentPresenter
                                x:Name="Content"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Content}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                TextBlock.Foreground="{TemplateBinding Foreground}" />
                        </mat:FluentControl>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused" Value="True" />
                                <Condition Property="IsPressed" Value="False" />
                                <Condition Property="IsMouseOver" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}" />
                            <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(mat:MaterialAssist.PressedBrush), Mode=OneWay}" />
                            <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=(mat:MaterialAssist.PressedBrush), Mode=OneWay}" />
                        </Trigger>

                        <!--  disabled and focused  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                                <Condition Property="IsKeyboardFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Collapsed" />
                        </MultiTrigger>

                        <!--  disabled  -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Content" Property="Opacity" Value="{telerik1:FluentResource ResourceKey=DisabledOpacity}" />
                            <Setter Property="Background" Value="{telerik1:FluentResource ResourceKey=AlternativeBrush}" />
                            <Setter Property="BorderBrush" Value="{telerik1:FluentResource ResourceKey=AlternativeBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource RepeatButtonStyle}" TargetType="RepeatButton" />
    <Style x:Key="ToolTipStyle" TargetType="ToolTip">
        <Setter Property="FontFamily" Value="{telerik1:FluentResource ResourceKey=FontFamily}" />
        <Setter Property="FontSize" Value="{telerik1:FluentResource ResourceKey=FontSize}" />
        <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=MarkerBrush}" />
        <Setter Property="Background" Value="{telerik1:FluentResource ResourceKey=PrimaryBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:FluentResource ResourceKey=BasicBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Grid>
                        <Border
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <ContentPresenter
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource ToolTipStyle}" TargetType="ToolTip" />
    <Style x:Key="LabelStyle" TargetType="telerik1:Label">
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=MarkerBrush}" />
        <Setter Property="FontFamily" Value="{telerik1:FluentResource ResourceKey=FontFamily}" />
        <Setter Property="FontSize" Value="{telerik1:FluentResource ResourceKey=FontSize}" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:Label">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter
                            x:Name="Content"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Content" Property="Opacity" Value="{telerik1:FluentResource ResourceKey=DisabledOpacity}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource LabelStyle}" TargetType="telerik1:Label" />
    <DataTemplate x:Key="GroupTemplate">
        <ContentPresenter Content="{Binding Header}" />
    </DataTemplate>
    <ItemsPanelTemplate x:Key="GroupPanelTemplate">
        <telerik1:TileListPanel x:Name="groupPanelTemplatePanel" VerticalAlignment="{Binding VerticalTilesAlignment, RelativeSource={RelativeSource AncestorType=telerik1:RadTileList}}" />
    </ItemsPanelTemplate>
    <ControlTemplate x:Key="TileGroupContainerTemplate" TargetType="telerik1:TileGroupContainer">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="{Binding GroupHeaderHeight, RelativeSource={RelativeSource AncestorType=telerik1:RadTileList}}" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <ContentPresenter
                Margin="{TemplateBinding Padding}"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                Content="{Binding Header}"
                ContentTemplate="{TemplateBinding HeaderTemplate}"
                Visibility="{Binding GroupHeaderVisibility, RelativeSource={RelativeSource AncestorType=telerik1:RadTileList}}" />
            <ItemsPresenter Grid.Row="1" />
        </Grid>
    </ControlTemplate>
    <Style x:Key="TileGroupContainerStyle" TargetType="telerik1:TileGroupContainer">
        <Setter Property="Template" Value="{StaticResource TileGroupContainerTemplate}" />
        <Setter Property="HeaderTemplate" Value="{Binding GroupTemplate, RelativeSource={RelativeSource AncestorType=telerik1:RadTileList}}" />
        <Setter Property="ItemsPanel" Value="{StaticResource GroupPanelTemplate}" />
        <Setter Property="ItemsSource" Value="{Binding Items}" />
        <Setter Property="Padding" Value="5,0,0,0" />
        <Setter Property="Header" Value="{Binding Header}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="UseLayoutRounding" Value="True" />
    </Style>
    <ControlTemplate x:Key="RadTileListTemplate" TargetType="telerik1:RadTileList">
        <Border
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}">
            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <StackPanel Orientation="Horizontal">
                    <ContentControl
                        x:Name="PART_PanoramaBackground"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Top"
                        ClipToBounds="False"
                        Content="{TemplateBinding PanoramaBackground}" />
                </StackPanel>
                <ScrollViewer
                    x:Name="PART_ScrollViewer"
                    Margin="0"
                    Padding="{TemplateBinding Padding}"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CanContentScroll="True"
                    FocusVisualStyle="{x:Null}"
                    HorizontalScrollBarVisibility="Auto"
                    VerticalScrollBarVisibility="Hidden">
                    <ItemsPresenter />
                    <ScrollViewer.InputBindings>
                        <KeyBinding
                            Key="A"
                            Command="telerikPrimitives:ListControl.SelectAllCommand"
                            Modifiers="Control" />
                    </ScrollViewer.InputBindings>
                </ScrollViewer>
                <ContentPresenter
                    x:Name="dragVisualPlaceholder"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    Visibility="Collapsed" />
            </Grid>
        </Border>
    </ControlTemplate>
    <ItemsPanelTemplate x:Key="RadTileListItemsPanelTemplate">
        <telerik1:TileListGroupPanel />
    </ItemsPanelTemplate>
    <Style x:Key="RadTileListStyle" TargetType="telerik1:RadTileList">
        <Setter Property="Template" Value="{StaticResource RadTileListTemplate}" />
        <Setter Property="ItemsPanel" Value="{StaticResource RadTileListItemsPanelTemplate}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="UseLayoutRounding" Value="True" />
    </Style>
    <ControlTemplate x:Key="TileTemplate" TargetType="telerik1:Tile">
        <Grid Margin="{TemplateBinding Padding}">
            <mat:Shadow Background="{TemplateBinding Background}" ShadowDepth="{TemplateBinding mat:MaterialAssist.ShadowDepth}" />
            <Border
                x:Name="BorderVisual"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}">
                <Grid>
                    <ContentPresenter
                        x:Name="oldContentPresenter"
                        Margin="{TemplateBinding Padding}"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        Content="" />
                    <ContentPresenter
                        x:Name="contentPresenter"
                        Margin="{TemplateBinding Padding}"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    <Border
                        x:Name="SelectedVisual"
                        Background="{x:Null}"
                        BorderBrush="{TemplateBinding mat:MaterialAssist.CheckedBrush}"
                        BorderThickness="3"
                        IsHitTestVisible="False"
                        Visibility="Collapsed">
                        <Grid Background="Transparent" IsHitTestVisible="False">
                            <Path
                                Width="40"
                                Height="40"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Top"
                                Data="M0,0L40,0L40,40z"
                                Fill="{telerik1:FluentResource ResourceKey=AccentBrush}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <telerik1:RadGlyph
                                x:Name="Glyph"
                                Margin="0,4,4,0"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Top"
                                FontSize="16"
                                Foreground="{telerik1:FluentResource ResourceKey=MarkerInvertedBrush}"
                                Glyph="{StaticResource GlyphCheck}"
                                SnapsToDevicePixels="True" />
                        </Grid>
                    </Border>
                    <Border
                        x:Name="MouseOverVisual"
                        Background="{x:Null}"
                        BorderBrush="{TemplateBinding mat:MaterialAssist.MouseOverBrush}"
                        BorderThickness="3"
                        IsHitTestVisible="False"
                        Visibility="Collapsed" />
                </Grid>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="mat:MaterialAssist.ShadowDepth" Value="Depth2" />
                <Setter TargetName="MouseOverVisual" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter TargetName="SelectedVisual" Property="Visibility" Value="Visible" />
                <Setter Property="mat:MaterialAssist.ShadowDepth" Value="Depth3" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="TileStyle" TargetType="telerik1:Tile">
        <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:FluentResource ResourceKey=AccentMouseOverBrush}" />
        <Setter Property="mat:MaterialAssist.CheckedBrush" Value="{telerik1:FluentResource ResourceKey=AccentBrush}" />
        <Setter Property="mat:MaterialAssist.ShadowDepth" Value="Depth1" />
        <Setter Property="Template" Value="{StaticResource TileTemplate}" />
        <Setter Property="Background" Value="{telerik1:FluentResource ResourceKey=AlternativeBrush}" />
        <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=MarkerBrush}" />
        <Setter Property="FontFamily" Value="{telerik1:FluentResource ResourceKey=FontFamily}" />
        <Setter Property="FontSize" Value="{telerik1:FluentResource ResourceKey=FontSize}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="{telerik1:FluentResource ResourceKey=BasicBrush}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Padding" Value="8" />
        <Setter Property="TileType" Value="Double" />
        <Setter Property="UseLayoutRounding" Value="True" />
    </Style>
    <Style BasedOn="{StaticResource TileStyle}" TargetType="telerik1:Tile" />
    <Style BasedOn="{StaticResource RadTileListStyle}" TargetType="telerik1:RadTileList" />
    <Style BasedOn="{StaticResource TileGroupContainerStyle}" TargetType="telerik1:TileGroupContainer" />
    <Style x:Key="GroupBoxStyle" TargetType="telerik1:GroupBox">
        <Setter Property="FontFamily" Value="{telerik1:FluentResource ResourceKey=FontFamily}" />
        <Setter Property="FontSize" Value="{telerik1:FluentResource ResourceKey=FontSize}" />
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="BorderBrush" Value="{telerik1:FluentResource ResourceKey=BasicBrush}" />
        <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=MarkerBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Header" Value="GroupBox" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:GroupBox">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="6" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="6" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="6" />
                        </Grid.RowDefinitions>
                        <Border
                            x:Name="BackgroundVisual"
                            Grid.Row="1"
                            Grid.RowSpan="3"
                            Grid.Column="0"
                            Grid.ColumnSpan="4"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{x:Null}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{telerik1:FluentResource ResourceKey=CornerRadius}" />
                        <Border
                            x:Name="PART_Header"
                            Grid.Row="0"
                            Grid.RowSpan="2"
                            Grid.Column="1"
                            Padding="5,0,5,1">
                            <ContentPresenter ContentSource="Header" RecognizesAccessKey="True" />
                        </Border>
                        <ContentPresenter
                            x:Name="Content"
                            Grid.Row="2"
                            Grid.Column="1"
                            Grid.ColumnSpan="2"
                            Margin="{TemplateBinding Padding}" />
                        <Border
                            x:Name="PART_Border"
                            Grid.Row="1"
                            Grid.RowSpan="3"
                            Grid.ColumnSpan="4"
                            Margin="1,0,1,1"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{telerik1:FluentResource ResourceKey=CornerRadius}"
                            IsHitTestVisible="False" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource GroupBoxStyle}" TargetType="telerik1:GroupBox" />
    <Style TargetType="dragDrop:DragVisualCue">
        <Setter Property="Background" Value="{telerik1:FluentResource ResourceKey=PrimaryBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:FluentResource ResourceKey=BasicBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="5,6" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dragDrop:DragVisualCue">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="dragDrop:DragArrow">
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{telerik1:FluentResource ResourceKey=AccentBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:FluentResource ResourceKey=AccentBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dragDrop:DragArrow">
                    <Grid>
                        <Grid Margin="{TemplateBinding Padding}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="15" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Border
                                Grid.Row="1"
                                Grid.RowSpan="2"
                                Margin="0,0,-1,0"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1,1,0,1">
                                <ContentPresenter
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Content="{TemplateBinding Content}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}" />
                            </Border>
                            <Path
                                Grid.RowSpan="4"
                                Grid.Column="1"
                                Data="{StaticResource DragArrow}"
                                Fill="{TemplateBinding Background}"
                                Stretch="Fill"
                                Stroke="{TemplateBinding BorderBrush}" />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RadToolTipStyle" TargetType="telerik1:RadToolTip">
        <Setter Property="Foreground" Value="#FF000000" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border
                        Background="#FFFFFFFF"
                        BorderThickness="1"
                        CornerRadius="2">
                        <Border.BorderBrush>
                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                <GradientStop Offset="0" Color="#FFA3AEB9" />
                                <GradientStop Offset="0.375" Color="#FF8399A9" />
                                <GradientStop Offset="0.375" Color="#FF718597" />
                                <GradientStop Offset="1" Color="#FF617584" />
                            </LinearGradientBrush>
                        </Border.BorderBrush>
                        <Border
                            Padding="3,0"
                            Background="#FFF7F8FA"
                            BorderBrush="#FFFFFFFF"
                            BorderThickness="1"
                            CornerRadius="1">
                            <TextBlock Margin="3,0" Text="{Binding}" />
                        </Border>
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadToolTip">
                    <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FontFamily" Value="{telerik1:FluentResource ResourceKey=FontFamily}" />
        <Setter Property="FontSize" Value="{telerik1:FluentResource ResourceKey=FontSize}" />
    </Style>
    <Style x:Key="RadToolTipContentViewStyle" TargetType="telerik1:RadToolTipContentView">
        <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=MarkerBrush}" />
        <Setter Property="Background" Value="{telerik1:FluentResource ResourceKey=PrimaryBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:FluentResource ResourceKey=BasicBrush}" />
        <Setter Property="FontFamily" Value="{telerik1:FluentResource ResourceKey=FontFamily}" />
        <Setter Property="FontSize" Value="{telerik1:FluentResource ResourceKey=FontSize}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadToolTipContentView">
                    <Grid>
                        <Border
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <ContentPresenter Margin="{TemplateBinding Padding}" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource RadToolTipStyle}" TargetType="telerik1:RadToolTip" />
    <Style BasedOn="{StaticResource RadToolTipContentViewStyle}" TargetType="telerik1:RadToolTipContentView" />
    <Style x:Key="EllipseStyle" TargetType="Ellipse">
        <Setter Property="Width" Value="8" />
        <Setter Property="Height" Value="8" />
        <Setter Property="Margin" Value="-6" />
        <Setter Property="Fill" Value="{telerik1:FluentResource ResourceKey=AccentBrush}" />
    </Style>
    <Style x:Key="BusyIndicatorProgressBarStyle" TargetType="telerik1:RadProgressBar">
        <Setter Property="Margin" Value="0,18" />
        <Setter Property="Maximum" Value="100" />
        <Setter Property="Orientation" Value="Horizontal" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadProgressBar">
                    <Grid Width="180" HorizontalAlignment="Center">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid
                            x:Name="ProgressBarSpinnerEllipses"
                            Width="45"
                            Height="45"
                            Margin="0,0,0,18">
                            <Canvas RenderTransformOrigin=".5,.5">
                                <Canvas.RenderTransform>
                                    <RotateTransform x:Name="ellipse1Rotate" />
                                </Canvas.RenderTransform>
                                <Ellipse
                                    x:Name="ellipse1"
                                    Opacity="0"
                                    Style="{StaticResource EllipseStyle}" />
                            </Canvas>
                            <Canvas RenderTransformOrigin=".5,.5">
                                <Canvas.RenderTransform>
                                    <RotateTransform x:Name="ellipse2Rotate" />
                                </Canvas.RenderTransform>
                                <Ellipse
                                    x:Name="ellipse2"
                                    Opacity="0"
                                    Style="{StaticResource EllipseStyle}" />
                            </Canvas>
                            <Canvas RenderTransformOrigin=".5,.5">
                                <Canvas.RenderTransform>
                                    <RotateTransform x:Name="ellipse3Rotate" />
                                </Canvas.RenderTransform>
                                <Ellipse
                                    x:Name="ellipse3"
                                    Opacity="0"
                                    Style="{StaticResource EllipseStyle}" />
                            </Canvas>
                            <Canvas RenderTransformOrigin=".5,.5">
                                <Canvas.RenderTransform>
                                    <RotateTransform x:Name="ellipse4Rotate" />
                                </Canvas.RenderTransform>
                                <Ellipse
                                    x:Name="ellipse4"
                                    Opacity="0"
                                    Style="{StaticResource EllipseStyle}" />
                            </Canvas>
                            <Canvas RenderTransformOrigin=".5,.5">
                                <Canvas.RenderTransform>
                                    <RotateTransform x:Name="ellipse5Rotate" />
                                </Canvas.RenderTransform>
                                <Ellipse
                                    x:Name="ellipse5"
                                    Opacity="0"
                                    Style="{StaticResource EllipseStyle}" />
                            </Canvas>
                            <Canvas RenderTransformOrigin=".5,.5">
                                <Canvas.RenderTransform>
                                    <RotateTransform x:Name="ellipse6Rotate" />
                                </Canvas.RenderTransform>
                                <Ellipse
                                    x:Name="ellipse6"
                                    Opacity="0"
                                    Style="{StaticResource EllipseStyle}" />
                            </Canvas>
                            <Canvas RenderTransformOrigin=".5,.5">
                                <Canvas.RenderTransform>
                                    <RotateTransform x:Name="ellipse7Rotate" />
                                </Canvas.RenderTransform>
                                <Ellipse
                                    x:Name="ellipse7"
                                    Opacity="0"
                                    Style="{StaticResource EllipseStyle}" />
                            </Canvas>
                        </Grid>
                        <Grid
                            x:Name="ProgressBarTrack"
                            Grid.Row="1"
                            Height="6"
                            Background="{telerik1:FluentResource ResourceKey=ComplementaryBrush}"
                            RenderTransformOrigin="0.5 0.5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Rectangle x:Name="SkipValueSpacer" />
                            <Rectangle
                                x:Name="ProgressBarIndicator"
                                Grid.Column="1"
                                Fill="{telerik1:FluentResource ResourceKey=AccentBrush}" />
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ProgressBarSpinnerEllipses" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard RepeatBehavior="Forever">
                                        <DoubleAnimationUsingKeyFrames
                                            BeginTime="0"
                                            Storyboard.TargetName="ellipse1"
                                            Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:3.15" Value="1" />
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:3.16" Value="0" />
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:3.45" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames
                                            BeginTime="00:00:00.135"
                                            Storyboard.TargetName="ellipse2"
                                            Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:3.15" Value="1" />
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:3.16" Value="0" />
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:3.20" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames
                                            BeginTime="00:00:00.270"
                                            Storyboard.TargetName="ellipse3"
                                            Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:3.15" Value="1" />
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:3.16" Value="0" />
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:3.20" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames
                                            BeginTime="00:00:00.405"
                                            Storyboard.TargetName="ellipse4"
                                            Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:3.15" Value="1" />
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:3.16" Value="0" />
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:3.20" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames
                                            BeginTime="00:00:00.540"
                                            Storyboard.TargetName="ellipse5"
                                            Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:3.15" Value="1" />
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:3.16" Value="0" />
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:3.20" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames
                                            BeginTime="00:00:00.675"
                                            Storyboard.TargetName="ellipse6"
                                            Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:3.15" Value="1" />
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:3.16" Value="0" />
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:3.20" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames
                                            BeginTime="0"
                                            Storyboard.TargetName="ellipse1Rotate"
                                            Storyboard.TargetProperty="Angle">
                                            <SplineDoubleKeyFrame
                                                KeySpline="0.10,0.20,0.1,0.5"
                                                KeyTime="0"
                                                Value="-110" />
                                            <SplineDoubleKeyFrame
                                                KeySpline="0.02,0.33,0.38,0.77"
                                                KeyTime="0:0:0.433"
                                                Value="10" />
                                            <SplineDoubleKeyFrame KeyTime="0:0:1.2" Value="93" />
                                            <SplineDoubleKeyFrame
                                                KeySpline="0.57,0.17,0.95,0.75"
                                                KeyTime="0:0:1.617"
                                                Value="205" />
                                            <SplineDoubleKeyFrame
                                                KeySpline="0,0.19,0.07,0.72"
                                                KeyTime="0:0:2.017"
                                                Value="357" />
                                            <SplineDoubleKeyFrame KeyTime="0:0:2.783" Value="439" />
                                            <SplineDoubleKeyFrame
                                                KeySpline="0,0,0.95,0.37"
                                                KeyTime="0:0:3.217"
                                                Value="585" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames
                                            BeginTime="00:00:00.135"
                                            Storyboard.TargetName="ellipse2Rotate"
                                            Storyboard.TargetProperty="Angle">
                                            <SplineDoubleKeyFrame
                                                KeySpline="0.10,0.20,0.1,0.5"
                                                KeyTime="0"
                                                Value="-115" />
                                            <SplineDoubleKeyFrame
                                                KeySpline="0.02,0.33,0.38,0.77"
                                                KeyTime="0:0:0.433"
                                                Value="5" />
                                            <SplineDoubleKeyFrame KeyTime="0:0:1.2" Value="88" />
                                            <SplineDoubleKeyFrame
                                                KeySpline="0.57,0.17,0.95,0.75"
                                                KeyTime="0:0:1.617"
                                                Value="200" />
                                            <SplineDoubleKeyFrame
                                                KeySpline="0,0.19,0.07,0.72"
                                                KeyTime="0:0:2.017"
                                                Value="354" />
                                            <SplineDoubleKeyFrame KeyTime="0:0:2.783" Value="434" />
                                            <SplineDoubleKeyFrame
                                                KeySpline="0,0,0.95,0.37"
                                                KeyTime="0:0:3.217"
                                                Value="580" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames
                                            BeginTime="00:00:00.270"
                                            Storyboard.TargetName="ellipse3Rotate"
                                            Storyboard.TargetProperty="Angle">
                                            <SplineDoubleKeyFrame
                                                KeySpline="0.10,0.20,0.1,0.5"
                                                KeyTime="0"
                                                Value="-120" />
                                            <SplineDoubleKeyFrame
                                                KeySpline="0.02,0.33,0.38,0.77"
                                                KeyTime="0:0:0.433"
                                                Value="-5" />
                                            <SplineDoubleKeyFrame KeyTime="0:0:1.2" Value="83" />
                                            <SplineDoubleKeyFrame
                                                KeySpline="0.57,0.17,0.95,0.75"
                                                KeyTime="0:0:1.617"
                                                Value="195" />
                                            <SplineDoubleKeyFrame
                                                KeySpline="0,0.19,0.07,0.72"
                                                KeyTime="0:0:2.017"
                                                Value="349" />
                                            <SplineDoubleKeyFrame KeyTime="0:0:2.783" Value="429" />
                                            <SplineDoubleKeyFrame
                                                KeySpline="0,0,0.95,0.37"
                                                KeyTime="0:0:3.217"
                                                Value="575" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames
                                            BeginTime="00:00:00.405"
                                            Storyboard.TargetName="ellipse4Rotate"
                                            Storyboard.TargetProperty="Angle">
                                            <SplineDoubleKeyFrame
                                                KeySpline="0.10,0.20,0.1,0.5"
                                                KeyTime="0"
                                                Value="-125" />
                                            <SplineDoubleKeyFrame
                                                KeySpline="0.02,0.33,0.38,0.77"
                                                KeyTime="0:0:0.433"
                                                Value="-10" />
                                            <SplineDoubleKeyFrame KeyTime="0:0:1.2" Value="78" />
                                            <SplineDoubleKeyFrame
                                                KeySpline="0.57,0.17,0.95,0.75"
                                                KeyTime="0:0:1.617"
                                                Value="190" />
                                            <SplineDoubleKeyFrame
                                                KeySpline="0,0.19,0.07,0.72"
                                                KeyTime="0:0:2.017"
                                                Value="344" />
                                            <SplineDoubleKeyFrame KeyTime="0:0:2.783" Value="424" />
                                            <SplineDoubleKeyFrame
                                                KeySpline="0,0,0.95,0.37"
                                                KeyTime="0:0:3.217"
                                                Value="570" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames
                                            BeginTime="00:00:00.540"
                                            Storyboard.TargetName="ellipse5Rotate"
                                            Storyboard.TargetProperty="Angle">
                                            <SplineDoubleKeyFrame
                                                KeySpline="0.10,0.20,0.1,0.5"
                                                KeyTime="0"
                                                Value="-130" />
                                            <SplineDoubleKeyFrame
                                                KeySpline="0.02,0.33,0.38,0.77"
                                                KeyTime="0:0:0.433"
                                                Value="-15" />
                                            <SplineDoubleKeyFrame KeyTime="0:0:1.2" Value="73" />
                                            <SplineDoubleKeyFrame
                                                KeySpline="0.57,0.17,0.95,0.75"
                                                KeyTime="0:0:1.617"
                                                Value="185" />
                                            <SplineDoubleKeyFrame
                                                KeySpline="0,0.19,0.07,0.72"
                                                KeyTime="0:0:2.017"
                                                Value="339" />
                                            <SplineDoubleKeyFrame KeyTime="0:0:2.783" Value="419" />
                                            <SplineDoubleKeyFrame
                                                KeySpline="0,0,0.95,0.37"
                                                KeyTime="0:0:3.217"
                                                Value="565" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames
                                            BeginTime="00:00:00.675"
                                            Storyboard.TargetName="ellipse6Rotate"
                                            Storyboard.TargetProperty="Angle">
                                            <SplineDoubleKeyFrame
                                                KeySpline="0.10,0.20,0.1,0.5"
                                                KeyTime="0"
                                                Value="-135" />
                                            <SplineDoubleKeyFrame
                                                KeySpline="0.02,0.33,0.38,0.77"
                                                KeyTime="0:0:0.433"
                                                Value="-20" />
                                            <SplineDoubleKeyFrame KeyTime="0:0:1.2" Value="68" />
                                            <SplineDoubleKeyFrame
                                                KeySpline="0.57,0.17,0.95,0.75"
                                                KeyTime="0:0:1.617"
                                                Value="180" />
                                            <SplineDoubleKeyFrame
                                                KeySpline="0,0.19,0.07,0.72"
                                                KeyTime="0:0:2.017"
                                                Value="334" />
                                            <SplineDoubleKeyFrame KeyTime="0:0:2.783" Value="414" />
                                            <SplineDoubleKeyFrame
                                                KeySpline="0,0,0.95,0.37"
                                                KeyTime="0:0:3.217"
                                                Value="560" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ProgressBarTrack" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RadBusyIndicatorStyle" TargetType="telerik1:RadBusyIndicator">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="DisplayAfter" Value="00:00:00.1" />
        <Setter Property="Background" Value="{telerik1:FluentResource ResourceKey=MainBrush}" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=MarkerBrush}" />
        <Setter Property="FontSize" Value="{telerik1:FluentResource ResourceKey=FontSize}" />
        <Setter Property="FontFamily" Value="{telerik1:FluentResource ResourceKey=FontFamily}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Padding" Value="6" />
        <Setter Property="ProgressBarStyle" Value="{StaticResource BusyIndicatorProgressBarStyle}" />
        <Setter Property="animation:AnimationManager.AnimationSelector">
            <Setter.Value>
                <animation:AnimationSelector>
                    <animation:FadeAnimation
                        AnimationName="Hide"
                        Direction="Out"
                        TargetElementName="Indicator" />
                    <animation:FadeAnimation
                        AnimationName="Show"
                        Direction="In"
                        TargetElementName="Indicator" />
                </animation:AnimationSelector>
            </Setter.Value>
        </Setter>
        <Setter Property="OverlayStyle">
            <Setter.Value>
                <Style TargetType="Rectangle">
                    <Setter Property="Fill" Value="{telerik1:FluentResource ResourceKey=IconBrush}" />
                    <Setter Property="Opacity" Value="0.05" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadBusyIndicator">
                    <Grid>
                        <ContentControl
                            x:Name="Content"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            Foreground="{TemplateBinding Foreground}"
                            IsEnabled="False"
                            IsTabStop="False" />
                        <Rectangle x:Name="Overlay" Style="{TemplateBinding OverlayStyle}" />
                        <Grid
                            x:Name="Indicator"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <telerik1:RadProgressBar
                                x:Name="ProgressBar"
                                Grid.Row="0"
                                IsIndeterminate="{TemplateBinding IsIndeterminate}"
                                Style="{TemplateBinding ProgressBarStyle}"
                                Value="{TemplateBinding ProgressValue}" />
                            <ContentPresenter
                                Grid.Row="1"
                                HorizontalAlignment="Center"
                                Content="{TemplateBinding BusyContent}"
                                ContentTemplate="{TemplateBinding BusyContentTemplate}" />
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="VisibilityStates">
                                <VisualState x:Name="Hidden">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            BeginTime="00:00:00"
                                            Storyboard.TargetName="Indicator"
                                            Storyboard.TargetProperty="(UIElement.Visibility)"
                                            Duration="00:00:00.001">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
                                            BeginTime="00:00:00"
                                            Storyboard.TargetName="Overlay"
                                            Storyboard.TargetProperty="(UIElement.Visibility)"
                                            Duration="00:00:00.001">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Visible">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            BeginTime="00:00:00"
                                            Storyboard.TargetName="Indicator"
                                            Storyboard.TargetProperty="(UIElement.Visibility)"
                                            Duration="00:00:00.001">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
                                            BeginTime="00:00:00"
                                            Storyboard.TargetName="Overlay"
                                            Storyboard.TargetProperty="(UIElement.Visibility)"
                                            Duration="00:00:00.001">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="BusyStatusStates">
                                <VisualState x:Name="Idle">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            BeginTime="00:00:00"
                                            Storyboard.TargetName="Content"
                                            Storyboard.TargetProperty="(Control.IsEnabled)"
                                            Duration="00:00:00.001">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Boolean>True</sys:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
                                            BeginTime="00:00:00"
                                            Storyboard.TargetName="ProgressBar"
                                            Storyboard.TargetProperty="(UIElement.Visibility)"
                                            Duration="00:00:00.001">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
                                            BeginTime="00:00:00"
                                            Storyboard.TargetName="ProgressBar"
                                            Storyboard.TargetProperty="IsIndeterminate"
                                            Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Boolean>False</sys:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Busy">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            BeginTime="00:00:00"
                                            Storyboard.TargetName="Content"
                                            Storyboard.TargetProperty="(Control.IsEnabled)"
                                            Duration="00:00:00.001">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Boolean>False</sys:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource RadBusyIndicatorStyle}" TargetType="telerik1:RadBusyIndicator" />
    <Style x:Key="ExpanderHeaderButtonStyle" TargetType="telerik1:RadToggleButton">
        <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:FluentResource ResourceKey=MouseOverBrush}" />
        <Setter Property="mat:MaterialAssist.PressedBrush" Value="{telerik1:FluentResource ResourceKey=PressedBrush}" />
        <Setter Property="mat:MaterialAssist.FocusBrush" Value="{telerik1:FluentResource ResourceKey=AccentFocusedBrush}" />
        <Setter Property="Background" Value="{telerik1:FluentResource ResourceKey=PrimaryBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:FluentResource ResourceKey=BasicBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="TabIndex" Value="{Binding TabIndex, RelativeSource={RelativeSource AncestorType=telerik1:RadExpander}}" />
        <Setter Property="HorizontalAlignment" Value="{Binding HorizontalAlignment, RelativeSource={RelativeSource AncestorType=telerik1:RadExpander}}" />
        <Setter Property="VerticalAlignment" Value="{Binding VerticalAlignment, RelativeSource={RelativeSource AncestorType=telerik1:RadExpander}}" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalHeaderAlignment, RelativeSource={RelativeSource AncestorType=telerik1:RadExpander}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalHeaderAlignment, RelativeSource={RelativeSource AncestorType=telerik1:RadExpander}}" />
        <Setter Property="FontSize" Value="{Binding FontSize, RelativeSource={RelativeSource AncestorType=telerik1:RadExpander}}" />
        <Setter Property="FontStyle" Value="{Binding FontStyle, RelativeSource={RelativeSource AncestorType=telerik1:RadExpander}}" />
        <Setter Property="FontWeight" Value="{Binding FontWeight, RelativeSource={RelativeSource AncestorType=telerik1:RadExpander}}" />
        <Setter Property="FontFamily" Value="{Binding FontFamily, RelativeSource={RelativeSource AncestorType=telerik1:RadExpander}}" />
        <Setter Property="FontStretch" Value="{Binding FontStretch, RelativeSource={RelativeSource AncestorType=telerik1:RadExpander}}" />
        <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType=telerik1:RadExpander}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadToggleButton">
                    <Grid
                        x:Name="HeaderPanel"
                        Margin="{TemplateBinding Padding}"
                        Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid>
                            <Ellipse
                                x:Name="BorderVisual"
                                Width="28"
                                Height="28"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Fill="{TemplateBinding Background}"
                                Stroke="{TemplateBinding BorderBrush}"
                                StrokeThickness="1" />
                            <mat:FluentControl
                                Width="28"
                                Height="28"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                HorizontalContentAlignment="Stretch"
                                VerticalContentAlignment="Stretch"
                                CornerRadius="14"
                                IsSmartClipped="True">
                                <telerik1:RadGlyph
                                    x:Name="chevron"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Foreground="{telerik1:FluentResource ResourceKey=IconBrush}"
                                    Glyph="{StaticResource GlyphArrowChevronDown}"
                                    RenderTransformOrigin="0.5 0.5">
                                    <telerik1:RadGlyph.RenderTransform>
                                        <RotateTransform Angle="{Binding ExpandDirection, RelativeSource={RelativeSource AncestorType=telerik1:RadExpander}, Converter={StaticResource ExpandDirectionToRotationAngleConverter}}" />
                                    </telerik1:RadGlyph.RenderTransform>
                                </telerik1:RadGlyph>
                            </mat:FluentControl>
                        </Grid>
                        <ContentPresenter
                            x:Name="HeaderContent"
                            Grid.Column="1"
                            Margin="5,0"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}"
                            ContentStringFormat="{TemplateBinding ContentStringFormat}"
                            ContentTemplate="{TemplateBinding ContentTemplate}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="BorderVisual" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.FocusBrush), Mode=OneWay}" />
                            <Setter TargetName="BorderVisual" Property="Stroke" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.FocusBrush), Mode=OneWay}" />
                            <Setter TargetName="chevron" Property="Foreground" Value="{telerik1:FluentResource ResourceKey=MarkerInvertedBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="chevron" Property="Foreground" Value="{telerik1:FluentResource ResourceKey=IconBrush}" />
                            <Setter TargetName="BorderVisual" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}" />
                            <Setter TargetName="BorderVisual" Property="Stroke" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="chevron" Property="Foreground" Value="{telerik1:FluentResource ResourceKey=IconBrush}" />
                            <Setter TargetName="BorderVisual" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.PressedBrush), Mode=OneWay}" />
                            <Setter TargetName="BorderVisual" Property="Stroke" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.PressedBrush), Mode=OneWay}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="chevron" Property="Glyph" Value="{StaticResource GlyphArrowChevronUp}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="chevron" Property="Opacity" Value="{telerik1:FluentResource ResourceKey=DisabledOpacity}" />
                            <Setter Property="Background" Value="{telerik1:FluentResource ResourceKey=AlternativeBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="ExpanderTemplate" TargetType="telerik1:RadExpander">
        <Grid HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
            <Border
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition x:Name="row0" Height="Auto" />
                        <RowDefinition x:Name="row1" Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition x:Name="col0" Width="Auto" />
                        <ColumnDefinition x:Name="col1" Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <telerikPrimitives:LayoutTransformControl x:Name="HeaderContentTransform" RenderTransformOrigin="0.5 0.5">
                        <telerik1:RadToggleButton
                            x:Name="HeaderButton"
                            ClickMode="{TemplateBinding ClickMode}"
                            Content="{TemplateBinding Header}"
                            ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                            ContentTemplate="{TemplateBinding HeaderTemplate}"
                            IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                            Style="{TemplateBinding HeaderButtonStyle}" />
                    </telerikPrimitives:LayoutTransformControl>
                    <ContentPresenter
                        x:Name="Content"
                        Margin="{TemplateBinding Padding}"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        Content="{TemplateBinding Content}"
                        ContentTemplate="{TemplateBinding ContentTemplate}"
                        ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                        UseLayoutRounding="True"
                        Visibility="Collapsed" />
                </Grid>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ResultOrientation" Value="Vertical">
                <Setter TargetName="HeaderContentTransform" Property="LayoutTransform">
                    <Setter.Value>
                        <RotateTransform Angle="90" />
                    </Setter.Value>
                </Setter>
                <Setter TargetName="HeaderContentTransform" Property="Grid.Row" Value="1" />
            </Trigger>
            <Trigger Property="ResultOrientation" Value="Horizontal">
                <Setter TargetName="HeaderContentTransform" Property="LayoutTransform">
                    <Setter.Value>
                        <RotateTransform Angle="0" />
                    </Setter.Value>
                </Setter>
                <Setter TargetName="HeaderContentTransform" Property="Grid.Column" Value="1" />
            </Trigger>
            <Trigger Property="ExpandDirection" Value="Down">
                <Setter TargetName="col0" Property="Width" Value="*" />
                <Setter TargetName="row1" Property="Height" Value="*" />
                <Setter TargetName="Content" Property="Grid.Row" Value="1" />
                <Setter TargetName="Content" Property="Grid.Column" Value="0" />
                <Setter TargetName="HeaderContentTransform" Property="Grid.Row" Value="0" />
                <Setter TargetName="HeaderContentTransform" Property="Grid.Column" Value="0" />
            </Trigger>
            <Trigger Property="ExpandDirection" Value="Up">
                <Setter TargetName="col0" Property="Width" Value="*" />
                <Setter TargetName="row0" Property="Height" Value="*" />
                <Setter TargetName="Content" Property="Grid.Row" Value="0" />
                <Setter TargetName="Content" Property="Grid.Column" Value="0" />
                <Setter TargetName="HeaderContentTransform" Property="Grid.Row" Value="1" />
                <Setter TargetName="HeaderContentTransform" Property="Grid.Column" Value="0" />
            </Trigger>
            <Trigger Property="ExpandDirection" Value="Right">
                <Setter TargetName="col1" Property="Width" Value="*" />
                <Setter TargetName="row0" Property="Height" Value="*" />
                <Setter TargetName="Content" Property="Grid.Column" Value="1" />
                <Setter TargetName="Content" Property="Grid.Row" Value="0" />
                <Setter TargetName="HeaderContentTransform" Property="Grid.Row" Value="0" />
                <Setter TargetName="HeaderContentTransform" Property="Grid.Column" Value="0" />
            </Trigger>
            <Trigger Property="ExpandDirection" Value="Left">
                <Setter TargetName="col0" Property="Width" Value="*" />
                <Setter TargetName="row0" Property="Height" Value="*" />
                <Setter TargetName="HeaderContentTransform" Property="Grid.Column" Value="1" />
                <Setter TargetName="HeaderContentTransform" Property="Grid.Row" Value="0" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="RadExpanderStyle" TargetType="telerik1:RadExpander">
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="mat:MaterialAssist.CornerRadius" Value="{telerik1:FluentResource ResourceKey=CornerRadius}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="HorizontalHeaderAlignment" Value="Stretch" />
        <Setter Property="VerticalHeaderAlignment" Value="Center" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="FontFamily" Value="{telerik1:FluentResource ResourceKey=FontFamily}" />
        <Setter Property="FontSize" Value="{telerik1:FluentResource ResourceKey=FontSize}" />
        <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=MarkerBrush}" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="HeaderButtonStyle" Value="{StaticResource ExpanderHeaderButtonStyle}" />
        <Setter Property="Template" Value="{StaticResource ExpanderTemplate}" />
        <Setter Property="animation:AnimationManager.AnimationSelector">
            <Setter.Value>
                <animation:AnimationSelector>
                    <animation:ExpanderExpandCollapseAnimation
                        AnimationName="Expand"
                        Direction="In"
                        TargetElementName="Content" />
                    <animation:ExpanderExpandCollapseAnimation
                        AnimationName="Collapse"
                        Direction="Out"
                        TargetElementName="Content" />
                    <animation:ExpanderExpandCollapseAnimation
                        AnimationName="ExpandHorizontal"
                        Direction="In"
                        TargetElementName="Content" />
                    <animation:ExpanderExpandCollapseAnimation
                        AnimationName="CollapseHorizontal"
                        Direction="Out"
                        TargetElementName="Content" />
                </animation:AnimationSelector>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource RadExpanderStyle}" TargetType="telerik1:RadExpander" />
    <Style x:Key="RadProgressBarStyle" TargetType="telerik1:RadProgressBar">
        <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=AccentBrush}" />
        <Setter Property="Background" Value="{telerik1:FluentResource ResourceKey=ComplementaryBrush}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Maximum" Value="100" />
        <Setter Property="MinHeight" Value="4" />
        <Setter Property="Orientation" Value="Horizontal" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadProgressBar">
                    <Grid>
                        <telerikPrimitives:LayoutTransformControl x:Name="transformationRoot">
                            <Grid x:Name="Root">
                                <Border
                                    x:Name="ProgressBarTrack"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}" />
                                <Grid x:Name="ProgressBarRootGrid">
                                    <Grid x:Name="IndeterminateRoot" Width="180">
                                        <Ellipse
                                            x:Name="ellipse4"
                                            Width="8"
                                            Height="8"
                                            HorizontalAlignment="Left"
                                            Fill="{telerik1:FluentResource ResourceKey=AccentBrush}"
                                            RenderTransformOrigin="0.5,0.5"
                                            Visibility="Collapsed">
                                            <Ellipse.RenderTransform>
                                                <TransformGroup>
                                                    <TranslateTransform />
                                                </TransformGroup>
                                            </Ellipse.RenderTransform>
                                        </Ellipse>
                                        <Ellipse
                                            x:Name="ellipse3"
                                            Width="8"
                                            Height="8"
                                            HorizontalAlignment="Left"
                                            Fill="{telerik1:FluentResource ResourceKey=AccentBrush}"
                                            RenderTransformOrigin="0.5,0.5"
                                            Visibility="Collapsed">
                                            <Ellipse.RenderTransform>
                                                <TransformGroup>
                                                    <TranslateTransform />
                                                </TransformGroup>
                                            </Ellipse.RenderTransform>
                                        </Ellipse>
                                        <Ellipse
                                            x:Name="ellipse2"
                                            Width="8"
                                            Height="8"
                                            HorizontalAlignment="Left"
                                            Fill="{telerik1:FluentResource ResourceKey=AccentBrush}"
                                            RenderTransformOrigin="0.5,0.5"
                                            Visibility="Collapsed">
                                            <Ellipse.RenderTransform>
                                                <TransformGroup>
                                                    <TranslateTransform />
                                                </TransformGroup>
                                            </Ellipse.RenderTransform>
                                        </Ellipse>
                                        <Ellipse
                                            x:Name="ellipse1"
                                            Width="8"
                                            Height="8"
                                            HorizontalAlignment="Left"
                                            Fill="{telerik1:FluentResource ResourceKey=AccentBrush}"
                                            RenderTransformOrigin="0.5,0.5"
                                            Visibility="Collapsed">
                                            <Ellipse.RenderTransform>
                                                <TransformGroup>
                                                    <TranslateTransform />
                                                </TransformGroup>
                                            </Ellipse.RenderTransform>
                                        </Ellipse>
                                    </Grid>
                                    <Grid x:Name="DeterminateRoot" SnapsToDevicePixels="True">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Rectangle
                                            x:Name="SkipValueSpacer"
                                            Width="0"
                                            Height="1"
                                            Fill="Transparent" />
                                        <Rectangle
                                            x:Name="ProgressBarIndicator"
                                            Grid.Column="1"
                                            Margin="{TemplateBinding BorderThickness}"
                                            HorizontalAlignment="Left"
                                            Fill="{TemplateBinding Foreground}" />
                                    </Grid>
                                </Grid>
                            </Grid>
                        </telerikPrimitives:LayoutTransformControl>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="OrientationStates">
                                <VisualState x:Name="Horizontal">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="transformationRoot"
                                            Storyboard.TargetProperty="(telerikPrimitives:LayoutTransformControl.LayoutTransform)"
                                            Duration="00:00:00">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <RotateTransform Angle="0" />
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Vertical">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="transformationRoot"
                                            Storyboard.TargetProperty="(telerikPrimitives:LayoutTransformControl.LayoutTransform)"
                                            Duration="00:00:00">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <RotateTransform Angle="-90" />
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate" />
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard AutoReverse="True" RepeatBehavior="Forever">
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="IndeterminateRoot"
                                            Storyboard.TargetProperty="(UIElement.Visibility)"
                                            Duration="00:00:00">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="DeterminateRoot"
                                            Storyboard.TargetProperty="(UIElement.Visibility)"
                                            Duration="00:00:00">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ellipse1" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ellipse2" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ellipse3" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ellipse4" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ProgressBarTrack" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ellipse4" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <BackEase Amplitude="2" EasingMode="EaseIn" />
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="100" />
                                            <EasingDoubleKeyFrame KeyTime="0:0:1" Value="102">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <BackEase Amplitude="2" EasingMode="EaseIn" />
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.6" Value="174" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ellipse4" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <BackEase Amplitude="2" EasingMode="EaseIn" />
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1" />
                                            <EasingDoubleKeyFrame KeyTime="0:0:1" Value="1">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <BackEase Amplitude="2" EasingMode="EaseIn" />
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.6" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ellipse3" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <BackEase Amplitude="2" EasingMode="EaseIn" />
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.7" Value="1" />
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="1">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <BackEase Amplitude="2" EasingMode="EaseIn" />
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.8" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ellipse2" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <BackEase Amplitude="2" EasingMode="EaseIn" />
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.9" Value="1" />
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.4" Value="1">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <BackEase Amplitude="2" EasingMode="EaseIn" />
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ellipse1" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <BackEase Amplitude="2" EasingMode="EaseIn" />
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.1" Value="1" />
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.6" Value="1">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <BackEase Amplitude="2" EasingMode="EaseIn" />
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2.2" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ellipse3" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <BackEase Amplitude="2" EasingMode="EaseIn" />
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.7" Value="90" />
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="92">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <BackEase Amplitude="2" EasingMode="EaseIn" />
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.8" Value="174" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ellipse2" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <BackEase Amplitude="2" EasingMode="EaseIn" />
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.9" Value="80" />
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.4" Value="82">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <BackEase Amplitude="2" EasingMode="EaseIn" />
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2" Value="174" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ellipse1" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <BackEase Amplitude="2" EasingMode="EaseIn" />
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.1" Value="70" />
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.6" Value="72">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <BackEase Amplitude="2" EasingMode="EaseIn" />
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2.2" Value="174" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource RadProgressBarStyle}" TargetType="telerik1:RadProgressBar" />
    <Style x:Key="RadTransitionControlStyle" TargetType="telerik1:RadTransitionControl">
        <Setter Property="ClipToBounds" Value="true" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Transition">
            <Setter.Value>
                <telerikTransitions:WaveTransition
                    Amplitude="0.02"
                    Angle="0.3"
                    Fade="0.5" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadTransitionControl">
                    <Grid>
                        <telerikTransitonControl:LayoutAnimationPanel x:Name="PART_RootElement">
                            <Border
                                telerikTransitonControl:LayoutAnimationPanel.HeightWeight="0"
                                telerikTransitonControl:LayoutAnimationPanel.WidthWeight="0"
                                BorderBrush="#01000000"
                                BorderThickness="1" />
                            <Rectangle
                                x:Name="OldContentPresenter"
                                Width="{Binding OldVisualWidth, ElementName=PART_ContentPresenter}"
                                Height="{Binding OldVisualHeight, ElementName=PART_ContentPresenter}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                telerikTransitonControl:LayoutAnimationPanel.HeightWeight="0"
                                telerikTransitonControl:LayoutAnimationPanel.WidthWeight="0"
                                Fill="{Binding OldVisualBrush, ElementName=PART_ContentPresenter}"
                                IsHitTestVisible="False"
                                Opacity="0" />
                            <telerikTransitonControl:TransitionPresenter
                                x:Name="PART_ContentPresenter"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                telerikTransitonControl:LayoutAnimationPanel.HeightWeight="1"
                                telerikTransitonControl:LayoutAnimationPanel.WidthWeight="1"
                                CurrentContent="{TemplateBinding Content}"
                                CurrentContentTemplate="{TemplateBinding ContentTemplate}"
                                Cursor="{TemplateBinding Cursor}"
                                Easing="{TemplateBinding Easing}"
                                Host="{Binding ElementName=PART_RootElement}"
                                OldContentPresenter="{Binding ElementName=OldContentPresenter}"
                                Transition="{TemplateBinding Transition}"
                                Duration="{TemplateBinding Duration}" />
                        </telerikTransitonControl:LayoutAnimationPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource RadTransitionControlStyle}" TargetType="telerik1:RadTransitionControl" />
    <Style x:Key="LayoutTransformControlStyle" TargetType="telerikPrimitives:LayoutTransformControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerikPrimitives:LayoutTransformControl">
                    <Grid x:Name="RootVisual" Background="{TemplateBinding Background}">
                        <ContentPresenter
                            x:Name="ContentPresenter"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource LayoutTransformControlStyle}" TargetType="telerikPrimitives:LayoutTransformControl" />
    <Style
        x:Key="HandleBaseStyle"
        BasedOn="{StaticResource RepeatButtonStyle}"
        TargetType="RepeatButton">
        <Setter Property="TextOptions.TextRenderingMode" Value="ClearType" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="IsTabStop" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=IconBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="UseLayoutRounding" Value="False" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Width" Value="16" />
        <Setter Property="Height" Value="16" />
        <Setter Property="Padding" Value="0" />
    </Style>
    <Style
        x:Key="IncreaseHandleStyle"
        BasedOn="{StaticResource HandleBaseStyle}"
        TargetType="RepeatButton">
        <Setter Property="Margin" Value="4,0,0,0" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <telerik1:RadGlyph Glyph="{StaticResource GlyphArrowChevronRight}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="DecreaseHandleStyle"
        BasedOn="{StaticResource HandleBaseStyle}"
        TargetType="RepeatButton">
        <Setter Property="Margin" Value="0,0,4,0" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <telerik1:RadGlyph Glyph="{StaticResource GlyphArrowChevronLeft}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ThumbStyle" TargetType="Thumb">
        <Setter Property="IsTabStop" Value="True" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="mat:MaterialAssist.CornerRadius" Value="4" />
        <Setter Property="Width" Value="8" />
        <Setter Property="Height" Value="18" />
        <Setter Property="Background" Value="{telerik1:FluentResource ResourceKey=AccentBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:FluentResource ResourceKey=AccentBrush}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Focusable" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Border
                        x:Name="BorderVisual"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="BorderVisual" Property="BorderBrush" Value="{telerik1:FluentResource ResourceKey=AccentFocusedBrush}" />
                            <Setter TargetName="BorderVisual" Property="Background" Value="{telerik1:FluentResource ResourceKey=AccentFocusedBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BorderVisual" Property="BorderBrush" Value="{telerik1:FluentResource ResourceKey=AccentMouseOverBrush}" />
                            <Setter TargetName="BorderVisual" Property="Background" Value="{telerik1:FluentResource ResourceKey=AccentMouseOverBrush}" />
                        </Trigger>
                        <Trigger Property="IsDragging" Value="True">
                            <Setter TargetName="BorderVisual" Property="BorderBrush" Value="{telerik1:FluentResource ResourceKey=AccentPressedBrush}" />
                            <Setter TargetName="BorderVisual" Property="Background" Value="{telerik1:FluentResource ResourceKey=AccentPressedBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="BorderVisual" Property="BorderBrush" Value="{telerik1:FluentResource ResourceKey=ComplementaryBrush}" />
                            <Setter TargetName="BorderVisual" Property="Background" Value="{telerik1:FluentResource ResourceKey=ComplementaryBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SelectionMiddleThumbStyle" TargetType="Thumb">
        <Setter Property="Height" Value="2" />
        <Setter Property="Background" Value="{telerik1:FluentResource ResourceKey=AccentBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="{telerik1:FluentResource ResourceKey=AccentBrush}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="IsTabStop" Value="True" />
        <Setter Property="Focusable" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Grid>
                        <Border
                            x:Name="BorderVisual"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="BorderVisual" Property="BorderBrush" Value="{telerik1:FluentResource ResourceKey=AccentFocusedBrush}" />
                            <Setter TargetName="BorderVisual" Property="Background" Value="{telerik1:FluentResource ResourceKey=AccentFocusedBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BorderVisual" Property="BorderBrush" Value="{telerik1:FluentResource ResourceKey=AccentMouseOverBrush}" />
                            <Setter TargetName="BorderVisual" Property="Background" Value="{telerik1:FluentResource ResourceKey=AccentMouseOverBrush}" />
                        </Trigger>
                        <Trigger Property="IsDragging" Value="True">
                            <Setter TargetName="BorderVisual" Property="BorderBrush" Value="{telerik1:FluentResource ResourceKey=AccentPressedBrush}" />
                            <Setter TargetName="BorderVisual" Property="Background" Value="{telerik1:FluentResource ResourceKey=AccentPressedBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="BorderVisual" Property="BorderBrush" Value="{telerik1:FluentResource ResourceKey=ComplementaryBrush}" />
                            <Setter TargetName="BorderVisual" Property="Background" Value="{telerik1:FluentResource ResourceKey=ComplementaryBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <DataTemplate x:Key="DefaultTicksTemplate">
        <Rectangle
            Width="1"
            Height="3"
            Fill="{telerik1:FluentResource ResourceKey=IconBrush}"
            ToolTipService.ToolTip="{Binding}" />
    </DataTemplate>
    <Style x:Key="RadTickBarStyle" TargetType="telerik1:RadTickBar">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <telerik1:TickBarPanel Background="Transparent" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TrackStyle" TargetType="ContentControl">
        <Setter Property="Height" Value="2" />
        <Setter Property="IsTabStop" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="LargeHandleStyle" TargetType="RepeatButton">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Grid Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <DataTemplate x:Key="DefaultAutoToolTipContentTemplate">
        <TextBlock
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Text="{Binding ., StringFormat=F2}" />
    </DataTemplate>
    <Style x:Key="RadSliderStyle" TargetType="telerik1:RadSlider">
        <Setter Property="FontFamily" Value="{telerik1:FluentResource ResourceKey=FontFamily}" />
        <Setter Property="FontSize" Value="{telerik1:FluentResource ResourceKey=FontSize}" />
        <Setter Property="Background" Value="{telerik1:FluentResource ResourceKey=PressedBrush}" />
        <Setter Property="TickTemplate" Value="{StaticResource DefaultTicksTemplate}" />
        <Setter Property="ThumbStyle" Value="{StaticResource ThumbStyle}" />
        <Setter Property="AlternateThumbStyle" Value="{StaticResource ThumbStyle}" />
        <Setter Property="SelectionMiddleThumbStyle" Value="{StaticResource SelectionMiddleThumbStyle}" />
        <Setter Property="TickBarStyle" Value="{StaticResource RadTickBarStyle}" />
        <Setter Property="TrackStyle" Value="{StaticResource TrackStyle}" />
        <Setter Property="IncreaseHandleStyle" Value="{StaticResource IncreaseHandleStyle}" />
        <Setter Property="DecreaseHandleStyle" Value="{StaticResource DecreaseHandleStyle}" />
        <Setter Property="AutoToolTipContentTemplate" Value="{StaticResource DefaultAutoToolTipContentTemplate}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadSlider">
                    <telerikPrimitives:LayoutTransformControl x:Name="layoutControl" RenderTransformOrigin=".5 0">
                        <telerikPrimitives:LayoutTransformControl.LayoutTransform>
                            <TransformGroup>
                                <ScaleTransform />
                                <SkewTransform />
                                <RotateTransform />
                                <TranslateTransform />
                            </TransformGroup>
                        </telerikPrimitives:LayoutTransformControl.LayoutTransform>
                        <Grid UseLayoutRounding="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <telerik1:RadTickBar
                                x:Name="TopTickBar"
                                Grid.Column="1"
                                Grid.ColumnSpan="3"
                                IsDirectionReversed="{TemplateBinding IsDirectionReversed}"
                                ItemTemplate="{TemplateBinding TickTemplate}"
                                ItemTemplateSelector="{TemplateBinding TickTemplateSelector}"
                                ItemsSource="{TemplateBinding ResultTicks}"
                                Maximum="{TemplateBinding Maximum}"
                                Minimum="{TemplateBinding Minimum}"
                                RenderTransformOrigin="0.5,0.5"
                                Style="{TemplateBinding TickBarStyle}">
                                <telerik1:RadTickBar.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform />
                                        <SkewTransform />
                                        <RotateTransform />
                                        <TranslateTransform />
                                    </TransformGroup>
                                </telerik1:RadTickBar.RenderTransform>
                            </telerik1:RadTickBar>
                            <ContentControl
                                x:Name="Track"
                                Grid.Row="1"
                                Grid.Column="1"
                                Grid.ColumnSpan="3"
                                VerticalAlignment="Center"
                                Background="{TemplateBinding Background}"
                                Style="{TemplateBinding TrackStyle}" />
                            <RepeatButton
                                x:Name="DecreaseButton"
                                Grid.Row="1"
                                Delay="{TemplateBinding Delay}"
                                Interval="{TemplateBinding RepeatInterval}"
                                Style="{TemplateBinding DecreaseHandleStyle}"
                                Visibility="{TemplateBinding HandlesVisibility}" />
                            <RepeatButton
                                x:Name="LargeDecreaseButton"
                                Grid.Row="1"
                                Grid.Column="1"
                                Delay="{TemplateBinding Delay}"
                                Interval="{TemplateBinding RepeatInterval}"
                                Style="{StaticResource LargeHandleStyle}" />
                            <Grid
                                Grid.Row="1"
                                Grid.Column="2"
                                VerticalAlignment="Center">
                                <Thumb
                                    x:Name="SingleThumbHost"
                                    Style="{TemplateBinding ThumbStyle}"
                                    Visibility="{TemplateBinding ThumbVisibility}" />
                                <StackPanel
                                    x:Name="RangeThumbsPanel"
                                    Orientation="Horizontal"
                                    Visibility="Collapsed">
                                    <Thumb
                                        x:Name="RangeStartThumb"
                                        Style="{TemplateBinding ThumbStyle}"
                                        Visibility="{TemplateBinding ThumbVisibility}" />
                                    <Thumb x:Name="RangeMiddleThumb" Style="{TemplateBinding SelectionMiddleThumbStyle}" />
                                    <Thumb
                                        x:Name="RangeEndThumb"
                                        Style="{TemplateBinding AlternateThumbStyle}"
                                        Visibility="{TemplateBinding ThumbVisibility}" />
                                </StackPanel>
                            </Grid>
                            <RepeatButton
                                x:Name="LargeIncreaseButton"
                                Grid.Row="1"
                                Grid.Column="3"
                                Delay="{TemplateBinding Delay}"
                                Interval="{TemplateBinding RepeatInterval}"
                                Style="{StaticResource LargeHandleStyle}" />
                            <RepeatButton
                                x:Name="IncreaseButton"
                                Grid.Row="1"
                                Grid.Column="4"
                                Delay="{TemplateBinding Delay}"
                                Interval="{TemplateBinding RepeatInterval}"
                                RenderTransformOrigin="0.5,0.5"
                                Style="{TemplateBinding IncreaseHandleStyle}"
                                Visibility="{TemplateBinding HandlesVisibility}" />
                            <telerik1:RadTickBar
                                x:Name="BottomTickBar"
                                Grid.Row="2"
                                Grid.Column="1"
                                Grid.ColumnSpan="3"
                                IsDirectionReversed="{TemplateBinding IsDirectionReversed}"
                                ItemTemplate="{TemplateBinding TickTemplate}"
                                ItemTemplateSelector="{TemplateBinding TickTemplateSelector}"
                                ItemsSource="{TemplateBinding ResultTicks}"
                                Maximum="{TemplateBinding Maximum}"
                                Minimum="{TemplateBinding Minimum}"
                                RenderTransformOrigin="0.5,0.5"
                                Style="{TemplateBinding TickBarStyle}">
                                <telerik1:RadTickBar.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform />
                                        <SkewTransform />
                                        <RotateTransform />
                                        <TranslateTransform />
                                    </TransformGroup>
                                </telerik1:RadTickBar.RenderTransform>
                            </telerik1:RadTickBar>
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="OrientationStates">
                                <VisualState x:Name="Horizontal">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="layoutControl" Storyboard.TargetProperty="LayoutTransform">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <RotateTransform Angle="0" />
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Vertical">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="layoutControl" Storyboard.TargetProperty="LayoutTransform">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <RotateTransform Angle="-90" />
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ReversedHorizontal">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="layoutControl" Storyboard.TargetProperty="LayoutTransform">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <ScaleTransform ScaleX="-1" />
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BottomTickBar" Storyboard.TargetProperty="RenderTransform">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <ScaleTransform ScaleX="-1" />
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TopTickBar" Storyboard.TargetProperty="RenderTransform">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <ScaleTransform ScaleX="-1" />
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ReversedVertical">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="layoutControl" Storyboard.TargetProperty="LayoutTransform">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <TransformGroup>
                                                        <ScaleTransform ScaleY="-1" />
                                                        <RotateTransform Angle="90" />
                                                    </TransformGroup>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BottomTickBar" Storyboard.TargetProperty="RenderTransform">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <TransformGroup>
                                                        <ScaleTransform ScaleY="-1" />
                                                        <RotateTransform Angle="-180" />
                                                    </TransformGroup>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TopTickBar" Storyboard.TargetProperty="RenderTransform">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <TransformGroup>
                                                        <ScaleTransform ScaleY="-1" />
                                                        <RotateTransform Angle="-180" />
                                                    </TransformGroup>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </telerikPrimitives:LayoutTransformControl>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelectionRangeEnabled" Value="True">
                            <Setter TargetName="SingleThumbHost" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="RangeThumbsPanel" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="TickPlacement" Value="None">
                            <Setter TargetName="TopTickBar" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="BottomTickBar" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="TickPlacement" Value="Both">
                            <Setter TargetName="TopTickBar" Property="Visibility" Value="Visible" />
                            <Setter TargetName="BottomTickBar" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="TickPlacement" Value="BottomRight">
                            <Setter TargetName="TopTickBar" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="BottomTickBar" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="TickPlacement" Value="TopLeft">
                            <Setter TargetName="TopTickBar" Property="Visibility" Value="Visible" />
                            <Setter TargetName="BottomTickBar" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource RadTickBarStyle}" TargetType="telerik1:RadTickBar" />
    <Style BasedOn="{StaticResource RadSliderStyle}" TargetType="telerik1:RadSlider" />
    <Style x:Key="RadButtonStyle" TargetType="telerik1:RadButton">
        <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:FluentResource ResourceKey=MouseOverBrush}" />
        <Setter Property="mat:MaterialAssist.PressedBrush" Value="{telerik1:FluentResource ResourceKey=PressedBrush}" />
        <Setter Property="mat:MaterialAssist.FocusBrush" Value="{telerik1:FluentResource ResourceKey=AccentFocusedBrush}" />
        <Setter Property="FontFamily" Value="{telerik1:FluentResource ResourceKey=FontFamily}" />
        <Setter Property="FontSize" Value="{telerik1:FluentResource ResourceKey=FontSize}" />
        <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=MarkerBrush}" />
        <Setter Property="Background" Value="{telerik1:FluentResource ResourceKey=MainBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:FluentResource ResourceKey=MainBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="CornerRadius" Value="{telerik1:FluentResource ResourceKey=CornerRadius}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadButton">
                    <Grid>
                        <Border
                            x:Name="BorderVisual"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Border
                            x:Name="FocusVisual"
                            BorderBrush="{TemplateBinding mat:MaterialAssist.FocusBrush}"
                            BorderThickness="{telerik1:FluentResource ResourceKey=FocusThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            IsHitTestVisible="False"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            Visibility="Collapsed" />
                        <mat:FluentControl
                            HorizontalContentAlignment="Stretch"
                            VerticalContentAlignment="Stretch"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <ContentPresenter
                                x:Name="Content"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Content}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                TextBlock.Foreground="{TemplateBinding Foreground}" />
                        </mat:FluentControl>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <!--  background is hidden  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsBackgroundVisible" Value="False" />
                                <Condition Property="IsEnabled" Value="True" />
                                <Condition Property="IsMouseOver" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                        </MultiTrigger>

                        <!--  General IsFocused setters  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True" />
                                <Condition Property="IsKeyboardFocused" Value="True" />
                                <Condition Property="IsPressed" Value="False" />
                                <Condition Property="IsMouseOver" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Visible" />
                        </MultiTrigger>

                        <!--  general setters for IsMouseOver  -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}" />
                            <Setter TargetName="BorderVisual" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}" />
                        </Trigger>

                        <!--  general setters for IsPressed  -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.PressedBrush), Mode=OneWay}" />
                            <Setter TargetName="BorderVisual" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.PressedBrush), Mode=OneWay}" />
                        </Trigger>

                        <!--  disabled  -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Content" Property="Opacity" Value="{telerik1:FluentResource ResourceKey=DisabledOpacity}" />
                            <Setter Property="Background" Value="{telerik1:FluentResource ResourceKey=AlternativeBrush}" />
                            <Setter Property="BorderBrush" Value="{telerik1:FluentResource ResourceKey=AlternativeBrush}" />
                        </Trigger>

                        <!--  disabled and focused  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                                <Condition Property="IsFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Collapsed" />
                        </MultiTrigger>

                        <!--  disabled & background is hidden  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                                <Condition Property="IsBackgroundVisible" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource RadButtonStyle}" TargetType="telerik1:RadButton" />
    <ControlTemplate x:Key="RadHyperlinkButtonControlTemplate" TargetType="telerik1:RadHyperlinkButton">
        <Border
            x:Name="PART_Background"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            CornerRadius="{TemplateBinding CornerRadius}">
            <TextBlock HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                <Hyperlink
                    x:Name="PART_Hyperlink"
                    Cursor="Hand"
                    FontFamily="{TemplateBinding FontFamily}"
                    FontSize="{TemplateBinding FontSize}"
                    Foreground="{TemplateBinding Foreground}"
                    NavigateUri="{TemplateBinding NavigateUri}"
                    TextDecorations="{x:Null}"
                    TargetName="{TemplateBinding TargetName}">
                    <ContentPresenter
                        x:Name="ContentPresenter"
                        Content="{TemplateBinding Content}"
                        ContentStringFormat="{TemplateBinding ContentStringFormat}"
                        ContentTemplate="{TemplateBinding ContentTemplate}"
                        ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
                </Hyperlink>
            </TextBlock>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger SourceName="PART_Hyperlink" Property="IsMouseOver" Value="True">
                <Setter TargetName="PART_Hyperlink" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}" />
                <Setter TargetName="PART_Hyperlink" Property="TextDecorations" Value="Underline" />
            </Trigger>
            <Trigger Property="IsVisited" Value="True">
                <Setter TargetName="PART_Hyperlink" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=VisitedForeground}" />
                <Setter TargetName="PART_Hyperlink" Property="TextDecorations" Value="Underline" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition SourceName="PART_Hyperlink" Property="IsMouseOver" Value="True" />
                    <Condition Property="IsVisited" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_Hyperlink" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}" />
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=MarkerBrush}" />
                <Setter TargetName="ContentPresenter" Property="Opacity" Value="{telerik1:FluentResource ResourceKey=DisabledOpacity}" />
            </Trigger>
            <Trigger Property="IsBackgroundVisible" Value="False">
                <Setter TargetName="PART_Background" Property="Background" Value="Transparent" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="RadHyperlinkButtonStyle" TargetType="telerik1:RadHyperlinkButton">
        <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{StaticResource RadHyperlinkButtonHoverBrush}" />
        <Setter Property="FontFamily" Value="{telerik1:FluentResource ResourceKey=FontFamily}" />
        <Setter Property="FontSize" Value="{telerik1:FluentResource ResourceKey=FontSize}" />
        <Setter Property="Foreground" Value="{StaticResource RadHyperlinkButtonNormalBrush}" />
        <Setter Property="VisitedForeground" Value="{StaticResource RadHyperlinkButtonVisitedBrush}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template" Value="{StaticResource RadHyperlinkButtonControlTemplate}" />
    </Style>
    <Style BasedOn="{StaticResource RadHyperlinkButtonStyle}" TargetType="telerik1:RadHyperlinkButton" />
    <Style x:Key="RadPathButtonPathStyle" TargetType="Path">
        <Setter Property="Fill" Value="{telerik1:FluentResource ResourceKey=IconBrush}" />
        <Setter Property="Stretch" Value="Fill" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
    </Style>
    <Style x:Key="RadPathButtonStyle" TargetType="telerik1:RadPathButton">
        <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:FluentResource ResourceKey=MouseOverBrush}" />
        <Setter Property="mat:MaterialAssist.PressedBrush" Value="{telerik1:FluentResource ResourceKey=PressedBrush}" />
        <Setter Property="mat:MaterialAssist.FocusBrush" Value="{telerik1:FluentResource ResourceKey=AccentFocusedBrush}" />
        <Setter Property="FontFamily" Value="{telerik1:FluentResource ResourceKey=FontFamily}" />
        <Setter Property="FontSize" Value="{telerik1:FluentResource ResourceKey=FontSize}" />
        <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=MarkerBrush}" />
        <Setter Property="Background" Value="{telerik1:FluentResource ResourceKey=MainBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:FluentResource ResourceKey=MainBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="CornerRadius" Value="{telerik1:FluentResource ResourceKey=CornerRadius}" />
        <Setter Property="PathStyle" Value="{StaticResource RadPathButtonPathStyle}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadPathButton">
                    <Grid>
                        <Border
                            x:Name="BorderVisual"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Border
                            x:Name="FocusVisual"
                            Background="{x:Null}"
                            BorderBrush="{TemplateBinding mat:MaterialAssist.FocusBrush}"
                            BorderThickness="{telerik1:FluentResource ResourceKey=FocusThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            IsHitTestVisible="False"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            Visibility="Collapsed" />
                        <mat:FluentControl
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            IsSmartClipped="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <Grid Margin="{TemplateBinding Padding}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Path
                                    x:Name="Path"
                                    Grid.Row="1"
                                    Grid.Column="1"
                                    Data="{TemplateBinding PathGeometry}"
                                    Style="{TemplateBinding PathStyle}" />
                                <Grid
                                    x:Name="ContentHost"
                                    Grid.Row="2"
                                    Grid.Column="1"
                                    Margin="0,5,0,0">
                                    <ContentPresenter
                                        x:Name="Content"
                                        Margin="{TemplateBinding ContentMargin}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Content="{TemplateBinding Content}"
                                        ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                        ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                        RecognizesAccessKey="True"
                                        TextBlock.Foreground="{TemplateBinding Foreground}" />
                                </Grid>
                            </Grid>
                        </mat:FluentControl>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <!--  background is hidden  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsBackgroundVisible" Value="False" />
                                <Condition Property="IsEnabled" Value="True" />
                                <Condition Property="IsMouseOver" Value="False" />
                                <Condition Property="IsFocused" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                        </MultiTrigger>

                        <!--  General setters for IsFocused  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True" />
                                <Condition Property="IsKeyboardFocused" Value="True" />
                                <Condition Property="IsPressed" Value="False" />
                                <Condition Property="IsMouseOver" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}" />
                            <Setter TargetName="BorderVisual" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.PressedBrush), Mode=OneWay}" />
                            <Setter TargetName="BorderVisual" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.PressedBrush), Mode=OneWay}" />
                        </Trigger>

                        <!--  disabled  -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{telerik1:FluentResource ResourceKey=AlternativeBrush}" />
                            <Setter Property="BorderBrush" Value="{telerik1:FluentResource ResourceKey=AlternativeBrush}" />
                            <Setter TargetName="Path" Property="Opacity" Value="{telerik1:FluentResource ResourceKey=DisabledOpacity}" />
                            <Setter TargetName="Content" Property="Opacity" Value="{telerik1:FluentResource ResourceKey=DisabledOpacity}" />
                        </Trigger>

                        <!--  disabled & background is hidden  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                                <Condition Property="IsBackgroundVisible" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                        </MultiTrigger>

                        <!--  content & content template are not preset  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Content" Value="{x:Null}" />
                                <Condition Property="ContentTemplate" Value="{x:Null}" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ContentHost" Property="Visibility" Value="Collapsed" />
                        </MultiTrigger>

                        <!--  content placement  -->
                        <Trigger Property="ContentPlacement" Value="Left">
                            <Setter TargetName="ContentHost" Property="Grid.Column" Value="0" />
                            <Setter TargetName="ContentHost" Property="Grid.Row" Value="1" />
                            <Setter TargetName="ContentHost" Property="Margin" Value="0,0,5,0" />
                        </Trigger>
                        <Trigger Property="ContentPlacement" Value="Right">
                            <Setter TargetName="ContentHost" Property="Grid.Column" Value="2" />
                            <Setter TargetName="ContentHost" Property="Grid.Row" Value="1" />
                            <Setter TargetName="ContentHost" Property="Margin" Value="5,0,0,0" />
                        </Trigger>
                        <Trigger Property="ContentPlacement" Value="Top">
                            <Setter TargetName="ContentHost" Property="Grid.Column" Value="1" />
                            <Setter TargetName="ContentHost" Property="Grid.Row" Value="0" />
                            <Setter TargetName="ContentHost" Property="Margin" Value="0,0,0,5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource RadPathButtonStyle}" TargetType="telerik1:RadPathButton" />
    <Style x:Key="RadToggleButtonStyle" TargetType="telerik1:RadToggleButton">
        <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:FluentResource ResourceKey=MouseOverBrush}" />
        <Setter Property="mat:MaterialAssist.PressedBrush" Value="{telerik1:FluentResource ResourceKey=PressedBrush}" />
        <Setter Property="mat:MaterialAssist.FocusBrush" Value="{telerik1:FluentResource ResourceKey=AccentFocusedBrush}" />
        <Setter Property="mat:MaterialAssist.CheckedBrush" Value="{telerik1:FluentResource ResourceKey=AccentBrush}" />
        <Setter Property="FontFamily" Value="{telerik1:FluentResource ResourceKey=FontFamily}" />
        <Setter Property="FontSize" Value="{telerik1:FluentResource ResourceKey=FontSize}" />
        <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=MarkerBrush}" />
        <Setter Property="Background" Value="{telerik1:FluentResource ResourceKey=MainBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:FluentResource ResourceKey=MainBrush}" />
        <Setter Property="CornerRadius" Value="{telerik1:FluentResource ResourceKey=CornerRadius}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadToggleButton">
                    <Grid>
                        <Border
                            x:Name="BorderVisual"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Border
                            x:Name="FocusVisual"
                            Background="{x:Null}"
                            BorderBrush="{TemplateBinding mat:MaterialAssist.FocusBrush}"
                            BorderThickness="{telerik1:FluentResource ResourceKey=FocusThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            IsHitTestVisible="False"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            Visibility="Collapsed" />
                        <mat:FluentControl
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            IsSmartClipped="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <ContentPresenter
                                x:Name="Content"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Content}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                RecognizesAccessKey="True" />
                        </mat:FluentControl>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <!--  background is hidden  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsBackgroundVisible" Value="False" />
                                <Condition Property="IsEnabled" Value="True" />
                                <Condition Property="IsMouseOver" Value="False" />
                                <Condition Property="IsChecked" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                        </MultiTrigger>

                        <!--  general setters for IsChecked  -->
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:FluentResource ResourceKey=AccentMouseOverBrush}" />
                            <Setter Property="mat:MaterialAssist.PressedBrush" Value="{telerik1:FluentResource ResourceKey=AccentPressedBrush}" />
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CheckedBrush), Mode=OneWay}" />
                            <Setter TargetName="BorderVisual" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CheckedBrush), Mode=OneWay}" />
                            <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=MarkerInvertedBrush}" />
                        </Trigger>

                        <!--  general setters for IsFocused  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused" Value="True" />
                                <Condition Property="IsMouseOver" Value="False" />
                                <Condition Property="IsPressed" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Visible" />
                        </MultiTrigger>

                        <!--  General setters for IsMouseOver  -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}" />
                            <Setter TargetName="BorderVisual" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}" />
                        </Trigger>

                        <!--  General setters for IsPressed  -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.PressedBrush), Mode=OneWay}" />
                            <Setter TargetName="BorderVisual" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.PressedBrush), Mode=OneWay}" />
                        </Trigger>

                        <!--  disabled  -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Content" Property="Opacity" Value="{telerik1:FluentResource ResourceKey=DisabledOpacity}" />
                            <Setter Property="Background" Value="{telerik1:FluentResource ResourceKey=AlternativeBrush}" />
                            <Setter Property="BorderBrush" Value="{telerik1:FluentResource ResourceKey=AlternativeBrush}" />
                        </Trigger>

                        <!--  disabled and focused  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                                <Condition Property="IsFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Collapsed" />
                        </MultiTrigger>

                        <!--  disabled & background is hidden  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                                <Condition Property="IsBackgroundVisible" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource RadToggleButtonStyle}" TargetType="telerik1:RadToggleButton" />
    <Style x:Key="RadRadioButtonStyle" TargetType="telerik1:RadRadioButton">
        <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:FluentResource ResourceKey=MouseOverBrush}" />
        <Setter Property="mat:MaterialAssist.PressedBrush" Value="{telerik1:FluentResource ResourceKey=PressedBrush}" />
        <Setter Property="mat:MaterialAssist.FocusBrush" Value="{telerik1:FluentResource ResourceKey=AccentFocusedBrush}" />
        <Setter Property="mat:MaterialAssist.CheckedBrush" Value="{telerik1:FluentResource ResourceKey=AccentBrush}" />
        <Setter Property="FontFamily" Value="{telerik1:FluentResource ResourceKey=FontFamily}" />
        <Setter Property="FontSize" Value="{telerik1:FluentResource ResourceKey=FontSize}" />
        <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=MarkerBrush}" />
        <Setter Property="Background" Value="{telerik1:FluentResource ResourceKey=MainBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:FluentResource ResourceKey=MainBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="CornerRadius" Value="{telerik1:FluentResource ResourceKey=CornerRadius}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadRadioButton">
                    <Grid>
                        <Border
                            x:Name="BorderVisual"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Border
                            x:Name="FocusVisual"
                            Background="{x:Null}"
                            BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.FocusBrush)}"
                            BorderThickness="{telerik1:FluentResource ResourceKey=FocusThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            IsHitTestVisible="False"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            Visibility="Collapsed" />
                        <mat:FluentControl
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            IsSmartClipped="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <ContentPresenter
                                x:Name="Content"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Content}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                RecognizesAccessKey="True" />
                        </mat:FluentControl>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <!--  background is hidden  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsBackgroundVisible" Value="False" />
                                <Condition Property="IsEnabled" Value="True" />
                                <Condition Property="IsMouseOver" Value="False" />
                                <Condition Property="IsChecked" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                        </MultiTrigger>

                        <!--  general setters for IsChecked  -->
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=MarkerInvertedBrush}" />
                            <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:FluentResource ResourceKey=AccentMouseOverBrush}" />
                            <Setter Property="mat:MaterialAssist.PressedBrush" Value="{telerik1:FluentResource ResourceKey=AccentPressedBrush}" />
                            <Setter TargetName="BorderVisual" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CheckedBrush), Mode=OneWay}" />
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CheckedBrush), Mode=OneWay}" />
                        </Trigger>

                        <!--  general setters for IsFocused  -->
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Visible" />
                        </Trigger>

                        <!--  General setters for IsMouseOver  -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BorderVisual" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}" />
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}" />
                        </Trigger>

                        <!--  General setters for IsPressed  -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BorderVisual" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.PressedBrush), Mode=OneWay}" />
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.PressedBrush), Mode=OneWay}" />
                        </Trigger>

                        <!--  disabled  -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{telerik1:FluentResource ResourceKey=AlternativeBrush}" />
                            <Setter Property="BorderBrush" Value="{telerik1:FluentResource ResourceKey=AlternativeBrush}" />
                            <Setter TargetName="Content" Property="Opacity" Value="{telerik1:FluentResource ResourceKey=DisabledOpacity}" />
                        </Trigger>

                        <!--  disabled and focused  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                                <Condition Property="IsFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Collapsed" />
                        </MultiTrigger>

                        <!--  disabled & checked  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                                <Condition Property="IsBackgroundVisible" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource RadRadioButtonStyle}" TargetType="telerik1:RadRadioButton" />
    <Style x:Key="RadDropDownButtonStyle" TargetType="telerik1:RadDropDownButton">
        <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:FluentResource ResourceKey=MouseOverBrush}" />
        <Setter Property="mat:MaterialAssist.PressedBrush" Value="{telerik1:FluentResource ResourceKey=PressedBrush}" />
        <Setter Property="mat:MaterialAssist.FocusBrush" Value="{telerik1:FluentResource ResourceKey=AccentFocusedBrush}" />
        <Setter Property="mat:MaterialAssist.CheckedBrush" Value="{telerik1:FluentResource ResourceKey=PressedBrush}" />
        <Setter Property="mat:MaterialAssist.ShadowDepth" Value="Depth1" />
        <Setter Property="FontFamily" Value="{telerik1:FluentResource ResourceKey=FontFamily}" />
        <Setter Property="FontSize" Value="{telerik1:FluentResource ResourceKey=FontSize}" />
        <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=MarkerBrush}" />
        <Setter Property="Background" Value="{telerik1:FluentResource ResourceKey=MainBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:FluentResource ResourceKey=MainBrush}" />
        <Setter Property="DropDownMinHeight" Value="3" />
        <Setter Property="DropDownMinWidth" Value="3" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="{telerik1:FluentResource ResourceKey=CornerRadius}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="IsOpen" Value="False" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadDropDownButton">
                    <Grid>
                        <Border
                            x:Name="BorderVisual"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Border
                            x:Name="FocusVisual"
                            Background="{x:Null}"
                            BorderBrush="{TemplateBinding mat:MaterialAssist.FocusBrush}"
                            BorderThickness="{telerik1:FluentResource ResourceKey=FocusThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            IsHitTestVisible="False"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            Visibility="Collapsed" />
                        <mat:FluentControl
                            VerticalAlignment="Stretch"
                            HorizontalContentAlignment="Stretch"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            IsSmartClipped="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <ContentPresenter
                                    x:Name="Content"
                                    Grid.Row="1"
                                    Grid.Column="1"
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{Binding RelativeSource={RelativeSource AncestorType={x:Type telerik1:RadDropDownButton}}, Path=HorizontalContentAlignment}"
                                    VerticalAlignment="{Binding RelativeSource={RelativeSource AncestorType={x:Type telerik1:RadDropDownButton}}, Path=VerticalContentAlignment}"
                                    Content="{TemplateBinding Content}"
                                    ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                    RecognizesAccessKey="True"
                                    TextBlock.Foreground="{TemplateBinding Foreground}" />
                                <Grid
                                    x:Name="DropDownIndicator"
                                    Grid.Row="2"
                                    Grid.Column="1"
                                    Margin="5"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Canvas.ZIndex="2"
                                    IsHitTestVisible="False"
                                    Visibility="{TemplateBinding DropDownIndicatorVisibility}">
                                    <telerik1:RadGlyph
                                        x:Name="arrow"
                                        Foreground="{telerik1:FluentResource ResourceKey=IconBrush}"
                                        Glyph="{StaticResource GlyphArrowChevronDown}" />
                                </Grid>
                            </Grid>
                        </mat:FluentControl>
                        <Popup
                            x:Name="DropDownPopup"
                            AllowsTransparency="True"
                            Focusable="False"
                            HorizontalOffset="0"
                            Placement="Bottom"
                            PopupAnimation="{TemplateBinding PopupAnimation}"
                            StaysOpen="False"
                            VerticalOffset="0">
                            <Grid x:Name="PopupGrid" Margin="3,0,3,3">
                                <mat:Shadow
                                    x:Name="PopupShadow"
                                    Background="{telerik1:FluentResource ResourceKey=AlternativeBrush}"
                                    BorderBrush="Transparent"
                                    BorderThickness="0"
                                    CornerRadius="{telerik1:FluentResource ResourceKey=CornerRadiusBottom}"
                                    ShadowDepth="{TemplateBinding mat:MaterialAssist.ShadowDepth}"
                                    SnapsToDevicePixels="True" />
                                <Border
                                    x:Name="DropDownPopupBorder"
                                    Width="{TemplateBinding DropDownWidth}"
                                    Height="{TemplateBinding DropDownHeight}"
                                    MinWidth="{TemplateBinding DropDownMinWidth}"
                                    MinHeight="{TemplateBinding DropDownMinHeight}"
                                    MaxWidth="{TemplateBinding DropDownMaxWidth}"
                                    MaxHeight="{TemplateBinding DropDownMaxHeight}"
                                    Background="{telerik1:FluentResource ResourceKey=AlternativeBrush}"
                                    BorderBrush="Transparent"
                                    BorderThickness="0"
                                    CornerRadius="{telerik1:FluentResource ResourceKey=CornerRadiusBottom}">
                                    <ContentControl
                                        x:Name="DropDownPopupContent"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Stretch"
                                        HorizontalContentAlignment="Stretch"
                                        VerticalContentAlignment="Stretch"
                                        Content="{TemplateBinding DropDownContent}"
                                        ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                        ContentTemplate="{TemplateBinding DropDownContentTemplate}"
                                        ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                        DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataContext}" />
                                </Border>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <!--  background is hidden  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True" />
                                <Condition Property="IsBackgroundVisible" Value="False" />
                                <Condition Property="IsMouseOver" Value="False" />
                                <Condition Property="IsOpen" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                        </MultiTrigger>

                        <!--  General IsFocused setters  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True" />
                                <Condition Property="IsKeyboardFocused" Value="True" />
                                <Condition Property="IsPressed" Value="False" />
                                <Condition Property="IsMouseOver" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Visible" />
                        </MultiTrigger>

                        <!--  General setters for IsMouseOver  -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}" />
                            <Setter TargetName="BorderVisual" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}" />
                        </Trigger>

                        <!--  General setters for IsPressed  -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.PressedBrush), Mode=OneWay}" />
                            <Setter TargetName="BorderVisual" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.PressedBrush), Mode=OneWay}" />
                        </Trigger>

                        <!--  General setters for IsOpen  -->
                        <Trigger Property="IsOpen" Value="True">
                            <Setter TargetName="arrow" Property="Glyph" Value="{StaticResource GlyphArrowChevronUp}" />
                            <Setter Property="CornerRadius" Value="{telerik1:FluentResource ResourceKey=CornerRadiusTop}" />
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="PopupShadow" Property="Visibility" Value="Visible" />
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CheckedBrush), Mode=OneWay}" />
                            <Setter TargetName="BorderVisual" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CheckedBrush), Mode=OneWay}" />
                        </Trigger>

                        <!--  disabled  -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Content" Property="Opacity" Value="{telerik1:FluentResource ResourceKey=DisabledOpacity}" />
                            <Setter Property="Background" Value="{telerik1:FluentResource ResourceKey=AlternativeBrush}" />
                            <Setter Property="BorderBrush" Value="{telerik1:FluentResource ResourceKey=AlternativeBrush}" />
                            <Setter TargetName="DropDownIndicator" Property="Opacity" Value="{telerik1:FluentResource ResourceKey=DisabledOpacity}" />
                        </Trigger>

                        <!--  disabled and focused  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                                <Condition Property="IsFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Collapsed" />
                        </MultiTrigger>

                        <!--  disabled & background is hidden  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                                <Condition Property="IsBackgroundVisible" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                        </MultiTrigger>

                        <!--  DropDownButtonPosition and DropDownPacement  -->
                        <Trigger Property="DropDownButtonPosition" Value="Bottom" />
                        <Trigger Property="DropDownButtonPosition" Value="Left">
                            <Setter TargetName="DropDownIndicator" Property="Grid.Column" Value="0" />
                            <Setter TargetName="DropDownIndicator" Property="Grid.Row" Value="1" />
                        </Trigger>
                        <Trigger Property="DropDownButtonPosition" Value="Top">
                            <Setter TargetName="DropDownIndicator" Property="Grid.Column" Value="1" />
                            <Setter TargetName="DropDownIndicator" Property="Grid.Row" Value="0" />
                        </Trigger>
                        <Trigger Property="DropDownButtonPosition" Value="Right">
                            <Setter TargetName="DropDownIndicator" Property="Grid.Column" Value="2" />
                            <Setter TargetName="DropDownIndicator" Property="Grid.Row" Value="1" />
                        </Trigger>
                        <Trigger Property="DropDownPlacement" Value="Bottom" />
                        <Trigger Property="DropDownPlacement" Value="Top">
                            <Setter TargetName="arrow" Property="Glyph" Value="{StaticResource GlyphArrowChevronUp}" />
                            <Setter TargetName="PopupShadow" Property="CornerRadius" Value="{telerik1:FluentResource ResourceKey=CornerRadiusTop}" />
                            <Setter TargetName="DropDownPopupBorder" Property="CornerRadius" Value="{telerik1:FluentResource ResourceKey=CornerRadiusTop}" />
                            <Setter TargetName="PopupGrid" Property="Margin" Value="3,3,3,0" />
                        </Trigger>
                        <Trigger Property="DropDownPlacement" Value="Left">
                            <Setter TargetName="arrow" Property="Glyph" Value="{StaticResource GlyphArrowChevronLeft}" />
                            <Setter TargetName="PopupShadow" Property="CornerRadius" Value="{telerik1:FluentResource ResourceKey=CornerRadiusLeft}" />
                            <Setter TargetName="DropDownPopupBorder" Property="CornerRadius" Value="{telerik1:FluentResource ResourceKey=CornerRadiusLeft}" />
                            <Setter TargetName="PopupGrid" Property="Margin" Value="3,3,0,3" />
                        </Trigger>
                        <Trigger Property="DropDownPlacement" Value="Right">
                            <Setter TargetName="arrow" Property="Glyph" Value="{StaticResource GlyphArrowChevronRight}" />
                            <Setter TargetName="PopupShadow" Property="CornerRadius" Value="{telerik1:FluentResource ResourceKey=CornerRadiusRight}" />
                            <Setter TargetName="DropDownPopupBorder" Property="CornerRadius" Value="{telerik1:FluentResource ResourceKey=CornerRadiusRight}" />
                            <Setter TargetName="PopupGrid" Property="Margin" Value="0,3,3,3" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsOpen" Value="True" />
                                <Condition Property="DropDownPlacement" Value="Top" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="arrow" Property="Glyph" Value="{StaticResource GlyphArrowChevronDown}" />
                            <Setter Property="CornerRadius" Value="{telerik1:FluentResource ResourceKey=CornerRadiusBottom}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsOpen" Value="True" />
                                <Condition Property="DropDownPlacement" Value="Left" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="arrow" Property="Glyph" Value="{StaticResource GlyphArrowChevronRight}" />
                            <Setter Property="CornerRadius" Value="{telerik1:FluentResource ResourceKey=CornerRadiusRight}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsOpen" Value="True" />
                                <Condition Property="DropDownPlacement" Value="Right" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="arrow" Property="Glyph" Value="{StaticResource GlyphArrowChevronLeft}" />
                            <Setter Property="CornerRadius" Value="{telerik1:FluentResource ResourceKey=CornerRadiusLeft}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource RadDropDownButtonStyle}" TargetType="telerik1:RadDropDownButton" />
    <Style
        x:Key="SplitButtonPartStyle"
        BasedOn="{StaticResource RadButtonStyle}"
        TargetType="telerik1:RadButton">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Visibility" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, Path=IsButtonPartVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
        <Setter Property="Background" Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="Padding" Value="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="IsBackgroundVisible" Value="{Binding IsBackgroundVisible, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="FontSize" Value="{Binding FontSize, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="MinHeight" Value="{Binding MinHeight, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="CornerRadius" Value="{telerik1:FluentResource ResourceKey=CornerRadiusLeft}" />
        <Setter Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessToOrientedThicknessConverter}, ConverterParameter=BottomLeftTop}" />
    </Style>
    <Style
        x:Key="SplitToggleButtonStyle"
        BasedOn="{StaticResource RadToggleButtonStyle}"
        TargetType="telerik1:RadToggleButton">
        <Setter Property="mat:MaterialAssist.CheckedBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CheckedBrush)}" />
        <Setter Property="mat:MaterialAssist.PressedBrush" Value="{telerik1:FluentResource ResourceKey=PressedBrush}" />
        <Setter Property="mat:MaterialAssist.FocusBrush" Value="{x:Null}" />
        <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:FluentResource ResourceKey=MouseOverBrush}" />
        <Setter Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessToOrientedThicknessConverter}, ConverterParameter=BottomRightTop}" />
        <Setter Property="Background" Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="FontSize" Value="{Binding FontSize, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=IconBrush}" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="CornerRadius" Value="{telerik1:FluentResource ResourceKey=CornerRadiusRight}" />
        <Setter Property="Focusable" Value="False" />
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:FluentResource ResourceKey=PressedBrush}" />
                <Setter Property="mat:MaterialAssist.PressedBrush" Value="{telerik1:FluentResource ResourceKey=MouseOverBrush}" />
                <Setter Property="mat:MaterialAssist.FocusBrush" Value="{x:Null}" />
                <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=IconBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="RadSplitButtonStyle" TargetType="telerik1:RadSplitButton">
        <Setter Property="mat:MaterialAssist.CheckedBrush" Value="{telerik1:FluentResource ResourceKey=PressedBrush}" />
        <Setter Property="mat:MaterialAssist.FocusBrush" Value="{telerik1:FluentResource ResourceKey=AccentFocusedBrush}" />
        <Setter Property="mat:MaterialAssist.ShadowDepth" Value="Depth1" />
        <Setter Property="ButtonPartStyle" Value="{StaticResource SplitButtonPartStyle}" />
        <Setter Property="TogglePartStyle" Value="{StaticResource SplitToggleButtonStyle}" />
        <Setter Property="FontFamily" Value="{telerik1:FluentResource ResourceKey=FontFamily}" />
        <Setter Property="FontSize" Value="{telerik1:FluentResource ResourceKey=FontSize}" />
        <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=MarkerBrush}" />
        <Setter Property="Background" Value="{telerik1:FluentResource ResourceKey=MainBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:FluentResource ResourceKey=BasicBrush}" />
        <Setter Property="CornerRadius" Value="{telerik1:FluentResource ResourceKey=CornerRadius}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="IsTabStop" Value="True" />
        <Setter Property="IsOpen" Value="False" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadSplitButton">
                    <Grid SnapsToDevicePixels="True">
                        <Border
                            x:Name="BorderVisual"
                            Background="{x:Null}"
                            BorderBrush="{x:Null}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            IsHitTestVisible="False"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <telerik1:RadButton
                                x:Name="ButtonPart"
                                Grid.Row="1"
                                Grid.Column="1"
                                Content="{TemplateBinding Content}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                Style="{TemplateBinding ButtonPartStyle}" />
                            <Rectangle
                                x:Name="Separator"
                                Grid.Row="1"
                                Grid.Column="1"
                                MinWidth="1"
                                MinHeight="1"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Stretch"
                                Fill="{TemplateBinding BorderBrush}"
                                Stroke="{x:Null}"
                                StrokeThickness="0" />
                            <telerik1:RadToggleButton
                                x:Name="DropDownPart"
                                Grid.Row="1"
                                Grid.Column="2"
                                IsBackgroundVisible="{TemplateBinding IsBackgroundVisible}"
                                IsChecked="{Binding Path=IsOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                Style="{TemplateBinding TogglePartStyle}"
                                Visibility="{TemplateBinding DropDownIndicatorVisibility}">
                                <telerik1:RadToggleButton.Content>
                                    <telerik1:RadGlyph
                                        x:Name="arrow"
                                        Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type telerik1:RadToggleButton}}}"
                                        Glyph="{StaticResource GlyphArrowChevronDown}" />
                                </telerik1:RadToggleButton.Content>
                            </telerik1:RadToggleButton>
                        </Grid>
                        <Border
                            x:Name="FocusVisual"
                            Grid.Row="1"
                            Grid.Column="2"
                            Background="{x:Null}"
                            BorderBrush="{TemplateBinding mat:MaterialAssist.FocusBrush}"
                            BorderThickness="{telerik1:FluentResource ResourceKey=FocusThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            IsHitTestVisible="False"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            Visibility="Collapsed" />
                        <Popup
                            x:Name="DropDownPopup"
                            AllowsTransparency="True"
                            Focusable="False"
                            HorizontalOffset="0"
                            Placement="Bottom"
                            PopupAnimation="{TemplateBinding PopupAnimation}"
                            StaysOpen="False"
                            VerticalOffset="0">
                            <Grid x:Name="PopupGrid" Margin="3,0,3,3">
                                <mat:Shadow
                                    x:Name="PopupShadow"
                                    Width="{TemplateBinding DropDownWidth}"
                                    Height="{TemplateBinding DropDownHeight}"
                                    Background="{telerik1:FluentResource ResourceKey=AlternativeBrush}"
                                    BorderBrush="{x:Null}"
                                    CornerRadius="{telerik1:FluentResource ResourceKey=CornerRadiusBottom}"
                                    ShadowDepth="{TemplateBinding mat:MaterialAssist.ShadowDepth}"
                                    SnapsToDevicePixels="True" />
                                <Border
                                    x:Name="DropDownPopupBorder"
                                    Width="{TemplateBinding DropDownWidth}"
                                    Height="{TemplateBinding DropDownHeight}"
                                    MinWidth="3"
                                    MinHeight="3"
                                    MaxWidth="{TemplateBinding DropDownMaxWidth}"
                                    MaxHeight="{TemplateBinding DropDownMaxHeight}"
                                    Background="{telerik1:FluentResource ResourceKey=AlternativeBrush}"
                                    BorderBrush="{telerik1:FluentResource ResourceKey=BasicBrush}"
                                    BorderThickness="0"
                                    CornerRadius="{telerik1:FluentResource ResourceKey=CornerRadiusBottom}">
                                    <ContentControl
                                        x:Name="DropDownPopupContent"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Stretch"
                                        HorizontalContentAlignment="Stretch"
                                        VerticalContentAlignment="Stretch"
                                        Content="{TemplateBinding DropDownContent}"
                                        ContentTemplate="{TemplateBinding DropDownContentTemplate}"
                                        DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataContext}" />
                                </Border>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <!--  background is hidden  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsBackgroundVisible" Value="False" />
                                <Condition Property="IsEnabled" Value="True" />
                                <Condition Property="IsOpen" Value="False" />
                                <Condition Property="IsMouseOver" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="Transparent" />
                            <Setter TargetName="BorderVisual" Property="BorderBrush" Value="Transparent" />
                        </MultiTrigger>

                        <!--  focused  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True" />
                                <Condition Property="IsOpen" Value="False" />
                                <Condition Property="IsMouseOver" Value="False" />
                                <Condition Property="IsKeyboardFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Visible" />
                        </MultiTrigger>

                        <!--  disabled and focused  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                                <Condition Property="IsFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Collapsed" />
                        </MultiTrigger>

                        <!--  disabled & background is hidden  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                                <Condition Property="IsBackgroundVisible" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="DropDownPart" Property="Foreground" Value="{telerik1:FluentResource ResourceKey=MarkerBrush}" />
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                        </MultiTrigger>

                        <!--  opened  -->
                        <Trigger Property="IsOpen" Value="True">
                            <Setter TargetName="ButtonPart" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CheckedBrush), Mode=OneWay}" />
                            <Setter TargetName="ButtonPart" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CheckedBrush), Mode=OneWay}" />
                            <Setter TargetName="Separator" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CheckedBrush), Mode=OneWay}" />
                            <Setter Property="CornerRadius" Value="{telerik1:FluentResource ResourceKey=CornerRadiusTop}" />
                            <Setter TargetName="arrow" Property="Glyph" Value="{StaticResource GlyphArrowChevronUp}" />
                        </Trigger>

                        <!--  DropDownButton Position  -->
                        <Trigger Property="DropDownButtonPosition" Value="Bottom">
                            <Setter TargetName="DropDownPart" Property="Grid.Column" Value="1" />
                            <Setter TargetName="DropDownPart" Property="Grid.Row" Value="2" />
                            <Setter TargetName="FocusVisual" Property="Grid.Column" Value="1" />
                            <Setter TargetName="FocusVisual" Property="Grid.Row" Value="2" />
                            <Setter TargetName="Separator" Property="HorizontalAlignment" Value="Stretch" />
                            <Setter TargetName="Separator" Property="VerticalAlignment" Value="Bottom" />
                            <Setter TargetName="DropDownPart" Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessToOrientedThicknessConverter}, ConverterParameter=RightBottomLeft}" />
                            <Setter TargetName="ButtonPart" Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessToOrientedThicknessConverter}, ConverterParameter=RightTopLeft}" />
                        </Trigger>
                        <Trigger Property="DropDownButtonPosition" Value="Left">
                            <Setter TargetName="DropDownPart" Property="Grid.Column" Value="0" />
                            <Setter TargetName="DropDownPart" Property="Grid.Row" Value="1" />
                            <Setter TargetName="FocusVisual" Property="Grid.Column" Value="0" />
                            <Setter TargetName="FocusVisual" Property="Grid.Row" Value="1" />
                            <Setter TargetName="Separator" Property="HorizontalAlignment" Value="Left" />
                            <Setter TargetName="Separator" Property="VerticalAlignment" Value="Stretch" />
                            <Setter TargetName="DropDownPart" Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessToOrientedThicknessConverter}, ConverterParameter=BottomLeftTop}" />
                            <Setter TargetName="ButtonPart" Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessToOrientedThicknessConverter}, ConverterParameter=BottomRightTop}" />
                        </Trigger>
                        <Trigger Property="DropDownButtonPosition" Value="Top">
                            <Setter TargetName="DropDownPart" Property="Grid.Column" Value="1" />
                            <Setter TargetName="DropDownPart" Property="Grid.Row" Value="0" />
                            <Setter TargetName="FocusVisual" Property="Grid.Column" Value="1" />
                            <Setter TargetName="FocusVisual" Property="Grid.Row" Value="0" />
                            <Setter TargetName="Separator" Property="HorizontalAlignment" Value="Stretch" />
                            <Setter TargetName="Separator" Property="VerticalAlignment" Value="Top" />
                            <Setter TargetName="DropDownPart" Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessToOrientedThicknessConverter}, ConverterParameter=RightTopLeft}" />
                            <Setter TargetName="ButtonPart" Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessToOrientedThicknessConverter}, ConverterParameter=RightBottomLeft}" />
                        </Trigger>
                        <Trigger Property="DropDownButtonPosition" Value="Right">
                            <Setter TargetName="DropDownPart" Property="Grid.Column" Value="2" />
                            <Setter TargetName="DropDownPart" Property="Grid.Row" Value="1" />
                            <Setter TargetName="FocusVisual" Property="Grid.Column" Value="2" />
                            <Setter TargetName="FocusVisual" Property="Grid.Row" Value="1" />
                            <Setter TargetName="Separator" Property="HorizontalAlignment" Value="Right" />
                            <Setter TargetName="Separator" Property="VerticalAlignment" Value="Stretch" />
                        </Trigger>

                        <!--  ButtonPartVisibility - Hidden  -->
                        <Trigger Property="IsButtonPartVisible" Value="False">
                            <Setter TargetName="DropDownPart" Property="Grid.Row" Value="0" />
                            <Setter TargetName="DropDownPart" Property="Grid.RowSpan" Value="3" />
                            <Setter TargetName="DropDownPart" Property="Grid.Column" Value="0" />
                            <Setter TargetName="DropDownPart" Property="Grid.ColumnSpan" Value="3" />
                            <Setter TargetName="DropDownPart" Property="IsTabStop" Value="True" />
                            <Setter TargetName="DropDownPart" Property="CornerRadius" Value="{telerik1:FluentResource ResourceKey=CornerRadius}" />
                            <Setter TargetName="FocusVisual" Property="Grid.Row" Value="0" />
                            <Setter TargetName="FocusVisual" Property="Grid.RowSpan" Value="3" />
                            <Setter TargetName="FocusVisual" Property="Grid.Column" Value="0" />
                            <Setter TargetName="FocusVisual" Property="Grid.ColumnSpan" Value="3" />
                            <Setter TargetName="ButtonPart" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="Separator" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="DropDownPart" Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness}" />
                        </Trigger>

                        <!--  DropDownIndicatorVisibility - Hidden  -->
                        <Trigger Property="DropDownIndicatorVisibility" Value="Collapsed">
                            <Setter TargetName="Separator" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="ButtonPart" Property="CornerRadius" Value="{telerik1:FluentResource ResourceKey=CornerRadius}" />
                            <Setter TargetName="ButtonPart" Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness}" />
                            <Setter TargetName="FocusVisual" Property="Grid.Row" Value="1" />
                            <Setter TargetName="FocusVisual" Property="Grid.Column" Value="1" />
                        </Trigger>
                        <Trigger Property="DropDownPlacement" Value="Bottom" />
                        <Trigger Property="DropDownPlacement" Value="Top">
                            <Setter TargetName="arrow" Property="Glyph" Value="{StaticResource GlyphArrowChevronUp}" />
                            <Setter TargetName="PopupShadow" Property="CornerRadius" Value="{telerik1:FluentResource ResourceKey=CornerRadiusTop}" />
                            <Setter TargetName="DropDownPopupBorder" Property="CornerRadius" Value="{telerik1:FluentResource ResourceKey=CornerRadiusTop}" />
                            <Setter TargetName="PopupGrid" Property="Margin" Value="3,3,3,0" />
                        </Trigger>
                        <Trigger Property="DropDownPlacement" Value="Left">
                            <Setter TargetName="arrow" Property="Glyph" Value="{StaticResource GlyphArrowChevronLeft}" />
                            <Setter TargetName="PopupShadow" Property="CornerRadius" Value="{telerik1:FluentResource ResourceKey=CornerRadiusLeft}" />
                            <Setter TargetName="DropDownPopupBorder" Property="CornerRadius" Value="{telerik1:FluentResource ResourceKey=CornerRadiusLeft}" />
                            <Setter TargetName="PopupGrid" Property="Margin" Value="3,3,0,3" />
                        </Trigger>
                        <Trigger Property="DropDownPlacement" Value="Right">
                            <Setter TargetName="arrow" Property="Glyph" Value="{StaticResource GlyphArrowChevronRight}" />
                            <Setter TargetName="PopupShadow" Property="CornerRadius" Value="{telerik1:FluentResource ResourceKey=CornerRadiusRight}" />
                            <Setter TargetName="DropDownPopupBorder" Property="CornerRadius" Value="{telerik1:FluentResource ResourceKey=CornerRadiusRight}" />
                            <Setter TargetName="PopupGrid" Property="Margin" Value="0,3,3,3" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="DropDownPlacement" Value="Left" />
                                <Condition Property="IsOpen" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="arrow" Property="Glyph" Value="{StaticResource GlyphArrowChevronRight}" />
                            <Setter Property="CornerRadius" Value="{telerik1:FluentResource ResourceKey=CornerRadiusRight}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="DropDownPlacement" Value="Top" />
                                <Condition Property="IsOpen" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="arrow" Property="Glyph" Value="{StaticResource GlyphArrowChevronDown}" />
                            <Setter Property="CornerRadius" Value="{telerik1:FluentResource ResourceKey=CornerRadiusBottom}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="DropDownPlacement" Value="Right" />
                                <Condition Property="IsOpen" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="arrow" Property="Glyph" Value="{StaticResource GlyphArrowChevronLeft}" />
                            <Setter Property="CornerRadius" Value="{telerik1:FluentResource ResourceKey=CornerRadiusLeft}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource RadSplitButtonStyle}" TargetType="telerik1:RadSplitButton" />
    <ControlTemplate x:Key="StringFilterEditorTemplate" TargetType="filteringEditors:StringFilterEditor">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <TextBox
                MinWidth="120"
                VerticalAlignment="Stretch"
                telerik1:TextBoxBehavior.SelectAllOnGotFocus="True"
                telerik1:TextBoxBehavior.UpdateTextOnEnter="True"
                Text="{Binding Text, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" />
            <telerik1:RadToggleButton
                Grid.Column="1"
                MinWidth="28"
                MinHeight="28"
                Margin="5,0,0,0"
                Padding="0"
                HorizontalAlignment="Center"
                VerticalAlignment="Bottom"
                HorizontalContentAlignment="Center"
                VerticalContentAlignment="Center"
                Content="aA"
                FontFamily="{telerik1:FluentResource ResourceKey=FontFamily}"
                FontSize="{telerik1:FluentResource ResourceKey=FontSize}"
                IsChecked="{Binding IsCaseSensitive, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                Visibility="{Binding MatchCaseVisibility, RelativeSource={RelativeSource TemplatedParent}}">
                <ToolTipService.ToolTip>
                    <ToolTip telerik1:LocalizationManager.ResourceKey="GridViewFilterMatchCase" />
                </ToolTipService.ToolTip>
            </telerik1:RadToggleButton>
        </Grid>
    </ControlTemplate>
    <Style x:Key="StringFilterEditorStyle" TargetType="filteringEditors:StringFilterEditor">
        <Setter Property="Template" Value="{StaticResource StringFilterEditorTemplate}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
    </Style>
    <Style BasedOn="{StaticResource StringFilterEditorStyle}" TargetType="filteringEditors:StringFilterEditor" />
    <DataTemplate x:Key="DefaultLegendItemContentTemplate">
        <StackPanel Orientation="Horizontal">
            <Path
                Width="12"
                Height="12"
                Fill="{Binding MarkerFill}">
                <Path.Data>
                    <Binding Path="ActualMarkerGeometry" RelativeSource="{RelativeSource AncestorType=legend:LegendItemControl}" />
                </Path.Data>
            </Path>
            <TextBlock Margin="2" Text="{Binding Title}" />
        </StackPanel>
    </DataTemplate>
    <Style x:Key="LegendItemControlStyle" TargetType="legend:LegendItemControl">
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="MarkerGeometry" Value="{Binding MarkerGeometry}" />
        <Setter Property="ContentTemplate" Value="{StaticResource DefaultLegendItemContentTemplate}" />
        <Setter Property="DefaultMarkerGeometry">
            <Setter.Value>
                <Binding Path="DefaultMarkerGeometry" RelativeSource="{RelativeSource AncestorType=telerik1:RadLegend}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="legend:LegendItemControl">
                    <Border
                        x:Name="PART_OuterBorder"
                        Margin="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStatesGroup">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Faded">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="PART_OuterBorder"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="0.5"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Highlighted">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_OuterBorder" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <SolidColorBrush Color="#FFF1F1F1" />
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RadLegendStyle" TargetType="telerik1:RadLegend">
        <Setter Property="DefaultMarkerGeometry">
            <Setter.Value>
                <RectangleGeometry Rect="1 1 10 10" />
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate" Value="{StaticResource DefaultLegendItemContentTemplate}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadLegend">
                    <Border
                        Margin="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <ItemsControl ItemsPanel="{TemplateBinding ItemsPanel}" ItemsSource="{TemplateBinding Items}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <legend:LegendItemControl
                                        Content="{Binding}"
                                        ContentTemplate="{Binding ItemTemplate, RelativeSource={RelativeSource AncestorType=telerik1:RadLegend}}"
                                        IsHovered="{Binding IsHovered, Mode=TwoWay}"
                                        VisualState="{Binding VisualState}" />
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource LegendItemControlStyle}" TargetType="legend:LegendItemControl" />
    <Style BasedOn="{StaticResource RadLegendStyle}" TargetType="telerik1:RadLegend" />
    <Style x:Key="LinearDropVisualStyle" TargetType="dragDrop:LinearDropVisual">
        <Setter Property="IsHitTestVisible" Value="False" />
        <Setter Property="BorderThickness" Value="3" />
        <Setter Property="BorderBrush" Value="{telerik1:FluentResource ResourceKey=AccentMouseOverBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dragDrop:LinearDropVisual">
                    <Grid
                        x:Name="DropCueElement"
                        VerticalAlignment="Stretch"
                        IsHitTestVisible="{TemplateBinding IsHitTestVisible}">
                        <Grid
                            x:Name="VerticalState"
                            Height="11"
                            Margin="0,-4,0,0"
                            VerticalAlignment="Top"
                            Visibility="Collapsed">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="11" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Ellipse
                                Width="11"
                                Height="11"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Fill="{TemplateBinding Background}"
                                SnapsToDevicePixels="True"
                                Stroke="{TemplateBinding BorderBrush}"
                                StrokeThickness="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness.Left}" />
                            <Rectangle
                                Grid.Column="1"
                                Height="3"
                                Margin="0,4,0,0"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Top"
                                Fill="{TemplateBinding BorderBrush}"
                                SnapsToDevicePixels="True"
                                Stroke="{TemplateBinding BorderBrush}" />
                        </Grid>
                        <Grid
                            x:Name="HorizontalState"
                            Width="11"
                            Margin="-4,0,0,0"
                            HorizontalAlignment="Left"
                            Visibility="Collapsed">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="11" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Ellipse
                                Width="11"
                                Height="11"
                                Margin="0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Fill="{TemplateBinding Background}"
                                SnapsToDevicePixels="True"
                                Stroke="{TemplateBinding BorderBrush}"
                                StrokeThickness="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness.Left}" />
                            <Rectangle
                                Grid.Row="1"
                                Width="3"
                                Margin="0,-1,0,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Stretch"
                                Fill="{TemplateBinding BorderBrush}"
                                SnapsToDevicePixels="True"
                                Stroke="{TemplateBinding BorderBrush}" />
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="OrientationStates">
                                <VisualState x:Name="Horizontal">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalState" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalState" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Vertical">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalState" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalState" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource LinearDropVisualStyle}" TargetType="dragDrop:LinearDropVisual" />
    <Style x:Key="RadWatermarkTextBoxStyle" TargetType="telerik1:RadWatermarkTextBox">
        <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:FluentResource ResourceKey=PrimaryMouseOverBrush}" />
        <Setter Property="mat:MaterialAssist.FocusBrush" Value="{telerik1:FluentResource ResourceKey=AccentFocusedBrush}" />
        <Setter Property="mat:MaterialAssist.CornerRadius" Value="{telerik1:FluentResource ResourceKey=CornerRadius}" />
        <Setter Property="SelectionBrush" Value="{telerik1:FluentResource ResourceKey=AccentMouseOverBrush}" />
        <Setter Property="FontFamily" Value="{telerik1:FluentResource ResourceKey=FontFamily}" />
        <Setter Property="FontSize" Value="{telerik1:FluentResource ResourceKey=FontSize}" />
        <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=MarkerBrush}" />
        <Setter Property="Background" Value="{telerik1:FluentResource ResourceKey=PrimaryBrush}" />
        <Setter Property="ReadOnlyBackground" Value="{telerik1:FluentResource ResourceKey=ReadOnlyBackgroundBrush}" />
        <Setter Property="DisabledBackground" Value="{telerik1:FluentResource ResourceKey=PrimaryBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:FluentResource ResourceKey=BasicBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="AllowDrop" Value="True" />
        <Setter Property="IsTabStop" Value="True" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Once" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="telerik1:CaretBrushHelper.CaretBrush" Value="{telerik1:FluentResource ResourceKey=MarkerMouseOverBrush}" />
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ValidationTooltipTemplate}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadWatermarkTextBox">
                    <Grid x:Name="RootElement">
                        <Border
                            x:Name="BorderVisual"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}" />
                        <Border
                            x:Name="ReadOnlyVisual"
                            Background="{TemplateBinding ReadOnlyBackground}"
                            BorderBrush="{telerik1:FluentResource ResourceKey=ReadOnlyBorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                            IsHitTestVisible="False"
                            Visibility="Collapsed" />
                        <Border
                            x:Name="FocusVisual"
                            Background="{x:Null}"
                            BorderBrush="{TemplateBinding mat:MaterialAssist.FocusBrush}"
                            BorderThickness="{telerik1:FluentResource ResourceKey=FocusThickness}"
                            CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                            IsHitTestVisible="False"
                            Visibility="Collapsed" />
                        <ScrollViewer
                            x:Name="PART_ContentHost"
                            Margin="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            mat:MaterialAssist.CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                            Background="Transparent"
                            BorderThickness="0"
                            IsTabStop="False"
                            Opacity="{telerik1:FluentResource ResourceKey=InputOpacity}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <ContentControl
                            x:Name="WatermarkVisualElement"
                            Padding="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding WatermarkContent}"
                            ContentTemplate="{TemplateBinding WatermarkTemplate}"
                            FontStyle="Italic"
                            Foreground="{TemplateBinding Foreground}"
                            IsHitTestVisible="False"
                            IsTabStop="False"
                            Opacity="{telerik1:FluentResource ResourceKey=InputOpacity}"
                            Visibility="Hidden">
                            <ContentControl.Template>
                                <ControlTemplate TargetType="ContentControl">
                                    <ContentPresenter Margin="{TemplateBinding Padding}" />
                                </ControlTemplate>
                            </ContentControl.Template>
                        </ContentControl>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=MarkerMouseOverBrush}" />
                            <Setter TargetName="PART_ContentHost" Property="Opacity" Value="1" />
                            <Setter TargetName="WatermarkVisualElement" Property="Opacity" Value="1" />
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}" />
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter Property="BorderThickness" Value="{telerik1:FluentResource ResourceKey=FocusThickness}" />
                            <Setter TargetName="PART_ContentHost" Property="Opacity" Value="{telerik1:FluentResource ResourceKey=ReadOnlyOpacity}" />
                            <Setter TargetName="WatermarkVisualElement" Property="Opacity" Value="{telerik1:FluentResource ResourceKey=ReadOnlyOpacity}" />
                            <Setter TargetName="ReadOnlyVisual" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DisabledBackground}" />
                            <Setter TargetName="PART_ContentHost" Property="Opacity" Value="{telerik1:FluentResource ResourceKey=DisabledOpacity}" />
                            <Setter TargetName="WatermarkVisualElement" Property="Opacity" Value="{telerik1:FluentResource ResourceKey=DisabledOpacity}" />
                        </Trigger>
                        <Trigger Property="IsWatermarkVisible" Value="True">
                            <Setter TargetName="WatermarkVisualElement" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=MarkerMouseOverBrush}" />
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}" />
                            <Setter TargetName="PART_ContentHost" Property="Opacity" Value="1" />
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Visible" />
                        </Trigger>

                        <!--  Invalid  -->
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource RadWatermarkTextBoxStyle}" TargetType="telerik1:RadWatermarkTextBox" />
    <Style x:Key="DragVisualStyle" TargetType="telerikDragDrop:DragVisual">
        <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=MarkerBrush}" />
        <Setter Property="Background" Value="{telerik1:FluentResource ResourceKey=AlternativeBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:FluentResource ResourceKey=BasicBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Margin" Value="5,0,0,0" />
        <Setter Property="Padding" Value="0,5,5,5" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerikDragDrop:DragVisual">
                    <Grid>
                        <Border
                            x:Name="SecondItemVisual"
                            Margin="4,4,0,0"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Opacity="0.8"
                            Visibility="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=IsDraggingMultipleItems, Converter={StaticResource BooleanToVisibilityConverter}}" />
                        <Border
                            x:Name="ThirdthItemVisual"
                            Margin="2"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Opacity="0.8"
                            Visibility="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=IsDraggingMultipleItems, Converter={StaticResource BooleanToVisibilityConverter}}" />
                        <Border
                            x:Name="DragBackgroundVisual"
                            Margin="0,0,4,4"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Opacity="0.8" />
                        <Border Padding="{TemplateBinding BorderThickness}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <telerik1:RadGlyph
                                    x:Name="NoneEffect"
                                    Margin="5,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    Foreground="{telerik1:FluentResource ResourceKey=ValidationBrush}"
                                    Glyph="{StaticResource GlyphCancel}"
                                    Visibility="Collapsed" />
                                <telerik1:RadGlyph
                                    x:Name="MoveEffect"
                                    Margin="5,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    Foreground="{telerik1:FluentResource ResourceKey=IconBrush}"
                                    Glyph="{StaticResource GlyphArrowRight}"
                                    Visibility="Collapsed" />
                                <telerik1:RadGlyph
                                    x:Name="CopyEffect"
                                    Margin="5,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    Foreground="{telerik1:FluentResource ResourceKey=IconBrush}"
                                    Glyph="{StaticResource GlyphPlus}"
                                    Visibility="Collapsed" />
                                <telerik1:RadGlyph
                                    x:Name="LinkEffect"
                                    Margin="5,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    Foreground="{telerik1:FluentResource ResourceKey=IconBrush}"
                                    Glyph="{StaticResource GlyphLinkHorizontal}"
                                    Visibility="Collapsed" />
                                <telerik1:RadGlyph
                                    x:Name="ScrollEffect"
                                    Margin="5,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    Foreground="{telerik1:FluentResource ResourceKey=IconBrush}"
                                    Glyph="{StaticResource GlyphArrowsKpi}"
                                    Visibility="Collapsed" />
                                <ContentPresenter
                                    x:Name="Content"
                                    Grid.Column="1"
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Content="{TemplateBinding Content}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Effects" Value="None">
                            <Setter TargetName="NoneEffect" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="Effects" Value="Move">
                            <Setter TargetName="MoveEffect" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="Effects" Value="Copy">
                            <Setter TargetName="CopyEffect" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="Effects" Value="Move, Scroll">
                            <Setter TargetName="MoveEffect" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="Effects" Value="Copy, Scroll">
                            <Setter TargetName="CopyEffect" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="Effects" Value="Link">
                            <Setter TargetName="LinkEffect" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="Effects" Value="Scroll">
                            <Setter TargetName="ScrollEffect" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource DragVisualStyle}" TargetType="telerikDragDrop:DragVisual" />
    <Style x:Key="RadListBoxItemStyle" TargetType="telerik1:RadListBoxItem">
        <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:FluentResource ResourceKey=MouseOverBrush}" />
        <Setter Property="mat:MaterialAssist.PressedBrush" Value="{telerik1:FluentResource ResourceKey=PressedBrush}" />
        <Setter Property="mat:MaterialAssist.CheckedBrush" Value="{telerik1:FluentResource ResourceKey=AccentBrush}" />
        <Setter Property="mat:MaterialAssist.FocusBrush" Value="{telerik1:FluentResource ResourceKey=AccentFocusedBrush}" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=MarkerBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0,1" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Local" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadListBoxItem">
                    <Grid Background="Transparent">
                        <Grid Margin="0">
                            <Border
                                x:Name="BorderVisual"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <Border
                                x:Name="FocusVisual"
                                Background="{x:Null}"
                                BorderBrush="{TemplateBinding mat:MaterialAssist.FocusBrush}"
                                BorderThickness="{telerik1:FluentResource ResourceKey=FocusThickness}"
                                IsHitTestVisible="False"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                Visibility="Collapsed" />
                            <mat:FluentControl
                                x:Name="Fluent"
                                HorizontalContentAlignment="Stretch"
                                VerticalContentAlignment="Stretch"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                ClipToBounds="True">
                                <ContentControl
                                    x:Name="contentPresenter"
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Content="{TemplateBinding Content}"
                                    ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                    Foreground="{TemplateBinding Foreground}"
                                    IsTabStop="False" />
                            </mat:FluentControl>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <!--  Focused  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="True" />
                                <Condition Property="IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Visible" />
                        </MultiTrigger>

                        <!--  IsSelected  -->
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:FluentResource ResourceKey=AccentMouseOverBrush}" />
                            <Setter Property="mat:MaterialAssist.PressedBrush" Value="{telerik1:FluentResource ResourceKey=AccentPressedBrush}" />
                            <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=MarkerInvertedBrush}" />
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CheckedBrush), Mode=OneWay}" />
                            <Setter TargetName="BorderVisual" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CheckedBrush), Mode=OneWay}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}" />
                            <Setter TargetName="BorderVisual" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}" />
                        </Trigger>
                        <Trigger SourceName="Fluent" Property="IsPressed" Value="True">
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.PressedBrush), Mode=OneWay}" />
                            <Setter TargetName="BorderVisual" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.PressedBrush), Mode=OneWay}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="contentPresenter" Property="Opacity" Value="{telerik1:FluentResource ResourceKey=DisabledOpacity}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="ListBoxDragVisualStyle"
        BasedOn="{StaticResource DragVisualStyle}"
        TargetType="telerikDragDrop:ListBoxDragVisual">
        <Setter Property="FontFamily" Value="{telerik1:FluentResource ResourceKey=FontFamily}" />
        <Setter Property="FontSize" Value="{telerik1:FluentResource ResourceKey=FontSize}" />
        <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=MarkerInvertedBrush}" />
        <Setter Property="Background" Value="{telerik1:FluentResource ResourceKey=AccentBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:FluentResource ResourceKey=AccentBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="5,6" />
        <Setter Property="Margin" Value="12,0,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerikDragDrop:DragVisual">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Border
                                x:Name="DragBackgroundVisual"
                                Grid.ColumnSpan="2"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Opacity="0.9" />
                            <telerik1:RadGlyph
                                x:Name="NoneEffect"
                                Margin="5,5,0,5"
                                VerticalAlignment="Top"
                                Foreground="{TemplateBinding Foreground}"
                                Glyph="{StaticResource GlyphCancel}"
                                Visibility="Collapsed" />
                            <ItemsControl
                                Grid.Column="1"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                ItemsSource="{Binding DraggedItemsStrings}" />
                        </Grid>
                        <Grid x:Name="lowerGrid" Grid.Row="1">
                            <Border
                                Background="{telerik1:FluentResource ResourceKey=AlternativeBrush}"
                                BorderThickness="0"
                                Opacity="0.8" />
                            <StackPanel Margin="5,6" Orientation="Horizontal">
                                <telerik1:RadGlyph
                                    Margin="0,0,5,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"
                                    FontSize="16"
                                    Foreground="{telerik1:FluentResource ResourceKey=IconBrush}"
                                    Glyph="{StaticResource GlyphInsertUp}"
                                    Visibility="{Binding DropPosition, Converter={StaticResource DragDropBooleanToVisibilityConverter}, ConverterParameter=Before}" />
                                <telerik1:RadGlyph
                                    Margin="0,0,5,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"
                                    FontSize="16"
                                    Foreground="{telerik1:FluentResource ResourceKey=IconBrush}"
                                    Glyph="{StaticResource GlyphInsertDown}"
                                    Visibility="{Binding DropPosition, Converter={StaticResource DragDropBooleanToVisibilityConverter}, ConverterParameter=After}" />
                                <TextBlock Foreground="{telerik1:FluentResource ResourceKey=MarkerBrush}" Text="{Binding DropPosition}" />
                                <TextBlock
                                    Margin="1,0,3,0"
                                    Foreground="{telerik1:FluentResource ResourceKey=MarkerBrush}"
                                    Text=":" />
                                <TextBlock Foreground="{telerik1:FluentResource ResourceKey=MarkerBrush}" Text="{Binding DropItemString}" />
                            </StackPanel>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Effects" Value="None">
                            <Setter TargetName="NoneEffect" Property="Visibility" Value="Visible" />
                            <Setter TargetName="lowerGrid" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Effects" Value="Move">
                            <Setter TargetName="NoneEffect" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RadListBoxStyle" TargetType="telerik1:RadListBox">
        <Setter Property="mat:MaterialAssist.CornerRadius" Value="0" />
        <Setter Property="FontFamily" Value="{telerik1:FluentResource ResourceKey=FontFamily}" />
        <Setter Property="FontSize" Value="{telerik1:FluentResource ResourceKey=FontSize}" />
        <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=MarkerBrush}" />
        <Setter Property="Background" Value="{telerik1:FluentResource ResourceKey=AlternativeBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:FluentResource ResourceKey=BasicBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="telerik1:ScrollingSettingsBehavior.IsEnabled" Value="True" />
        <Setter Property="telerik1:ScrollingSettingsBehavior.ScrollAreaPadding" Value="30" />

        <!--  ScrollStep should be at least the ActualHeight of the ListBoxItem when scrolling is item based.  -->
        <Setter Property="telerik1:ScrollingSettingsBehavior.ScrollStep" Value="28" />
        <Setter Property="telerik1:ScrollingSettingsBehavior.ScrollStepTime" Value="00:00:00.05" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Once" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadListBox">
                    <Grid UseLayoutRounding="True">
                        <Border
                            x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}">
                            <ScrollViewer
                                x:Name="PART_ScrollViewer"
                                Padding="{TemplateBinding Padding}"
                                Background="{x:Null}"
                                BorderBrush="{x:Null}"
                                BorderThickness="0"
                                HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                IsTabStop="False"
                                VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                                <ScrollViewer.InputBindings>
                                    <KeyBinding
                                        Key="A"
                                        Command="telerikPrimitives:ListControl.SelectAllCommand"
                                        Modifiers="Control" />
                                </ScrollViewer.InputBindings>
                                <ItemsPresenter ClipToBounds="True" />
                            </ScrollViewer>
                        </Border>
                        <ContentPresenter
                            x:Name="dragVisualPlaceholder"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Visibility="Collapsed" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource RadListBoxStyle}" TargetType="telerik1:RadListBox" />
    <Style BasedOn="{StaticResource RadListBoxItemStyle}" TargetType="telerik1:RadListBoxItem" />
    <Style BasedOn="{StaticResource ListBoxDragVisualStyle}" TargetType="telerikDragDrop:ListBoxDragVisual" />
    <Style x:Key="TouchIndicatorStyle" TargetType="touch:TouchIndicator">
        <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=AccentBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="touch:TouchIndicator">
                    <Grid>
                        <telerikShapes:Arc
                            x:Name="PART_InnerArc"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top"
                            ArcThickness="3"
                            EndAngle="0.001"
                            Fill="{TemplateBinding Foreground}"
                            RenderTransformOrigin="0.5 0.5"
                            StartAngle="0.001"
                            Stretch="None"
                            StrokeThickness="0">
                            <telerikShapes:Arc.Effect>
                                <telerik1:IsFullTrust>
                                    &lt;DropShadowEffect xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;
                                    ShadowDepth=&quot;0&quot; Color=&quot;Black&quot; Opacity=&quot;0.5&quot; BlurRadius=&quot;5&quot;/&gt;
                                </telerik1:IsFullTrust>
                            </telerikShapes:Arc.Effect>
                            <telerikShapes:Arc.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform />
                                    <TranslateTransform />
                                </TransformGroup>
                            </telerikShapes:Arc.RenderTransform>
                        </telerikShapes:Arc>
                        <telerikShapes:Arc
                            x:Name="PART_OuterArc"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top"
                            ArcThickness="4"
                            EndAngle="0.001"
                            Fill="{TemplateBinding Foreground}"
                            RenderTransformOrigin="0.5 0.5"
                            StartAngle="0.001"
                            Stretch="None"
                            StrokeThickness="0">
                            <telerikShapes:Arc.Effect>
                                <telerik1:IsFullTrust>
                                    &lt;DropShadowEffect xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;
                                    ShadowDepth=&quot;0&quot; Color=&quot;Black&quot; Opacity=&quot;0.5&quot; BlurRadius=&quot;5&quot;/&gt;
                                </telerik1:IsFullTrust>
                            </telerikShapes:Arc.Effect>
                            <telerikShapes:Arc.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform />
                                    <TranslateTransform />
                                </TransformGroup>
                            </telerikShapes:Arc.RenderTransform>
                        </telerikShapes:Arc>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource TouchIndicatorStyle}" TargetType="touch:TouchIndicator" />
    <Style x:Key="TouchSelectorStyle" TargetType="touch:TouchSelector">
        <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=AccentBrush}" />
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Width" Value="10" />
        <Setter Property="Height" Value="10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="touch:TouchSelector">
                    <Grid
                        x:Name="container"
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        Margin="-10,0,0,0"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        Canvas.ZIndex="1000">
                        <Ellipse
                            x:Name="beginEllipse"
                            Width="10"
                            Height="10"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            Fill="{TemplateBinding Foreground}"
                            Stroke="{TemplateBinding BorderBrush}"
                            StrokeThickness="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness.Left}"
                            Visibility="Collapsed">
                            <Ellipse.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform />
                                    <TranslateTransform />
                                </TransformGroup>
                            </Ellipse.RenderTransform>
                        </Ellipse>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="Common">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="beginEllipse" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Center">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="beginEllipse" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="beginEllipse" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="-5" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Hidden">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="beginEllipse" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource TouchSelectorStyle}" TargetType="touch:TouchSelector" />
    <Style x:Key="RadFluidContentControlStyle" TargetType="telerik1:RadFluidContentControl">
        <Setter Property="Transition">
            <Setter.Value>
                <telerikTransitions:FadeTransition />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadFluidContentControl">
                    <Grid>
                        <telerikTransitonControl:LayoutAnimationPanel x:Name="PART_RootElement">
                            <Border
                                telerikTransitonControl:LayoutAnimationPanel.HeightWeight="0"
                                telerikTransitonControl:LayoutAnimationPanel.WidthWeight="0"
                                BorderBrush="#01000000"
                                BorderThickness="1" />
                            <telerikTransitonControl:TransitionPresenter
                                x:Name="ContentElement"
                                telerikTransitonControl:LayoutAnimationPanel.HeightWeight="1"
                                telerikTransitonControl:LayoutAnimationPanel.WidthWeight="1"
                                telerikTransitonControl:TransitionPresenter.AnimationStretch="None"
                                Canvas.ZIndex="2"
                                CurrentContent="{TemplateBinding VisibleContent}"
                                CurrentContentTemplate="{TemplateBinding VisibleContentTemplate}"
                                Host="{Binding ElementName=PART_RootElement}"
                                Transition="{TemplateBinding Transition}"
                                Duration="{TemplateBinding TransitionDuration}" />
                            <Rectangle
                                x:Name="OldContentPresenter"
                                Width="{Binding OldVisualWidth, ElementName=ContentElement}"
                                Height="{Binding OldVisualHeight, ElementName=ContentElement}"
                                telerikTransitonControl:LayoutAnimationPanel.HeightWeight="1"
                                telerikTransitonControl:LayoutAnimationPanel.WidthWeight="1"
                                Canvas.ZIndex="1"
                                Fill="{Binding OldVisualBrush, ElementName=ContentElement}"
                                Opacity="0.0" />
                        </telerikTransitonControl:LayoutAnimationPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource RadFluidContentControlStyle}" TargetType="telerik1:RadFluidContentControl" />
    <Style x:Key="PasswordBoxButtonStyle" TargetType="telerik1:RadButton">
        <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:FluentResource ResourceKey=MouseOverBrush}" />
        <Setter Property="mat:MaterialAssist.PressedBrush" Value="{telerik1:FluentResource ResourceKey=PressedBrush}" />
        <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=IconBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="5,0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadButton">
                    <Grid>
                        <Border
                            x:Name="BorderVisual"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}" />
                        <mat:FluentControl
                            HorizontalContentAlignment="Stretch"
                            VerticalContentAlignment="Stretch"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            EffectMode="Glow"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <ContentPresenter
                                x:Name="Content"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Content}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                RecognizesAccessKey="True"
                                TextBlock.Foreground="{TemplateBinding Foreground}" />
                        </mat:FluentControl>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.PressedBrush), Mode=OneWay}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Content" Property="Opacity" Value="{telerik1:FluentResource ResourceKey=DisabledOpacity}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <DataTemplate x:Key="PasswordButtonContentTemplate">
        <telerik1:RadGlyph
            FontSize="16"
            Glyph="{StaticResource GlyphPreview}"
            TextOptions.TextRenderingMode="Aliased" />
    </DataTemplate>
    <Style x:Key="RadPasswordBoxStyle" TargetType="telerik1:RadPasswordBox">
        <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:FluentResource ResourceKey=PrimaryMouseOverBrush}" />
        <Setter Property="mat:MaterialAssist.FocusBrush" Value="{telerik1:FluentResource ResourceKey=AccentFocusedBrush}" />
        <Setter Property="mat:MaterialAssist.CornerRadius" Value="{telerik1:FluentResource ResourceKey=CornerRadius}" />
        <Setter Property="SelectionBrush" Value="{telerik1:FluentResource ResourceKey=AccentMouseOverBrush}" />
        <Setter Property="FontFamily" Value="{telerik1:FluentResource ResourceKey=FontFamily}" />
        <Setter Property="FontSize" Value="{telerik1:FluentResource ResourceKey=FontSize}" />
        <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=MarkerBrush}" />
        <Setter Property="Background" Value="{telerik1:FluentResource ResourceKey=PrimaryBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:FluentResource ResourceKey=BasicBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="5,5,0,5" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="AllowDrop" Value="True" />
        <Setter Property="IsTabStop" Value="True" />
        <Setter Property="ShowPasswordButtonContentTemplate" Value="{StaticResource PasswordButtonContentTemplate}" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Once" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ValidationTooltipTemplate}" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadPasswordBox">
                    <Grid x:Name="RootElement">
                        <Border
                            x:Name="BorderVisual"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}" />
                        <Border
                            x:Name="ReadOnlyVisual"
                            Background="{telerik1:FluentResource ResourceKey=ReadOnlyBackgroundBrush}"
                            BorderBrush="{telerik1:FluentResource ResourceKey=ReadOnlyBorderBrush}"
                            BorderThickness="{telerik1:FluentResource ResourceKey=FocusThickness}"
                            CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                            IsHitTestVisible="False"
                            Visibility="Collapsed" />
                        <Grid Margin="{TemplateBinding BorderThickness}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ScrollViewer
                                x:Name="PART_ContentHost"
                                Padding="{TemplateBinding Padding}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                mat:MaterialAssist.CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                                Background="Transparent"
                                BorderThickness="0"
                                IsTabStop="False"
                                Opacity="{telerik1:FluentResource ResourceKey=InputOpacity}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <telerik1:RadButton
                                x:Name="PART_ShowPasswordButton"
                                Grid.Column="1"
                                HorizontalAlignment="Right"
                                Content="{TemplateBinding ShowPasswordButtonContent}"
                                ContentTemplate="{TemplateBinding ShowPasswordButtonContentTemplate}"
                                CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                                Cursor="Hand"
                                Focusable="False"
                                IsTabStop="False"
                                Style="{StaticResource PasswordBoxButtonStyle}" />
                            <ContentControl
                                x:Name="WatermarkVisualElement"
                                Padding="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding WatermarkContent}"
                                ContentTemplate="{TemplateBinding WatermarkTemplate}"
                                FontStyle="Italic"
                                Foreground="{TemplateBinding Foreground}"
                                IsHitTestVisible="False"
                                IsTabStop="False"
                                Visibility="Hidden">
                                <ContentControl.Template>
                                    <ControlTemplate TargetType="ContentControl">
                                        <ContentPresenter Margin="{TemplateBinding Padding}" />
                                    </ControlTemplate>
                                </ContentControl.Template>
                            </ContentControl>
                        </Grid>
                        <Border
                            x:Name="FocusVisual"
                            Background="{x:Null}"
                            BorderBrush="{TemplateBinding mat:MaterialAssist.FocusBrush}"
                            BorderThickness="{telerik1:FluentResource ResourceKey=FocusThickness}"
                            CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                            IsHitTestVisible="False"
                            Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=CurrentText.Length}" Value="0" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ShowPasswordButtonVisibility}" Value="Auto" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Padding" Value="5" />
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=ShowPasswordButtonVisibility}" Value="Never">
                            <Setter Property="Padding" Value="5" />
                        </DataTrigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter Property="BorderBrush" Value="Transparent" />
                            <Setter TargetName="PART_ContentHost" Property="Opacity" Value="{telerik1:FluentResource ResourceKey=ReadOnlyOpacity}" />
                            <Setter TargetName="ReadOnlyVisual" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_ContentHost" Property="Opacity" Value="{telerik1:FluentResource ResourceKey=DisabledOpacity}" />
                            <Setter TargetName="WatermarkVisualElement" Property="Opacity" Value="{telerik1:FluentResource ResourceKey=DisabledOpacity}" />
                        </Trigger>

                        <!--  MouseOver  -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=MarkerMouseOverBrush}" />
                            <Setter TargetName="PART_ContentHost" Property="Opacity" Value="1" />
                            <Setter TargetName="PART_ContentHost" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}" />
                        </Trigger>

                        <!--  Focused and animation Enabled  -->
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=MarkerMouseOverBrush}" />
                            <Setter TargetName="PART_ContentHost" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}" />
                            <Setter TargetName="PART_ContentHost" Property="Opacity" Value="1" />
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsWatermarkVisible" Value="True">
                            <Setter TargetName="WatermarkVisualElement" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsReadOnly" Value="True" />
                                <Condition Property="IsWatermarkVisible" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="WatermarkVisualElement" Property="Visibility" Value="Hidden" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource RadPasswordBoxStyle}" TargetType="telerik1:RadPasswordBox" />
</ResourceDictionary>
